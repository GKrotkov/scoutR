---
title: "WLS as Row Replication"
format: html
author: "Gabriel Krotkov"
---

This notebook shows that Weighted Least Squares (WLS) estimation produces exactly the same coefficients as row-replication. 

```{r, warning = FALSE, message = FALSE}
library(devtools)
library(DT)
load_all()

w <- c(1, 3, 2)
w <- normalize_weights(w, len_out = nrow(iris))
```

# Row Replication Fit

The `weight_rows` function applies the normalized weights to the dataframe, replicating rows a number of times equal to the weight applied to each bin. For example, if $w = c(1, 3, 2)$, the first third of rows will be replicated 1 time (which is to say no change), the middle third of rows will be replicated 3 times, and the final third of rows will be replicated twice.

```{r}
replicated <- weight_rows(iris, w)

datatable(iris, options = list(pageLength = 10, scrollX = TRUE))
datatable(replicated, options = list(pageLength = 10, scrollX = TRUE))

row_replication_fit <- lm(
    Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, 
    data = replicated
)
```


# WLS Fit

```{r}
wls_fit <- lm(
    Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
    data = iris, weights = w
)
```

# Comparison

As you can see by inspecting the model summaries, the coefficients for both constructions are exactly the same. The standard errors are not exactly equal - the WLS fit actually incorporates the weighting into the Hessian matrix so the SEs are more accurate for that 

```{r}
summary(row_replication_fit)

summary(wls_fit)
```

And lastly to confirm, let's check that all the coefficients are equal (within a very small tolerance.)

```{r}
all.equal(coefficients(row_replication_fit), coefficients(wls_fit))
```

