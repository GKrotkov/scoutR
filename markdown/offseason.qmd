---
title: "offseason"
format: html
---

```{r}
library(devtools)
load_all()
```

# Historical

```{r ncrc, message = FALSE}
formal_teams <- c(117, 695, 1507, 2539, 2559, 2656, 3173, 3504, 
                  4150, 4467, 5740, 8393, 9022, 9475, 9653)

informal_teams <- c(9989)

matches <- lapply(formal_teams, team_matches, year = 2024)
matches <- matches %>%
    reduce(full_join)
# check for duplicated matches
stopifnot(!any(duplicated(matches)))

matches$red_amp_eff <- matches$red_teleopTotalNotePoints / 
    (matches$red_teleopAmpNoteCount + matches$red_teleopSpeakerNoteCount)
matches$blue_amp_eff <- matches$blue_teleopTotalNotePoints / 
    (matches$blue_teleopAmpNoteCount + matches$blue_teleopSpeakerNoteCount)

history <- get_multifield_df(matches, fields = id_robot_fields(matches))
history <- history %>%
    mutate(
        mobility_pct = autoLine.Yes / (autoLine.Yes + autoLine.No),
        park_pct = endGame.Parked / (autoLine.Yes + autoLine.No),
        hang_pct = (endGame.CenterStage + endGame.StageLeft + 
                         endGame.StageRight) / (autoLine.Yes + autoLine.No),
        none_pct = (endGame.None) / (autoLine.Yes + autoLine.No)
    )

history <- history[history$id %in% paste0("frc", formal_teams), ]
history$id <- as.numeric(substr(history$id, 4, nchar(history$id)))
history <- history[order(history$id), ]

history$epa <- sapply(
    history$id, function(n){read_team_year_statbotics(n, 2024)$epa_end})

history$auto_epa <- sapply(
    history$id, function(n){read_team_year_statbotics(n, 2024)$auto_epa_end})

history$teleop_epa <- sapply(
    history$id, function(n){read_team_year_statbotics(n, 2024)$teleop_epa_end})

history$endgame_epa <- sapply(
    history$id, function(n){read_team_year_statbotics(n, 2024)$endgame_epa_end})

# informal teams should be NA for all these
history <- rbind(history, NA)
history$id <- c(formal_teams, informal_teams)
rownames(history) <- history$id

write_csv(history, file = "../data/ncrc/ncrc24.csv")
```

# Match processing

```{r}
ncrc <- read.csv("../data/ncrc/ncrc_matches.csv")

ncrc$teleop <- ncrc$total - ncrc$stage - ncrc$auto - ncrc$penalty
ncrc$amp_eff <- ncrc$teleop / ncrc$n_notes

red_idx <- seq(1, nrow(ncrc), 2)
blue_idx <- seq(2, nrow(ncrc), 2)

colors <- data.frame(
    red1 = ncrc$team1[red_idx], 
    red2 = ncrc$team2[red_idx], 
    red3 = ncrc$team3[red_idx], 
    blue1 = ncrc$team1[blue_idx], 
    blue2 = ncrc$team2[blue_idx], 
    blue3 = ncrc$team3[blue_idx], 
    red_score = ncrc$total[red_idx], 
    blue_score = ncrc$total[blue_idx], 
    red_auto = ncrc$auto[red_idx], 
    blue_auto = ncrc$auto[blue_idx], 
    red_amp_eff = ncrc$amp_eff[red_idx], 
    blue_amp_eff = ncrc$amp_eff[blue_idx], 
    red_opp_penalty = ncrc$opp_penalty[red_idx], 
    blue_opp_penalty = ncrc$opp_penalty[blue_idx]
)

total_fit <- fit_lineup_lm(
    colors, list(red = colors$red_score, blue = colors$blue_score)
)

penalty_fit <- fit_lineup_lm(
    colors, list(red = colors$red_opp_penalty, blue = colors$blue_opp_penalty)
)

auto_fit <- fit_lineup_lm(
    colors, list(red = colors$red_auto, blue = colors$blue_auto)
)

amp_eff <- fit_lineup_lm(
    colors, list(red = colors$red_amp_eff, blue = colors$blue_amp_eff)
)

viz <- data.frame(id = names(coefficients(total_fit)), 
                  total = coefficients(total_fit), 
                  penalties = coefficients(penalty_fit), 
                  auto = coefficients(auto_fit), 
                  amp_eff = coefficients(amp_eff))

viz$id <- substr(viz$id, 2, nchar(viz$id))
```

```{r}
plt <- ggplot(viz, aes(label = id, x = total, y = auto, size = amp_eff)) + 
    geom_label(alpha = 0.5)

plt

plt <- ggplot(viz, aes(label = id, x = total, y = auto, size = amp_eff)) + 
    geom_point(alpha = 0.5)

ggplotly(plt)
```
