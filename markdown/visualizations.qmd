---
title: "visualizations"
format: html
---

# Idle amp efficiency ideas

```{r}
library(devtools)
load_all()

newton <- event_matches("2024new", match_type = "qual")
newton <- newton %>%
    mutate(
        red_teleop_note_count = red_teleopAmpNoteCount + 
            red_teleopSpeakerNoteCount + red_teleopSpeakerNoteAmplifiedCount,
        red_amp_eff = red_teleopTotalNotePoints / red_teleop_note_count, 
        blue_teleop_note_count = blue_teleopAmpNoteCount + 
            blue_teleopSpeakerNoteCount + blue_teleopSpeakerNoteAmplifiedCount,
        blue_amp_eff = blue_teleopTotalNotePoints / blue_teleop_note_count)

fit <- fit_lineup_lm(
    newton, list(red = newton$red_amp_eff, blue = newton$blue_amp_eff))

viz <- data.frame(id = names(coefficients(fit)), amp_eff = coefficients(fit))

fit <- fit_lineup_lm(
    newton, 
    list(red = newton$red_teleop_note_count, 
         blue = newton$blue_teleop_note_count))

viz$volume <- coefficients(fit)

viz$id <- substr(viz$id, 4, nchar(viz$id))

plt <- ggplot(viz, aes(x = amp_eff, y = volume, label = id)) + 
    geom_text(alpha = 0.4)

library(plotly)
library(dplyr)
library(gapminder)
library(babynames)

ggplotly(plt)
```

# 2017 Points Efficiency

```{r}
library(tidyverse)
library(plotly)
library(reshape2)

df <- data.frame(
    gears = 1:12, 
    pts = c(0, rep(40, 4), rep(80, 6), 120), 
    eff = c(rep(40 / 2, 2), rep(40 / 4, 4), rep(40 / 6, 6))
)

ggplot(df, aes(x = gears, y = pts)) + 
    geom_line() + 
    labs(title = "Steamworks Gear Points", 
         x = "# Of Gears Scored", y = "Points") + 
    theme_bw()

ggplot(df, aes(x = gears, y = eff)) + 
    geom_line() + 
    labs(title = "Steamworks Gear Point Efficiency", 
         x = "# Of Gears Scored", y = "Points/Gear") + 
    theme_bw()

df <- melt(df, "gears")
df$variable <- ifelse(df$variable == "pts", "Points", "Points/Gear")

ggplot(df, aes(x = gears, y = value, col = variable)) + 
    geom_step() + 
    labs(title = "Steamworks (2017) Gear Scoring", 
         subtitle = "Ignoring auto or playoff bonuses",
         x = "# of Gears Scored", y = "Value", 
         color = "") + 
    scale_x_continuous(breaks = 1:12) + 
    theme_bw()
```

