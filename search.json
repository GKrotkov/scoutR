[{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODO","title":"TODO","text":"Reminder: package one thing, well. Strive keep additions scoutR scoped, modular, testable.","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"periodic","dir":"","previous_headings":"","what":"Periodic","title":"TODO","text":"renv::snapshot() update libraries devtools::document() call roxygen documentation handlers","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"package-management","dir":"","previous_headings":"","what":"Package Management","title":"TODO","text":"testthat validation key fxns","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"opr-stabilization","dir":"","previous_headings":"","what":"OPR Stabilization","title":"TODO","text":"https://youtu./xJYv7uxXMn0?t=5774 “Precision” OPR","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"regularization","dir":"","previous_headings":"","what":"Regularization","title":"TODO","text":"Also: elasticnet regression, optimizing lambda (penalty value) alpha (mixing parameter) use penalty term like lambda stabilize OPR early, can use effectively less data? compute optimal lambda function matches/team? regularize, instead biasing towards 0 (like Ridge) bias towards good prior, like average previous years’ performances? can combine optimzation results multiple different events? (lambda alpha) Quang & Ron’s code RAPM: https://ryurko.github.io/cmu_score_preprints/basketball/nba-rapm.html","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"data-science-projects","dir":"","previous_headings":"","what":"Data Science Projects","title":"TODO","text":"Dropout: subtract teams -showed match played exactly 0 offense many matches needed get good seeding? (https://www.chiefdelphi.com/t/-many-matches--needed--get-good-seeding/462857) Principled model predict district points cutoff","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"long-term","dir":"","previous_headings":"","what":"Long term","title":"TODO","text":"Generic, automated data validation; validatoR Local EPA calculation ftc-events api functions (“ftc_readR” series)","code":""},{"path":"https://gkrotkov.github.io/scoutR/TODO.html","id":"httr-decisions","dir":"","previous_headings":"","what":"httr decisions","title":"TODO","text":"Statbotics API functions use httr2, TBA API functions use httr. avoids needing revamp TBA readR.","code":""},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Intro to scoutR","text":"Hello! introduction using scoutR, assuming might even first-time R user. scoutR library R programming language designed facilitate scouting & data science FIRST Robotics Competition.","code":""},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"r-and-rstudio","dir":"Articles","previous_headings":"Getting Started","what":"R and RStudio","title":"Intro to scoutR","text":"scoutR package R programming language, open-source statistical programming language popular support statistical programming, data science, data visualization. typical IDE used R programming RStudio, published Posit. can download install R programming language RStudio . can use IDEs (Visual Studio Code popular one, example) program R, RStudio specifically designed support R programming.","code":""},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"package-installation","dir":"Articles","previous_headings":"Getting Started","what":"Package Installation","title":"Intro to scoutR","text":"already devtools installed, need install first. , run line code R console: Installation code run . run installation machine, suggest deleting commenting installation code don’t accidentally rerun code running entire file. installed devtools, can install scoutR. install scoutR, run following line code R console.","code":"# only run this code once! install.packages(\"devtools\") devtools::install_github(\"gkrotkov/scoutR\")"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"initialization","dir":"Articles","previous_headings":"Getting Started","what":"Initialization","title":"Intro to scoutR","text":"Next, need initialize scoutR TBA auth key. can generate TBA authorization key www.thebluealliance.com/account “Read API Keys” header. auth key, replace string code auth key! (auth key needs quotations around )","code":"library(scoutR) initialize_scoutR(\"<replace this with your auth key!>\")"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"functions-demo","dir":"Articles","previous_headings":"","what":"Functions Demo","title":"Intro to scoutR","text":"’ve installed initialized scoutR, can start using handy functions provides! functions find using competition. every exported function scoutR, can run help(fxn_name) pull documentation listing function’s usage, parameters, examples.","code":""},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"event_matches","dir":"Articles","previous_headings":"Functions Demo","what":"event_matches()","title":"Intro to scoutR","text":"find function real workhorse scouting applications. function takes TBA-legal event key (examples: “2023mil”, “2025njtab”) returns dataframe data matches played event. key parameter function match_type, can “”, “qual”, “playoff”.","code":"mil23 <- event_matches(\"2023mil\") # use match_type to subset down to only the matches you want mil23_quals <- event_matches(\"2023mil\", match_type = \"qual\") mil23_playoffs <- event_matches(\"2023mil\", match_type = \"playoff\")  # take a look at all the useful data! head(mil23) ## # A tibble: 6 × 103 ##   actual_time blue_dq_team_keys blue_score blue_surrogate_team_keys blue1  blue2 ##         <int> <lgl>                  <int> <list>                   <chr>  <chr> ## 1  1681997904 NA                        90 <NULL>                   frc50… frc5… ## 2  1681998310 NA                       135 <NULL>                   frc41… frc9… ## 3  1681998767 NA                       139 <NULL>                   frc10… frc5… ## 4  1681999168 NA                       122 <NULL>                   frc12… frc9… ## 5  1681999586 NA                       132 <NULL>                   frc26… frc2… ## 6  1681999996 NA                        89 <NULL>                   frc90… frc4… ## # ℹ 97 more variables: blue3 <chr>, red_dq_team_keys <lgl>, red_score <int>, ## #   red_surrogate_team_keys <list>, red1 <chr>, red2 <chr>, red3 <chr>, ## #   comp_level <fct>, event_key <chr>, key <chr>, match_number <int>, ## #   post_result_time <int>, predicted_time <int>, ## #   blue_activationBonusAchieved <lgl>, blue_adjustPoints <int>, ## #   blue_autoBridgeState <chr>, blue_autoChargeStationPoints <int>, ## #   blue_autoChargeStationRobot1 <chr>, blue_autoChargeStationRobot2 <chr>, …"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"event_tangibles","dir":"Articles","previous_headings":"Functions Demo","what":"event_tangibles()","title":"Intro to scoutR","text":"event_tangibles() allows pull single-robot records TBA one line code, based standard TBA naming schema since 2018.","code":"# defaults to only pulling data from qualification matches vagle25_tangibles <- event_tangibles(\"2025vagle\") # but if you suppress the qual_only flag, you'll get playoffs as well vagle25_tangibles <- event_tangibles(\"2025vagle\", qual_only = FALSE) head(vagle25_tangibles) ##         id autoline_yes_pct autoline_no_pct endgame_deepcage_pct ## 1 frc10224             0.93            0.07                    0 ## 2 frc10257             1.00            0.00                    0 ## 3 frc10370             1.00            0.00                    0 ## 4  frc1086             1.00            0.00                    0 ## 5  frc1262             1.00            0.00                    0 ## 6  frc1522             0.93            0.07                    0 ##   endgame_parked_pct endgame_none_pct n_matches_count ## 1               0.57             0.43              14 ## 2               1.00             0.00              12 ## 3               0.85             0.15              13 ## 4               0.56             0.44              16 ## 5               0.60             0.40              15 ## 6               0.73             0.27              15"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"events","dir":"Articles","previous_headings":"Functions Demo","what":"events()","title":"Intro to scoutR","text":"Retrieve events given year, flags get key-return official-events","code":"chargedup_events <- events(2023) head(chargedup_events) ## # A tibble: 6 × 30 ##   address    city  country district division_keys end_date event_code event_type ##   <chr>      <chr> <chr>   <list>   <list>        <chr>    <chr>           <int> ## 1 700 Monro… Hunt… USA     <NULL>   <NULL>        2023-04… alhu                0 ## 2 1001 Aven… Hous… USA     <NULL>   <NULL>        2023-04… arc                 3 ## 3 915 E Mar… Sear… USA     <NULL>   <NULL>        2023-03… arli                0 ## 4 1529 E Pa… Sear… USA     <NULL>   <NULL>        2023-09… aroz               99 ## 5 44 Waterl… Macq… Austra… <NULL>   <NULL>        2023-05… audd               99 ## 6 Corner Cr… Woll… Austra… <NULL>   <NULL>        2023-03… ausc                0 ## # ℹ 22 more variables: event_type_string <chr>, first_event_code <chr>, ## #   first_event_id <chr>, gmaps_place_id <chr>, gmaps_url <chr>, key <chr>, ## #   lat <dbl>, lng <dbl>, location_name <chr>, name <chr>, ## #   parent_event_key <chr>, playoff_type <int>, playoff_type_string <chr>, ## #   postal_code <chr>, short_name <chr>, start_date <chr>, state_prov <chr>, ## #   timezone <chr>, webcasts <list>, website <chr>, week <int>, year <int> chargedup_official_events <- events(2023, official = TRUE) head(chargedup_official_events) ## # A tibble: 6 × 30 ##   address    city  country district division_keys end_date event_code event_type ##   <chr>      <chr> <chr>   <list>   <list>        <chr>    <chr>           <int> ## 1 700 Monro… Hunt… USA     <NULL>   <NULL>        2023-04… alhu                0 ## 2 1001 Aven… Hous… USA     <NULL>   <NULL>        2023-04… arc                 3 ## 3 915 E Mar… Sear… USA     <NULL>   <NULL>        2023-03… arli                0 ## 4 Corner Cr… Woll… Austra… <NULL>   <NULL>        2023-03… ausc                0 ## 5 6330 W Gr… Glen… USA     <NULL>   <NULL>        2023-03… azgl                0 ## 6 6935 E Go… Scot… USA     <NULL>   <NULL>        2023-03… azva                0 ## # ℹ 22 more variables: event_type_string <chr>, first_event_code <chr>, ## #   first_event_id <chr>, gmaps_place_id <chr>, gmaps_url <chr>, key <chr>, ## #   lat <dbl>, lng <dbl>, location_name <chr>, name <chr>, ## #   parent_event_key <chr>, playoff_type <int>, playoff_type_string <chr>, ## #   postal_code <chr>, short_name <chr>, start_date <chr>, state_prov <chr>, ## #   timezone <chr>, webcasts <list>, website <chr>, week <int>, year <int> crescendo_keys <- events(2024, keys = TRUE) head(crescendo_keys) ## [1] \"2024alhu\" \"2024arc\"  \"2024arli\" \"2024aroz\" \"2024audd\" \"2024ausc\""},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"qual_schedule","dir":"Articles","previous_headings":"Functions Demo","what":"qual_schedule()","title":"Intro to scoutR","text":"Retrieve posted qual schedule. Usually, ’ll want direct CSV use whatever scouting application ’re using depends schedule.","code":"mdpas <- qual_schedule(\"2025mdpas\") head(mdpas) ## # A tibble: 6 × 7 ##   match_number  red1  red2  red3 blue1 blue2 blue3 ##          <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ## 1            1  6863  2377   620  4638  8590  2963 ## 2            2  2849  8326  8622  1111  5243  1727 ## 3            3  5841  6239  5830  1418  7886  5115 ## 4            4  2537  6213  1629   686  4821   888 ## 5            5  2912  1719   612  5338   116  1915 ## 6            6  4456  4541  7770  9072  8726  5549 # write.csv(mdpas, file = \"2025mdpas_schedule.csv\")"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"team_awards","dir":"Articles","previous_headings":"Functions Demo","what":"team_awards()","title":"Intro to scoutR","text":"Get awards won given team. Includes optional parameters filter year event.","code":"gos_awards_history <- team_awards(3504) head(gos_awards_history) ## # A tibble: 6 × 5 ##   award_type event_key name                                 recipient_list  year ##        <int> <chr>     <chr>                                <list>         <int> ## 1         10 2011dc    Rookie All Star Award                <list [1]>      2011 ## 2         10 2011pit   Rookie All Star Award                <list [1]>      2011 ## 3         29 2012ohc   Innovation in Control Award sponsor… <list [1]>      2012 ## 4         31 2012pit   Website Award                        <list [1]>      2012 ## 5          4 2012pit   FIRST Dean's List Finalist Award     <list [2]>      2012 ## 6          9 2012pit   Engineering Inspiration Award        <list [1]>      2012"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"event_coprs","dir":"Articles","previous_headings":"Functions Demo","what":"event_coprs()","title":"Intro to scoutR","text":"Retrieve component OPRs posted TBA “Insights” page.","code":"vagle25_coprs <- event_coprs(\"2025vagle\") head(vagle25_coprs) ## # A tibble: 6 × 34 ##   team     `L1 Coral Count` `L2 Coral Count` `L3 Coral Count` `L4 Coral Count` ##   <chr>               <dbl>            <dbl>            <dbl>            <dbl> ## 1 frc10224             0.1             -0.13             1.02             2.9  ## 2 frc10257             0.58            -0.58             0.48             0.18 ## 3 frc10370             4.01            -0.12            -0.47            -0.08 ## 4 frc1086              1.27             1.65             2.1              0.69 ## 5 frc1262              0.05             1.42             2.06             0.14 ## 6 frc1522             -0.22             0.72             2.17             0.44 ## # ℹ 29 more variables: `Total Algae Count` <dbl>, `Total Coral Count` <dbl>, ## #   `Total Coral Points` <dbl>, `Total Game Piece Count` <dbl>, ## #   adjustPoints <dbl>, algaePoints <dbl>, autoBonusAchieved <dbl>, ## #   autoCoralCount <dbl>, autoCoralPoints <dbl>, autoMobilityPoints <dbl>, ## #   autoPoints <dbl>, bargeBonusAchieved <dbl>, coopertitionCriteriaMet <dbl>, ## #   coralBonusAchieved <dbl>, endGameBargePoints <dbl>, foulCount <dbl>, ## #   foulPoints <dbl>, g206Penalty <dbl>, g410Penalty <dbl>, …"},{"path":"https://gkrotkov.github.io/scoutR/articles/intro.html","id":"prescout","dir":"Articles","previous_headings":"Functions Demo","what":"prescout()","title":"Intro to scoutR","text":"function useful mostly prescouting - retrieves tangibles results available TBA, along team’s record EPA. Future updates include season max (c)OPRs last week seen.","code":"newton24_prescout <- prescout(\"2024new\") head(newton24_prescout) ##    id                     name              city state_prov country autoLine_No ## 1  58            The Riot Crew    South Portland      Maine     USA           3 ## 2  59                  RamTech             Miami    Florida     USA           2 ## 3  85 B.O.B. (Built on Brains)           Zeeland   Michigan     USA           1 ## 4 111                WildStang Arlington Heights   Illinois     USA           1 ## 5 254         The Cheesy Poofs          San Jose California     USA           0 ## 6 294    Beach Cities Robotics     Redondo Beach California     USA           2 ##   autoLine_Yes endGame_Parked endGame_StageLeft endGame_StageRight endGame_None ## 1           58             19                13                 21            3 ## 2           56             14                20                 14            6 ## 3           58             18                15                 10           14 ## 4           44             23                 0                  0           22 ## 5           51              4                 2                  7            1 ## 6           52             12                 7                 16            3 ##   endGame_CenterStage n_matches_count wins losses ties winrate   epa ## 1                   5              61   40     21    0  0.6557 27.08 ## 2                   4              58   32     26    0  0.5517 35.79 ## 3                   2              59   33     23    0  0.5893 32.61 ## 4                   0              45   22     23    0  0.4889 38.28 ## 5                  37              51   45      5    0  0.9000 51.44 ## 6                  16              54   37     16    0  0.6981 25.36 ##   Amplification Rate_opr_max Total Auto Game Pieces_opr_max Total Mic_opr_max ## 1                       0.20                           2.68              0.62 ## 2                       0.45                           2.06              0.28 ## 3                       0.27                           2.83              0.23 ## 4                       0.36                           2.19              0.14 ## 5                       0.38                           4.42              0.60 ## 6                       0.28                           2.07              0.07 ##   Total Overall Game Pieces_opr_max Total Teleop Game Pieces_opr_max ## 1                              9.22                             7.24 ## 2                              8.73                             6.76 ## 3                              9.74                             7.94 ## 4                             12.66                            10.48 ## 5                             14.39                            11.07 ## 6                              9.66                             7.59 ##   Total Trap_opr_max adjustPoints_opr_max autoAmpNoteCount_opr_max ## 1               0.04                    0                     0.03 ## 2               0.75                    0                     0.06 ## 3               0.12                    0                     0.00 ## 4               0.09                    0                     0.01 ## 5               0.90                    0                     0.14 ## 6               0.08                    0                     0.00 ##   autoAmpNotePoints_opr_max autoLeavePoints_opr_max autoPoints_opr_max ## 1                      0.05                    1.88              15.26 ## 2                      0.11                    2.33              12.00 ## 3                      0.00                    1.84              15.96 ## 4                      0.02                    1.76              12.67 ## 5                      0.28                    2.25              23.41 ## 6                      0.00                    1.87              11.64 ##   autoSpeakerNoteCount_opr_max autoSpeakerNotePoints_opr_max ## 1                         2.70                         13.52 ## 2                         2.14                         10.69 ## 3                         2.89                         14.46 ## 4                         2.18                         10.89 ## 5                         4.41                         22.04 ## 6                         2.07                         10.37 ##   autoTotalNotePoints_opr_max coopNotePlayed_opr_max ## 1                       13.48                   0.40 ## 2                       10.53                   0.49 ## 3                       14.34                   0.55 ## 4                       10.91                   0.42 ## 5                       22.06                   0.47 ## 6                       10.37                   0.45 ##   coopertitionBonusAchieved_opr_max coopertitionCriteriaMet_opr_max ## 1                              0.34                            0.40 ## 2                              0.57                            0.49 ## 3                              0.44                            0.55 ## 4                              0.40                            0.42 ## 5                              0.33                            0.47 ## 6                              0.37                            0.45 ##   endGameHarmonyPoints_opr_max endGameNoteInTrapPoints_opr_max ## 1                         0.42                            0.19 ## 2                         0.04                            3.73 ## 3                         0.48                            0.62 ## 4                         0.30                            0.47 ## 5                        -0.03                            4.52 ## 6                         0.21                            0.42 ##   endGameOnStagePoints_opr_max endGameParkPoints_opr_max ## 1                         2.58                      0.55 ## 2                         3.97                      0.50 ## 3                         1.83                      0.75 ## 4                         0.64                      0.57 ## 5                         3.62                      0.26 ## 6                         2.57                      0.59 ##   endGameSpotLightBonusPoints_opr_max endGameTotalStagePoints_opr_max ## 1                                0.44                            2.77 ## 2                                0.39                            7.29 ## 3                                0.23                            2.73 ## 4                                0.06                            1.48 ## 5                                0.46                            8.29 ## 6                                0.09                            3.25 ##   ensembleBonusAchieved_opr_max ensembleBonusOnStageRobotsThreshold_opr_max ## 1                          0.18                                        0.67 ## 2                          0.55                                        0.67 ## 3                          0.36                                        0.67 ## 4                          0.09                                        0.67 ## 5                          0.54                                        0.67 ## 6                          0.45                                        0.67 ##   ensembleBonusStagePointsThreshold_opr_max foulCount_opr_max ## 1                                      3.33              0.31 ## 2                                      3.33              0.31 ## 3                                      3.33              0.32 ## 4                                      3.33              0.22 ## 5                                      3.33              0.29 ## 6                                      3.33              1.03 ##   foulPoints_opr_max g206Penalty_opr_max g408Penalty_opr_max ## 1               5.86                   0                   0 ## 2               4.75                   0                   0 ## 3               4.85                   0                   0 ## 4               0.72                   0                   0 ## 5               3.87                   0                   0 ## 6               3.13                   0                   0 ##   g424Penalty_opr_max melodyBonusAchieved_opr_max melodyBonusThreshold_opr_max ## 1                0.21                        0.41                         7.08 ## 2                0.12                        0.42                         6.62 ## 3                0.11                        0.63                         7.44 ## 4                0.05                        0.61                         6.71 ## 5                0.12                        0.69                         7.45 ## 6                0.11                        0.40                         7.43 ##   melodyBonusThresholdCoop_opr_max melodyBonusThresholdNonCoop_opr_max ## 1                                7                                8.33 ## 2                                7                                8.33 ## 3                                7                                8.33 ## 4                                7                                8.33 ## 5                                7                                8.33 ## 6                                7                                8.33 ##   micCenterStage_opr_max micStageLeft_opr_max micStageRight_opr_max rp_opr_max ## 1                   0.12                 0.31                  0.23       2.05 ## 2                   0.04                 0.21                  0.13       1.93 ## 3                   0.08                 0.11                  0.04       1.98 ## 4                   0.00                 0.08                  0.11       1.23 ## 5                   0.21                 0.10                  0.29       2.22 ## 6                   0.02                 0.05                  0.20       1.53 ##   techFoulCount_opr_max teleopAmpNoteCount_opr_max teleopAmpNotePoints_opr_max ## 1                  0.48                       2.37                        2.37 ## 2                  0.44                       3.88                        3.88 ## 3                  0.27                       2.77                        2.77 ## 4                  0.26                       4.24                        4.24 ## 5                  0.60                       3.82                        3.82 ## 6                  0.74                       2.79                        2.79 ##   teleopPoints_opr_max teleopSpeakerNoteAmplifiedCount_opr_max ## 1                20.00                                    1.78 ## 2                26.97                                    3.43 ## 3                22.00                                    2.31 ## 4                33.43                                    5.52 ## 5                46.45                                    6.62 ## 6                24.38                                    2.70 ##   teleopSpeakerNoteAmplifiedPoints_opr_max teleopSpeakerNoteCount_opr_max ## 1                                     8.90                           4.35 ## 2                                    17.15                           3.43 ## 3                                    11.56                           5.14 ## 4                                    27.59                           1.26 ## 5                                    33.08                           3.13 ## 6                                    13.50                           2.91 ##   teleopSpeakerNotePoints_opr_max teleopTotalNotePoints_opr_max ## 1                            8.69                         17.23 ## 2                            6.86                         19.93 ## 3                           10.29                         19.53 ## 4                            2.52                         33.27 ## 5                            6.27                         38.17 ## 6                            5.82                         21.30 ##   totalPoints_opr_max trapCenterStage_opr_max trapStageLeft_opr_max ## 1               37.15                    0.00                  0.06 ## 2               42.91                    0.00                  0.52 ## 3               36.41                    0.02                  0.01 ## 4               44.75                    0.02                  0.00 ## 5               62.86                    0.79                  0.13 ## 6               39.16                    0.00                  0.08 ##   trapStageRight_opr_max last week seen ## 1                   0.02              6 ## 2                   0.23              6 ## 3                   0.16              6 ## 4                   0.11              5 ## 5                   0.07              6 ## 6                   0.11              6"},{"path":"https://gkrotkov.github.io/scoutR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Krotkov. Maintainer.","code":""},{"path":"https://gkrotkov.github.io/scoutR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krotkov G (2025). scoutR: FRC Scouting Aide R Users. R package version 1.0, https://github.com/GKrotkov/scoutR.","code":"@Manual{,   title = {scoutR: FRC Scouting Aide for R Users},   author = {Gabriel Krotkov},   year = {2025},   note = {R package version 1.0},   url = {https://github.com/GKrotkov/scoutR}, }"},{"path":"https://gkrotkov.github.io/scoutR/index.html","id":"scoutr","dir":"","previous_headings":"","what":"FRC Scouting Aide for R Users","title":"FRC Scouting Aide for R Users","text":"scoutR R library facilitate usage data TBA Statbotics API FRC scouts, strategists, data-driven observers. objective provide functions allow newcomer R write one line code retrieve exactly right dataframe tidy format rather JSON needs massaging useful.","code":""},{"path":"https://gkrotkov.github.io/scoutR/index.html","id":"setup---new-user-checklist","dir":"","previous_headings":"","what":"Setup - New User Checklist","title":"FRC Scouting Aide for R Users","text":"Install R RStudio machine. can find Posit’s website : https://posit.co/download/rstudio-desktop/. scoutR assumes R 4.3.0 later. Open demo.qmd using RStudio; recommend setting RStudio default opening .r, .rmd, .qmd files. demo walk use cases scoutR show functions exports.","code":""},{"path":"https://gkrotkov.github.io/scoutR/index.html","id":"roadmap-to-scoutr","dir":"","previous_headings":"","what":"Roadmap to ScoutR","title":"FRC Scouting Aide for R Users","text":"R files define functions core engine ScoutR","code":""},{"path":"https://gkrotkov.github.io/scoutR/index.html","id":"why-do-i-care-about-tidy-data-what-even-is-it","dir":"","previous_headings":"","what":"Why do I care about Tidy data? What even is it?","title":"FRC Scouting Aide for R Users","text":"Tidy data 3 features. variable forms column. observation forms row. type observational unit forms separate table. pretty simple set rules data follow, keeping strictly enables powerful data manipulation libraries like tidyverse. tidy data, visualization analysis become streamlined. can rely R’s inbuilt functions well R’s robust open source developer community implement functions anything want data. Luckily us, scoutR makes getting tidy data straightforward.","code":""},{"path":"https://gkrotkov.github.io/scoutR/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"FRC Scouting Aide for R Users","text":"scoutR manages dependencies renv package. means can resolve package issues references renv lockfile.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/LOOCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Leave-One-Out Cross Validation — LOOCV","title":"Leave-One-Out Cross Validation — LOOCV","text":"Computes leave-one-cross validation error regression fit object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/LOOCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leave-One-Out Cross Validation — LOOCV","text":"","code":"LOOCV(fit)"},{"path":"https://gkrotkov.github.io/scoutR/reference/LOOCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leave-One-Out Cross Validation — LOOCV","text":"fit fitted output `lm` `glm` similar","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/LOOCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leave-One-Out Cross Validation — LOOCV","text":"numeric estimate leave-one-CV risk","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/LOOCV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leave-One-Out Cross Validation — LOOCV","text":"Uses \"shortcut\" formula LOOCV. details, see formula 5.2 ISLR James, Witten, Hastie, Tibshirani (v2), pg 202","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/alliance_finish.html","id":null,"dir":"Reference","previous_headings":"","what":"Alliance Finish — alliance_finish","title":"Alliance Finish — alliance_finish","text":"Switching fxn use appropriate \"alliance_finish\" status (double elim bo3) based internal structure input status object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/alliance_finish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alliance Finish — alliance_finish","text":"","code":"alliance_finish(status)"},{"path":"https://gkrotkov.github.io/scoutR/reference/alliance_finish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alliance Finish — alliance_finish","text":"status status object output column event_alliances()","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/apply_indexer.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Indexer — apply_indexer","title":"Apply Indexer — apply_indexer","text":"Applies indexer function dataframe pulls diagonal resulting matrix, efficiently getting requested data DF.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/apply_indexer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Indexer — apply_indexer","text":"","code":"apply_indexer(df, idx)"},{"path":"https://gkrotkov.github.io/scoutR/reference/apply_indexer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Indexer — apply_indexer","text":"Assumes 'df' parameter coercable matrix. Also assumes idx dataframe columns \"ridx\" \"cidx\" (standing row index col index) index df.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/apply_indexer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply Indexer — apply_indexer","text":"Isolde Moyer","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/attach_opt_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach Optional Parameters — attach_opt_params","title":"Attach Optional Parameters — attach_opt_params","text":"Attaches optional parameters API request","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/attach_opt_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach Optional Parameters — attach_opt_params","text":"","code":"attach_opt_params(req, params, marker = \"?\")"},{"path":"https://gkrotkov.github.io/scoutR/reference/attach_opt_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach Optional Parameters — attach_opt_params","text":"req Length-1 character vector representing API request params named list desired params, name parameter title value parameter value. marker character used separate params url","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/auth.html","id":null,"dir":"Reference","previous_headings":"","what":"API Authorization — auth","title":"API Authorization — auth","text":"Attaches auth key end request string","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API Authorization — auth","text":"","code":"auth(req)"},{"path":"https://gkrotkov.github.io/scoutR/reference/auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"API Authorization — auth","text":"req Request string stub","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API Authorization — auth","text":"string request TBA auth key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/auth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"API Authorization — auth","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API Authorization — auth","text":"","code":"auth(\"\") #> Error in auth(\"\"): could not find function \"auth\""},{"path":"https://gkrotkov.github.io/scoutR/reference/awards24.html","id":null,"dir":"Reference","previous_headings":"","what":"All Team Awards — awards24","title":"All Team Awards — awards24","text":"List team official award histories 2024 season","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/awards24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All Team Awards — awards24","text":"","code":"awards24"},{"path":"https://gkrotkov.github.io/scoutR/reference/awards24.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All Team Awards — awards24","text":"object class list length 8410.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/awards24.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"All Team Awards — awards24","text":"thebluealliance.com","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/bo3_alliance_finish.html","id":null,"dir":"Reference","previous_headings":"","what":"Best of 3 Bracket Alliance Finish — bo3_alliance_finish","title":"Best of 3 Bracket Alliance Finish — bo3_alliance_finish","text":"Returns character vector representing finish alliances single elimation, best three bracket.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/bo3_alliance_finish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Best of 3 Bracket Alliance Finish — bo3_alliance_finish","text":"","code":"bo3_alliance_finish(status)"},{"path":"https://gkrotkov.github.io/scoutR/reference/bo3_alliance_finish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Best of 3 Bracket Alliance Finish — bo3_alliance_finish","text":"status alliance \"status\" object return column output scoutR::event_alliances(). list, usually length 8.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/bo3_alliance_finish.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Best of 3 Bracket Alliance Finish — bo3_alliance_finish","text":"case_when uses \"step-\" resolution; rely first condition false make later conditions correctly specified.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve score breakdown object — breakdown","title":"Retrieve score breakdown object — breakdown","text":"Returns score breakdown object given match object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve score breakdown object — breakdown","text":"","code":"breakdown(match)"},{"path":"https://gkrotkov.github.io/scoutR/reference/breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve score breakdown object — breakdown","text":"match TBA match object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve score breakdown object — breakdown","text":"Score breakdown object (list)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/breakdown.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve score breakdown object — breakdown","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve score breakdown object — breakdown","text":"","code":"paphi <- read_event_matches(\"2016paphi\") #> Error in read_event_matches(\"2016paphi\"): could not find function \"read_event_matches\" breakdown(paphi[[1]]) #> Error in breakdown(paphi[[1]]): could not find function \"breakdown\""},{"path":"https://gkrotkov.github.io/scoutR/reference/cap_first.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalize First Character — cap_first","title":"Capitalize First Character — cap_first","text":"Capitalizes first character elements input vector","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/cap_first.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalize First Character — cap_first","text":"","code":"cap_first(s)"},{"path":"https://gkrotkov.github.io/scoutR/reference/cap_first.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalize First Character — cap_first","text":"s input character vector","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/combine_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Tables — combine_tbls","title":"Combine Tables — combine_tbls","text":"Combines two tables, numerical vectors integer counts. Assumes order() meaningful call names tables.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/combine_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Tables — combine_tbls","text":"","code":"combine_tbls(tbl1, tbl2)"},{"path":"https://gkrotkov.github.io/scoutR/reference/combine_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Tables — combine_tbls","text":"tbl1 First table combined tbl2 Second table combined","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/count_team_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Team Matches — count_team_matches","title":"Count Team Matches — count_team_matches","text":"Counts number times team appears matches dataframe","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/count_team_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Team Matches — count_team_matches","text":"","code":"count_team_matches(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/count_team_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Team Matches — count_team_matches","text":"matches dataframe assumed \"blue1\", \"blue2\", \"blue3\", \"red1\", \"red2\", \"red3\" columns.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/count_team_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Team Matches — count_team_matches","text":"dataframe team ids count matches appeared ","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/de_alliance_finish.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Elimination Alliance Finish — de_alliance_finish","title":"Double Elimination Alliance Finish — de_alliance_finish","text":"Returns character vector representing finish (placement) alliances double elimination bracket.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/de_alliance_finish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Elimination Alliance Finish — de_alliance_finish","text":"","code":"de_alliance_finish(status)"},{"path":"https://gkrotkov.github.io/scoutR/reference/de_alliance_finish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Elimination Alliance Finish — de_alliance_finish","text":"status alliance \"status\" object returned column output event_alliances(). list, usually length 8.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/de_alliance_finish.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Double Elimination Alliance Finish — de_alliance_finish","text":"case_when uses \"step-\" resolution; rely first condition false make later conditions correctly specified.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_events.html","id":null,"dir":"Reference","previous_headings":"","what":"District Events — district_events","title":"District Events — district_events","text":"Reads events given district","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"District Events — district_events","text":"","code":"district_events(district_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/district_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"District Events — district_events","text":"district_key TBA legal district key (remember year prefix) simple (bool) simplify event objects? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"District Events — district_events","text":"tidy tibble district events, vector keys = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"District Events — district_events","text":"","code":"district_events(\"2016mar\") #> # A tibble: 8 × 30 #>   address           city  country district     division_keys end_date event_code #>   <chr>             <chr> <chr>   <list>       <lgl>         <chr>    <chr>      #> 1 124 Goodman Dr S… Beth… USA     <named list> NA            2016-04… mrcmp      #> 2 600 Garretson Rd… Brid… USA     <named list> NA            2016-04… njbri      #> 3 18 Corey Rd, Fla… Moun… USA     <named list> NA            2016-03… njfla      #> 4 1016 Co Rd 601, … Mont… USA     <named list> NA            2016-04… njski      #> 5 110 Carranza Rd,… Tabe… USA     <named list> NA            2016-03… njtab      #> 6 899 Horsham Rd, … Hors… USA     <named list> NA            2016-03… pahat      #> 7 500 W Willow Gro… Phil… USA     <named list> NA            2016-03… paphi      #> 8 975 Westtown Rd,… West… USA     <named list> NA            2016-04… pawch      #> # ℹ 23 more variables: event_type <int>, event_type_string <chr>, #> #   first_event_code <chr>, first_event_id <chr>, gmaps_place_id <chr>, #> #   gmaps_url <chr>, key <chr>, lat <dbl>, lng <dbl>, location_name <chr>, #> #   name <chr>, parent_event_key <lgl>, playoff_type <lgl>, #> #   playoff_type_string <lgl>, postal_code <chr>, short_name <chr>, #> #   start_date <chr>, state_prov <chr>, timezone <chr>, webcasts <list>, #> #   website <chr>, week <int>, year <int> district_events(\"2018fma\", keys = TRUE) #> NULL"},{"path":"https://gkrotkov.github.io/scoutR/reference/district_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"District Rankings — district_rankings","title":"District Rankings — district_rankings","text":"Reads district rankings","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"District Rankings — district_rankings","text":"","code":"district_rankings(   district_key,   separate_events = FALSE,   event_breakdown = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/district_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"District Rankings — district_rankings","text":"district_key (character) TBA legal district key separate_events (bool) split team performance across event? event_breakdown (bool) breakdown event performance?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"District Rankings — district_rankings","text":"tidy tibble event rankings","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_rankings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"District Rankings — district_rankings","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"District Rankings — district_rankings","text":"","code":"district_rankings(\"2016mar\", separate_events = TRUE, event_breakdown = TRUE) #> # A tibble: 123 × 25 #>    alliance_points_event_1 award_points_event_1 district_cmp_event_1 #>                      <int>                <int> <lgl>                #>  1                      16                    5 FALSE                #>  2                      16                    5 FALSE                #>  3                      16                    5 FALSE                #>  4                      13                    0 FALSE                #>  5                      12                    8 FALSE                #>  6                      10                    0 FALSE                #>  7                      13                    5 FALSE                #>  8                      13                    8 FALSE                #>  9                      14                   10 FALSE                #> 10                      13                    5 FALSE                #> # ℹ 113 more rows #> # ℹ 22 more variables: elim_points_event_1 <int>, event_key_event_1 <chr>, #> #   qual_points_event_1 <int>, total_event_1 <int>, #> #   alliance_points_event_2 <int>, award_points_event_2 <int>, #> #   district_cmp_event_2 <lgl>, elim_points_event_2 <int>, #> #   event_key_event_2 <chr>, qual_points_event_2 <int>, total_event_2 <int>, #> #   alliance_points_event_3 <int>, award_points_event_3 <int>, … district_rankings(\"2022fit\") #> # A tibble: 159 × 6 #>    event_points other_bonus point_total  rank rookie_bonus team_key #>    <list>             <int>       <int> <int>        <int> <chr>    #>  1 <list [4]>             0         395     1            0 frc6800  #>  2 <list [4]>             0         376     2            0 frc148   #>  3 <list [3]>             0         353     3            0 frc3847  #>  4 <list [3]>             0         336     4            0 frc624   #>  5 <list [3]>             0         334     5            0 frc3310  #>  6 <list [3]>             0         316     6            0 frc4206  #>  7 <list [4]>             0         312     7            0 frc2468  #>  8 <list [3]>             0         299     8            0 frc3005  #>  9 <list [4]>             0         264     9            0 frc5414  #> 10 <list [3]>             0         252    10            5 frc8177  #> # ℹ 149 more rows"},{"path":"https://gkrotkov.github.io/scoutR/reference/district_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"District Teams — district_teams","title":"District Teams — district_teams","text":"Gets teams given district-year","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"District Teams — district_teams","text":"","code":"district_teams(district_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/district_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"District Teams — district_teams","text":"district_key TBA legal district key simple (bool) simplify team objects? keys (bool) get keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"District Teams — district_teams","text":"Tidy tibble teams objects given district (vector keys)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_teams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"District Teams — district_teams","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/district_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"District Teams — district_teams","text":"","code":"district_teams(\"2022fit\", keys = TRUE) #>   [1] \"frc1164\" \"frc118\"  \"frc1255\" \"frc1296\" \"frc1477\" \"frc148\"  \"frc1745\" #>   [8] \"frc2158\" \"frc231\"  \"frc2468\" \"frc2582\" \"frc2583\" \"frc2587\" \"frc2613\" #>  [15] \"frc2687\" \"frc2689\" \"frc2714\" \"frc2789\" \"frc2848\" \"frc2881\" \"frc2882\" #>  [22] \"frc2950\" \"frc2966\" \"frc2969\" \"frc3005\" \"frc3029\" \"frc3035\" \"frc3037\" #>  [29] \"frc3103\" \"frc324\"  \"frc3282\" \"frc3310\" \"frc3355\" \"frc3481\" \"frc3545\" #>  [36] \"frc3561\" \"frc3676\" \"frc3679\" \"frc3728\" \"frc3735\" \"frc3802\" \"frc3834\" #>  [43] \"frc3847\" \"frc4063\" \"frc4153\" \"frc418\"  \"frc4192\" \"frc4206\" \"frc4219\" #>  [50] \"frc4295\" \"frc4328\" \"frc4332\" \"frc4364\" \"frc457\"  \"frc4587\" \"frc4597\" #>  [57] \"frc4610\" \"frc4639\" \"frc4641\" \"frc4717\" \"frc4734\" \"frc5052\" \"frc5057\" #>  [64] \"frc5070\" \"frc5103\" \"frc5212\" \"frc5242\" \"frc5261\" \"frc5411\" \"frc5414\" #>  [71] \"frc5417\" \"frc5427\" \"frc5431\" \"frc5503\" \"frc5572\" \"frc5613\" \"frc5682\" #>  [78] \"frc5726\" \"frc5829\" \"frc5866\" \"frc5892\" \"frc5894\" \"frc5908\" \"frc5923\" #>  [85] \"frc5986\" \"frc6155\" \"frc6171\" \"frc6180\" \"frc624\"  \"frc6357\" \"frc6369\" #>  [92] \"frc6377\" \"frc6645\" \"frc6672\" \"frc6682\" \"frc6768\" \"frc6800\" \"frc6830\" #>  [99] \"frc6901\" \"frc6974\" \"frc7088\" \"frc7091\" \"frc7115\" \"frc7119\" \"frc7121\" #> [106] \"frc7125\" \"frc7312\" \"frc7319\" \"frc7418\" \"frc7492\" \"frc7503\" \"frc7506\" #> [113] \"frc7521\" \"frc7534\" \"frc7535\" \"frc7540\" \"frc7616\" \"frc7621\" \"frc7691\" #> [120] \"frc7750\" \"frc8019\" \"frc8055\" \"frc8088\" \"frc8114\" \"frc8144\" \"frc8150\" #> [127] \"frc8177\" \"frc8210\" \"frc8274\" \"frc8325\" \"frc8369\" \"frc8370\" \"frc8392\" #> [134] \"frc8405\" \"frc8408\" \"frc8507\" \"frc8512\" \"frc8515\" \"frc8528\" \"frc8556\" #> [141] \"frc8573\" \"frc8576\" \"frc8580\" \"frc8591\" \"frc8598\" \"frc8610\" \"frc8625\" #> [148] \"frc8710\" \"frc8749\" \"frc8750\" \"frc8769\" \"frc8816\" \"frc8818\" \"frc8819\" #> [155] \"frc8827\" \"frc8842\" \"frc8858\" \"frc8874\" \"frc8879\" district_teams(\"2014mar\", simple = TRUE) #> # A tibble: 110 × 7 #>    city          country key     name            nickname state_prov team_number #>    <chr>         <chr>   <chr>   <chr>           <chr>    <chr>            <int> #>  1 Somerville    USA     frc102  Johnson & John… The Gea… New Jersey         102 #>  2 Kintnersville USA     frc103  MAR VAN Indust… Cyberso… Pennsylva…         103 #>  3 Hightstown    USA     frc1089 Bristol Myers-… Team Me… New Jersey        1089 #>  4 Flanders      USA     frc11   National Defen… MORT     New Jersey          11 #>  5 Clarks Summit USA     frc1143 Lockheed Marti… Cruzin'… Pennsylva…        1143 #>  6 Malvern       USA     frc1168 CTDI/All Fill … Malvern… Pennsylva…        1168 #>  7 Philadelphia  USA     frc1218 Metal Edge Int… SCH Rob… Pennsylva…        1218 #>  8 Rahway        USA     frc1228 Astro Tool and… RoboTri… New Jersey        1228 #>  9 Scotch Plains USA     frc1257 Picatinny Arse… Paralle… New Jersey        1257 #> 10 Somerville    USA     frc1279 Johnson & John… Cold Fu… New Jersey        1279 #> # ℹ 100 more rows district_teams(\"2016mar\") #> # A tibble: 121 × 18 #>    address city          country gmaps_place_id gmaps_url key     lat   lng   #>    <lgl>   <chr>         <chr>   <lgl>          <lgl>     <chr>   <lgl> <lgl> #>  1 NA      Somerville    USA     NA             NA        frc102  NA    NA    #>  2 NA      Kintnersville USA     NA             NA        frc103  NA    NA    #>  3 NA      Hightstown    USA     NA             NA        frc1089 NA    NA    #>  4 NA      Flanders      USA     NA             NA        frc11   NA    NA    #>  5 NA      Clarks Summit USA     NA             NA        frc1143 NA    NA    #>  6 NA      Malvern       USA     NA             NA        frc1168 NA    NA    #>  7 NA      Philadelphia  USA     NA             NA        frc1218 NA    NA    #>  8 NA      Rahway        USA     NA             NA        frc1228 NA    NA    #>  9 NA      Scotch Plains USA     NA             NA        frc1257 NA    NA    #> 10 NA      Somerville    USA     NA             NA        frc1279 NA    NA    #> # ℹ 111 more rows #> # ℹ 10 more variables: location_name <lgl>, motto <lgl>, name <chr>, #> #   nickname <chr>, postal_code <chr>, rookie_year <int>, school_name <chr>, #> #   state_prov <chr>, team_number <int>, website <chr>"},{"path":"https://gkrotkov.github.io/scoutR/reference/districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Districts — districts","title":"Districts — districts","text":"Reads districts given year","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Districts — districts","text":"","code":"districts(year = YEAR)"},{"path":"https://gkrotkov.github.io/scoutR/reference/districts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Districts — districts","text":"year (int) year interest","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/districts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Districts — districts","text":"tidy tibble districts given year","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/districts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Districts — districts","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/districts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Districts — districts","text":"","code":"districts(2012) #> # A tibble: 2 × 4 #>   abbreviation display_name       key      year #>   <chr>        <chr>              <chr>   <int> #> 1 fim          FIRST in Michigan  2012fim  2012 #> 2 mar          FIRST Mid-Atlantic 2012mar  2012 districts(2023) #> # A tibble: 11 × 4 #>    abbreviation display_name           key      year #>    <chr>        <chr>                  <chr>   <int> #>  1 chs          FIRST Chesapeake       2023chs  2023 #>  2 fim          FIRST in Michigan      2023fim  2023 #>  3 fin          FIRST Indiana Robotics 2023fin  2023 #>  4 fit          FIRST In Texas         2023fit  2023 #>  5 fma          FIRST Mid-Atlantic     2023fma  2023 #>  6 fnc          FIRST North Carolina   2023fnc  2023 #>  7 isr          FIRST Israel           2023isr  2023 #>  8 ne           New England            2023ne   2023 #>  9 ont          FIRST Canada - Ontario 2023ont  2023 #> 10 pch          Peachtree              2023pch  2023 #> 11 pnw          Pacific Northwest      2023pnw  2023"},{"path":"https://gkrotkov.github.io/scoutR/reference/dquals24.html","id":null,"dir":"Reference","previous_headings":"","what":"District Qualification Data — dquals24","title":"District Qualification Data — dquals24","text":"list qualification data every district played 2009 2024. Every item list dataframe, dataframe least columns \"red1\", \"red2\", \"red3\", \"blue1\", \"blue2\", \"blue3\", \"red_score\", \"blue_score\". Generated scripts/get_district_quals.R","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/dquals24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"District Qualification Data — dquals24","text":"","code":"dquals24"},{"path":"https://gkrotkov.github.io/scoutR/reference/dquals24.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"District Qualification Data — dquals24","text":"object class list length 827.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/dquals24.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"District Qualification Data — dquals24","text":"thebluealliance.com","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/dual_line_weight_approximation.html","id":null,"dir":"Reference","previous_headings":"","what":"Dual Line Weight Approximation — dual_line_weight_approximation","title":"Dual Line Weight Approximation — dual_line_weight_approximation","text":"Given variance number bins, approximate appropriate WLS weighting two lines.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/dual_line_weight_approximation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dual Line Weight Approximation — dual_line_weight_approximation","text":"","code":"dual_line_weight_approximation(bin_vars)"},{"path":"https://gkrotkov.github.io/scoutR/reference/dual_line_weight_approximation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dual Line Weight Approximation — dual_line_weight_approximation","text":"bin_vars vector variance bin","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/dual_line_weight_approximation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dual Line Weight Approximation — dual_line_weight_approximation","text":"vector weights","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Event Object — event","title":"Get Event Object — event","text":"Reads event object TBA API","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Event Object — event","text":"","code":"event(key, simple = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Event Object — event","text":"key TBA legal event key simple (bool) simplify event objects?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Event Object — event","text":"tidy tibble one row event object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Event Object — event","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Event Object — event","text":"","code":"event(\"2022txirv\") #>                                                     address   city country #> event 500 West Las Colinas Boulevard, Irving, TX 75039, USA Irving     USA #>                                 district division_keys   end_date event_code #> event fit, FIRST In Texas, 2022fit, 2022          NULL 2022-03-26      txirv #>       event_type event_type_string first_event_code first_event_id #> event          1          District            txirv           NULL #>                    gmaps_place_id #> event ChIJgS3ci5iCToYRuUZNGfcd4cc #>                                                                                                                         gmaps_url #> event https://maps.google.com/?q=500+West+Las+Colinas+Boulevard,+Irving,+TX+75039,+USA&ftid=0x864e82988bdc2d81:0xc7e11df7194d46b9 #>             key      lat       lng                  location_name #> event 2022txirv 32.87808 -96.94322 500 West Las Colinas Boulevard #>                            name parent_event_key playoff_type #> event FIT District Irving Event             NULL            0 #>       playoff_type_string postal_code short_name start_date state_prov #> event                NULL       75039     Irving 2022-03-24         TX #>              timezone                   webcasts                   website week #> event America/Chicago firstintexasevents, twitch https://firstintexas.org/    3 #>       year #> event 2022 event(\"2016pahat\", simple = TRUE) #>                                      address    city country #> event 899 Horsham Rd, Horsham, PA 19044, USA Horsham     USA #>                                     district division_keys   end_date #> event mar, FIRST Mid-Atlantic, 2016mar, 2016          NULL 2016-03-06 #>       event_code event_type event_type_string first_event_code first_event_id #> event      pahat          1          District            pahat          17425 #>                    gmaps_place_id #> event ChIJOYzf8XilxokRpKeZ6pBxor8 #>                                               gmaps_url       key      lat #> event https://maps.google.com/?cid=13808724274696529828 2016pahat 40.19774 #>             lng                      location_name #> event -75.16352 Hatboro-Horsham Senior High School #>                                       name parent_event_key playoff_type #> event MAR District - Hatboro-Horsham Event             NULL         NULL #>       playoff_type_string postal_code      short_name start_date state_prov #> event                NULL       19044 Hatboro-Horsham 2016-03-04         PA #>               timezone                                   webcasts #> event America/New_York Osoi9RrsFVM, youtube, RFVj5E28Rao, youtube #>                                   website week year #> event http://www.midatlanticrobotics.com/    1 2016"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_alliances.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Alliances — event_alliances","title":"Event Alliances — event_alliances","text":"Read event alliances","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_alliances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Alliances — event_alliances","text":"","code":"event_alliances(key, unpack_picks = TRUE, attach_finish = TRUE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_alliances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Alliances — event_alliances","text":"key TBA legal event key unpack_picks (logical) break alliance column? attach_finish (logical)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_alliances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Alliances — event_alliances","text":"Tidy tibble event alliances","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_alliances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Alliances — event_alliances","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_alliances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Alliances — event_alliances","text":"","code":"event_alliances(\"2016hop\", unpack_picks = TRUE) #> # A tibble: 8 × 9 #>   backup declines name    captain `pick 1` `pick 2` `pick 3` status       finish #>   <lgl>  <lgl>    <chr>   <chr>   <chr>    <chr>    <chr>    <list>       <chr>  #> 1 NA     NA       Allian… frc148  frc1678  frc364   frc2990  <named list> Winner #> 2 NA     NA       Allian… frc1425 frc1538  frc2046  frc2471  <named list> Quart… #> 3 NA     NA       Allian… frc971  frc1323  frc193   frc5254  <named list> Final… #> 4 NA     NA       Allian… frc4334 frc294   frc2013  frc1732  <named list> Semif… #> 5 NA     NA       Allian… frc303  frc4587  frc1796  frc4085  <named list> Quart… #> 6 NA     NA       Allian… frc1712 frc869   frc1730  frc1736  <named list> Quart… #> 7 NA     NA       Allian… frc346  frc4967  frc1011  frc172   <named list> Semif… #> 8 NA     NA       Allian… frc231  frc4920  frc3604  frc70    <named list> Quart… event_alliances(\"2015paphi\") #> # A tibble: 8 × 6 #>   declines captain `pick 1` `pick 2` status           finish          #>   <lgl>    <chr>   <chr>    <chr>    <list>           <chr>           #> 1 NA       frc225  frc1218  frc204   <named list [6]> Winner          #> 2 NA       frc203  frc341   frc486   <named list [6]> Semifinalist    #> 3 NA       frc433  frc365   frc5684  <named list [6]> Quarterfinalist #> 4 NA       frc1712 frc4373  frc3974  <named list [6]> Finalist        #> 5 NA       frc816  frc2495  frc3929  <named list [6]> Quarterfinalist #> 6 NA       frc708  frc5407  frc1626  <named list [6]> Quarterfinalist #> 7 NA       frc304  frc5181  frc2191  <named list [6]> Quarterfinalist #> 8 NA       frc321  frc484   frc3637  <named list [6]> Semifinalist    event_alliances(\"2014mrcmp\", unpack_picks = FALSE) #> # A tibble: 8 × 6 #>   declines captain `pick 1` `pick 2` status           finish          #>   <lgl>    <chr>   <chr>    <chr>    <list>           <chr>           #> 1 NA       frc2180 frc222   frc365   <named list [6]> Semifinalist    #> 2 NA       frc1257 frc293   frc303   <named list [6]> Quarterfinalist #> 3 NA       frc225  frc1218  frc357   <named list [6]> Semifinalist    #> 4 NA       frc1640 frc869   frc1923  <named list [6]> Quarterfinalist #> 5 NA       frc1089 frc193   frc484   <named list [6]> Finalist        #> 6 NA       frc56   frc25    frc1279  <named list [6]> Quarterfinalist #> 7 NA       frc2590 frc11    frc341   <named list [6]> Winner          #> 8 NA       frc2495 frc3929  frc1712  <named list [6]> Quarterfinalist"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_awards.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Awards — event_awards","title":"Event Awards — event_awards","text":"Reads event awards","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_awards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Awards — event_awards","text":"","code":"event_awards(key, recipients = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_awards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Awards — event_awards","text":"key TBA legal event key recipients (bool) unpack recipients column?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_awards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Awards — event_awards","text":"tidy tibble event awards","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_awards.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Awards — event_awards","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_awards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Awards — event_awards","text":"","code":"event_awards(\"2015padre\") #> # A tibble: 18 × 5 #>    award_type event_key name                                recipient_list  year #>         <int> <chr>     <chr>                               <list>         <int> #>  1          0 2015padre District Chairman's Award           <list [1]>      2015 #>  2          1 2015padre District Event Winner               <list [3]>      2015 #>  3         10 2015padre Rookie All Star Award               <list [1]>      2015 #>  4         11 2015padre Gracious Professionalism Award spo… <list [1]>      2015 #>  5         13 2015padre Judges' Award                       <list [1]>      2015 #>  6         14 2015padre Highest Rookie Seed                 <list [1]>      2015 #>  7         15 2015padre Rookie Inspiration Award            <list [1]>      2015 #>  8         16 2015padre Industrial Design Award sponsored … <list [1]>      2015 #>  9         17 2015padre Quality Award sponsored by Motorola <list [1]>      2015 #> 10         18 2015padre Industrial Safety Award sponsored … <list [1]>      2015 #> 11          2 2015padre District Event Finalist             <list [3]>      2015 #> 12         20 2015padre Creativity Award sponsored by Xerox <list [1]>      2015 #> 13         21 2015padre Excellence in Engineering Award sp… <list [1]>      2015 #> 14         22 2015padre Entrepreneurship Award sponsored b… <list [1]>      2015 #> 15         27 2015padre Imagery Award in honor of Jack Kam… <list [1]>      2015 #> 16         29 2015padre Innovation in Control Award sponso… <list [1]>      2015 #> 17         30 2015padre Team Spirit Award sponsored by Chr… <list [1]>      2015 #> 18          9 2015padre District Engineering Inspiration A… <list [1]>      2015 event_awards(\"2010ein\", recipients = TRUE) #> Error in unnest_wider(awards, awards): ℹ In column: `awards`. #> ℹ In row: 1. #> Caused by error: #> ! Can't unnest elements with missing names. #> ℹ Supply `names_sep` to generate automatic names."},{"path":"https://gkrotkov.github.io/scoutR/reference/event_coprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Event cOPRs — event_coprs","title":"Get Event cOPRs — event_coprs","text":"Wrapper function read_event_coprs tidy_event_coprs","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_coprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Event cOPRs — event_coprs","text":"","code":"event_coprs(key, digits = 2)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_coprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Event cOPRs — event_coprs","text":"key (string) event key digits number digits round result ","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_coprs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Event cOPRs — event_coprs","text":"TBA exports cOPRs events early 2023. want cOPRs earlier events, can compute `fit_event_lr` wise response choice","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_district_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Event District Points — event_district_points","title":"Event District Points — event_district_points","text":"Reads event district points","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_district_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event District Points — event_district_points","text":"","code":"event_district_points(key, tiebreakers = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_district_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event District Points — event_district_points","text":"key TBA legal event key tiebreakers (bool) unpack tiebreakers?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_district_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event District Points — event_district_points","text":"tidy tibble district points?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_district_points.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event District Points — event_district_points","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_district_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event District Points — event_district_points","text":"","code":"event_district_points(\"2016mrcmp\", tiebreakers = TRUE) #>    team_keys alliance_points award_points elim_points qual_points total #> 1     frc102               0            0           0          48    48 #> 2    frc1089               9            0          60          45   114 #> 3      frc11               0            0           0          27    27 #> 4    frc1143              45            0           0          51    96 #> 5    frc1218              24           24           0          45    93 #> 6    frc1257               3            0          90          21   114 #> 7    frc1279               0            0           0          12    12 #> 8    frc1391              36            0           0          57    93 #> 9    frc1403              21            0          30          33    84 #> 10   frc1626               0            0           0          42    42 #> 11   frc1640              39            0          30          24    93 #> 12   frc1647               0            0           0          39    39 #> 13   frc1676               0           24           0          21    45 #> 14   frc1712              30           15          30          54   129 #> 15   frc1811               0            0           0          30    30 #> 16   frc1923               0           30           0          42    72 #> 17    frc193               0            0           0          48    48 #> 18   frc1989              33            0           0          57    90 #> 19   frc2016               0            0           0          33    33 #> 20    frc222               0            0           0          30    30 #> 21    frc223               0            0           0          18    18 #> 22    frc225              48           15          90          66   219 #> 23     frc25              42            0          60          51   153 #> 24   frc2559               0            0           0          33    33 #> 25   frc2590              27            0           0          51    78 #> 26   frc2607               0           15           0          39    54 #> 27    frc272               0            0           0          42    42 #> 28    frc303               0           15           0          36    51 #> 29    frc321              18           30           0          48    96 #> 30   frc3314              42            0          60          60   162 #> 31    frc341              48           15          90          63   216 #> 32   frc3637               0           15           0          30    45 #> 33    frc365              27           15           0          30    72 #> 34     frc41              33            0           0          54    87 #> 35    frc423               0            0           0          18    18 #> 36   frc4342               0            0           0          36    36 #> 37   frc4454               0            0           0          15    15 #> 38   frc4573               0            0           0          36    36 #> 39   frc4575               0            0           0          27    27 #> 40   frc4637               0            0           0           9     9 #> 41   frc4653               0            0           0          33    33 #> 42   frc4750               0            0           0          36    36 #> 43    frc484               0            0           0          45    45 #> 44   frc4954               0            0           0          27    27 #> 45   frc5113               0           15           0          42    57 #> 46   frc5401              45           15           0          66   126 #> 47   frc5404              15            0           0          39    54 #> 48   frc5407               0            0           0          33    33 #> 49     frc56              12            0          30          48    90 #> 50   frc5624               0            0           0          27    27 #> 51   frc5666               0           15           0          15    30 #> 52   frc5684               0            0           0          42    42 #> 53   frc5895              39            0          30          60   129 #> 54   frc5938               0           15           0          24    39 #> 55   frc6016               0           24           0          39    63 #> 56   frc6203               0            0           0          21    21 #> 57    frc708              30            0          30          45   105 #> 58     frc75               6            0           0          24    30 #> 59    frc834               0            0           0          36    36 #> 60    frc869              36           15           0          54   105 #>    highest_qual_scores qual_wins #> 1        160, 137, 133         0 #> 2        165, 146, 132         0 #> 3        150, 150, 118         0 #> 4        129, 124, 124         0 #> 5        137, 130, 125         0 #> 6        157, 112, 110         0 #> 7        104, 101, 100         0 #> 8        132, 129, 112         0 #> 9        155, 122, 121         0 #> 10       125, 122, 120         0 #> 11       137, 130, 127         0 #> 12       129, 129, 112         0 #> 13       126, 118, 109         0 #> 14       121, 117, 107         0 #> 15       131, 125, 124         0 #> 16       146, 126, 110         0 #> 17       132, 132, 129         0 #> 18       162, 147, 132         0 #> 19       112, 110, 109         0 #> 20       129, 126, 118         0 #> 21       139, 108, 108         0 #> 22       157, 155, 147         0 #> 23       170, 139, 131         0 #> 24       131, 110, 109         0 #> 25       146, 141, 139         0 #> 26       137, 121, 118         0 #> 27       124, 110, 108         0 #> 28       162, 132, 126         0 #> 29       165, 149, 118         0 #> 30       170, 165, 160         0 #> 31       162, 149, 147         0 #> 32       120, 115, 112         0 #> 33       137, 130, 128         0 #> 34       170, 155, 150         0 #> 35       121, 109, 104         0 #> 36       124, 118, 117         0 #> 37        128, 105, 97         0 #> 38       122, 121, 121         0 #> 39       121, 106, 103         0 #> 40       125, 106, 101         0 #> 41       117, 108, 106         0 #> 42        104, 100, 99         0 #> 43       118, 115, 113         0 #> 44       147, 132, 110         0 #> 45       125, 119, 115         0 #> 46       150, 130, 129         0 #> 47       130, 125, 117         0 #> 48       147, 114, 108         0 #> 49       157, 150, 130         0 #> 50       116, 112, 108         0 #> 51       118, 104, 101         0 #> 52       133, 124, 115         0 #> 53       149, 147, 133         0 #> 54       114, 111, 102         0 #> 55       132, 110, 106         0 #> 56       110, 109, 102         0 #> 57       129, 122, 121         0 #> 58       132, 130, 117         0 #> 59       127, 124, 122         0 #> 60       160, 141, 130         0 event_district_points(\"2015padre\") #> # A tibble: 35 × 6 #>    alliance_points award_points elim_points qual_points total team_keys #>              <int>        <int>       <dbl>       <int> <dbl> <chr>     #>  1               8            5           0          14    27 frc103    #>  2               4            0          10          14    28 frc1143   #>  3               7            0           0           8    15 frc1168   #>  4               0            5           0           5    10 frc1391   #>  5               5            0           0          10    15 frc1495   #>  6               6            5           0          13    24 frc1712   #>  7               0            0           0           7     7 frc1791   #>  8              16            5          30          22    73 frc225    #>  9               0            0           0           9     9 frc2539   #> 10              16            5          30          20    71 frc2607   #> # ℹ 25 more rows"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_finish_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Finish Seed — event_finish_seed","title":"Event Finish Seed — event_finish_seed","text":"Given event, retrieves seed(s) alliances particular playoffs finish, defaulting \"Winner\"","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_finish_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Finish Seed — event_finish_seed","text":"","code":"event_finish_seed(key, finish = \"Winner\", size = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_finish_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Finish Seed — event_finish_seed","text":"key TBA-legal event key (ex. \"2025vagle\") size (int) Check event size; return NA input integer. Ignored NULL.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_finish_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Finish Seed — event_finish_seed","text":"","code":"event_finish_seed(\"2025vagle\") #> Error in event_finish_seed(\"2025vagle\"): could not find function \"event_finish_seed\""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_insights.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Insights — event_insights","title":"Event Insights — event_insights","text":"Read event insights","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_insights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Insights — event_insights","text":"","code":"event_insights(key, insight_as_col = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_insights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Insights — event_insights","text":"key event key insight_as_col (bool) treat \"phase\" insights (qual/playoff) column variable? TRUE, return dataframe variables \"field\", \"qual\", \"playoff\", (phases.) FALSE, field column row phase.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_insights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Event Insights — event_insights","text":"assume sublists number names fields. , quals playoffs length list, fields filled lists, order.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Matches — event_matches","title":"Event Matches — event_matches","text":"Reads matches given event","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Matches — event_matches","text":"","code":"event_matches(   event_key,   alliances = TRUE,   breakdown = TRUE,   match_type = \"all\",   unplayed = FALSE,   sort = TRUE,   simple = FALSE,   keys = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Matches — event_matches","text":"event_key TBA legal event key alliances (bool) break alliances column? breakdown (bool) break score_breakdown column? match_type one \"\", \"qual\", \"playoff\" unplayed (boolean) include matches scores -1 (indicating match played?) sort (boolean) TRUE, sort resulting match object match number. simple (bool) simplify match object? keys (bool) get keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Matches — event_matches","text":"Tibble matches given event.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Matches — event_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Matches — event_matches","text":"","code":"event_matches(\"2015paphi\", match_type = \"playoff\") #> # A tibble: 16 × 73 #>    actual_time blue_dq_team_keys blue_score blue_surrogate_team_keys blue1 blue2 #>    <lgl>       <lgl>                  <int> <lgl>                    <chr> <chr> #>  1 NA          NA                        15 NA                       frc2… frc8… #>  2 NA          NA                        50 NA                       frc5… frc7… #>  3 NA          NA                        56 NA                       frc5… frc3… #>  4 NA          NA                        86 NA                       frc4… frc3… #>  5 NA          NA                        58 NA                       frc5… frc7… #>  6 NA          NA                        64 NA                       frc2… frc8… #>  7 NA          NA                        57 NA                       frc4… frc3… #>  8 NA          NA                        37 NA                       frc5… frc3… #>  9 NA          NA                        29 NA                       frc3… frc2… #> 10 NA          NA                        64 NA                       frc4… frc1… #> 11 NA          NA                        83 NA                       frc4… frc1… #> 12 NA          NA                       103 NA                       frc3… frc2… #> 13 NA          NA                        81 NA                       frc3… frc2… #> 14 NA          NA                        59 NA                       frc4… frc3… #> 15 NA          NA                        77 NA                       frc4… frc1… #> 16 NA          NA                        74 NA                       frc4… frc1… #> # ℹ 67 more variables: blue3 <chr>, red_dq_team_keys <lgl>, red_score <int>, #> #   red_surrogate_team_keys <lgl>, red1 <chr>, red2 <chr>, red3 <chr>, #> #   comp_level <fct>, event_key <chr>, key <chr>, match_number <int>, #> #   post_result_time <lgl>, predicted_time <lgl>, blue_adjust_points <int>, #> #   blue_auto_points <int>, blue_container_count_level1 <int>, #> #   blue_container_count_level2 <int>, blue_container_count_level3 <int>, #> #   blue_container_count_level4 <int>, blue_container_count_level5 <int>, … event_matches(\"2014mrcmp\", match_type = \"qual\", keys = TRUE) #>   [1] \"2014mrcmp_qm1\"   \"2014mrcmp_qm10\"  \"2014mrcmp_qm100\" \"2014mrcmp_qm101\" #>   [5] \"2014mrcmp_qm102\" \"2014mrcmp_qm103\" \"2014mrcmp_qm104\" \"2014mrcmp_qm105\" #>   [9] \"2014mrcmp_qm106\" \"2014mrcmp_qm107\" \"2014mrcmp_qm108\" \"2014mrcmp_qm109\" #>  [13] \"2014mrcmp_qm11\"  \"2014mrcmp_qm110\" \"2014mrcmp_qm12\"  \"2014mrcmp_qm13\"  #>  [17] \"2014mrcmp_qm14\"  \"2014mrcmp_qm15\"  \"2014mrcmp_qm16\"  \"2014mrcmp_qm17\"  #>  [21] \"2014mrcmp_qm18\"  \"2014mrcmp_qm19\"  \"2014mrcmp_qm2\"   \"2014mrcmp_qm20\"  #>  [25] \"2014mrcmp_qm21\"  \"2014mrcmp_qm22\"  \"2014mrcmp_qm23\"  \"2014mrcmp_qm24\"  #>  [29] \"2014mrcmp_qm25\"  \"2014mrcmp_qm26\"  \"2014mrcmp_qm27\"  \"2014mrcmp_qm28\"  #>  [33] \"2014mrcmp_qm29\"  \"2014mrcmp_qm3\"   \"2014mrcmp_qm30\"  \"2014mrcmp_qm31\"  #>  [37] \"2014mrcmp_qm32\"  \"2014mrcmp_qm33\"  \"2014mrcmp_qm34\"  \"2014mrcmp_qm35\"  #>  [41] \"2014mrcmp_qm36\"  \"2014mrcmp_qm37\"  \"2014mrcmp_qm38\"  \"2014mrcmp_qm39\"  #>  [45] \"2014mrcmp_qm4\"   \"2014mrcmp_qm40\"  \"2014mrcmp_qm41\"  \"2014mrcmp_qm42\"  #>  [49] \"2014mrcmp_qm43\"  \"2014mrcmp_qm44\"  \"2014mrcmp_qm45\"  \"2014mrcmp_qm46\"  #>  [53] \"2014mrcmp_qm47\"  \"2014mrcmp_qm48\"  \"2014mrcmp_qm49\"  \"2014mrcmp_qm5\"   #>  [57] \"2014mrcmp_qm50\"  \"2014mrcmp_qm51\"  \"2014mrcmp_qm52\"  \"2014mrcmp_qm53\"  #>  [61] \"2014mrcmp_qm54\"  \"2014mrcmp_qm55\"  \"2014mrcmp_qm56\"  \"2014mrcmp_qm57\"  #>  [65] \"2014mrcmp_qm58\"  \"2014mrcmp_qm59\"  \"2014mrcmp_qm6\"   \"2014mrcmp_qm60\"  #>  [69] \"2014mrcmp_qm61\"  \"2014mrcmp_qm62\"  \"2014mrcmp_qm63\"  \"2014mrcmp_qm64\"  #>  [73] \"2014mrcmp_qm65\"  \"2014mrcmp_qm66\"  \"2014mrcmp_qm67\"  \"2014mrcmp_qm68\"  #>  [77] \"2014mrcmp_qm69\"  \"2014mrcmp_qm7\"   \"2014mrcmp_qm70\"  \"2014mrcmp_qm71\"  #>  [81] \"2014mrcmp_qm72\"  \"2014mrcmp_qm73\"  \"2014mrcmp_qm74\"  \"2014mrcmp_qm75\"  #>  [85] \"2014mrcmp_qm76\"  \"2014mrcmp_qm77\"  \"2014mrcmp_qm78\"  \"2014mrcmp_qm79\"  #>  [89] \"2014mrcmp_qm8\"   \"2014mrcmp_qm80\"  \"2014mrcmp_qm81\"  \"2014mrcmp_qm82\"  #>  [93] \"2014mrcmp_qm83\"  \"2014mrcmp_qm84\"  \"2014mrcmp_qm85\"  \"2014mrcmp_qm86\"  #>  [97] \"2014mrcmp_qm87\"  \"2014mrcmp_qm88\"  \"2014mrcmp_qm89\"  \"2014mrcmp_qm9\"   #> [101] \"2014mrcmp_qm90\"  \"2014mrcmp_qm91\"  \"2014mrcmp_qm92\"  \"2014mrcmp_qm93\"  #> [105] \"2014mrcmp_qm94\"  \"2014mrcmp_qm95\"  \"2014mrcmp_qm96\"  \"2014mrcmp_qm97\"  #> [109] \"2014mrcmp_qm98\"  \"2014mrcmp_qm99\""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matchups.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Matchups — event_matchups","title":"Event Matchups — event_matchups","text":"Returns list containing team's partners opponents particular event.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matchups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Matchups — event_matchups","text":"","code":"event_matchups(event_code, team_id)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_matchups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Matchups — event_matchups","text":"event_code TBA-legal event code (ex. \"2025chcmp\") team_id team interest int TBA id (ex. \"frc449\", 449)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_opr_progression.html","id":null,"dir":"Reference","previous_headings":"","what":"Event OPR Progression — event_opr_progression","title":"Event OPR Progression — event_opr_progression","text":"Returns dataframe tracking progression OPR course event. rows scale number matches played, columns team IDs, additional columns tracking match number matches per team.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_opr_progression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event OPR Progression — event_opr_progression","text":"","code":"event_opr_progression(   event_code,   response_name = \"score\",   standardize = FALSE,   w = NULL )"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_opr_progression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event OPR Progression — event_opr_progression","text":"event_code TBA-legal event code response_name (chr) string column name suffix response variable. raw OPR, \"score\" (accessing \"red_score\" blue_score\"). standardize (bool) TRUE, standardize event scores w optional WLS weighting linear fits","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_opr_progression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Event OPR Progression — event_opr_progression","text":"Spans number matches OPR well-defined. Assumes column names formatted like: \"(red/blue)_()\"","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_opr_progression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event OPR Progression — event_opr_progression","text":"","code":"result <- event_opr_progression(\"2024paca\") result <- event_opr_progression(\"2024paca\", response = \"autoTotalNotePoints\")"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_oprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Event OPRs — event_oprs","title":"Event OPRs — event_oprs","text":"Read event OPRs","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_oprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event OPRs — event_oprs","text":"","code":"event_oprs(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_oprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event OPRs — event_oprs","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_oprs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event OPRs — event_oprs","text":"tidy tibble event OPRs columns: opr, dpr, ccwm, team","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_oprs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event OPRs — event_oprs","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_oprs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event OPRs — event_oprs","text":"","code":"event_oprs(\"2015paphi\") #> # A tibble: 34 × 4 #>      opr   dpr   ccwm  team #>    <dbl> <dbl>  <dbl> <dbl> #>  1 32.6  21.1   11.6   1218 #>  2  7.52 20.5  -13.0   1495 #>  3  3.38  7.97  -4.59  1626 #>  4 32.5  31.2    1.31  1712 #>  5 37.9  21.9   16.0    203 #>  6 12.2  33.9  -21.7    204 #>  7  9.74 21.4  -11.7   2095 #>  8  8.14 11.2   -3.05  2180 #>  9  1.69 14.0  -12.3   2191 #> 10 19.1  15.9    3.25  2234 #> # ℹ 24 more rows"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Rankings — event_rankings","title":"Event Rankings — event_rankings","text":"Read event rankings","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Rankings — event_rankings","text":"","code":"event_rankings(key, trim = TRUE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Rankings — event_rankings","text":"key TBA legal event key trim (bool) remove data unrelated game analysis?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Rankings — event_rankings","text":"tidy tibble event rankings","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_rankings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Rankings — event_rankings","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Rankings — event_rankings","text":"","code":"event_rankings(\"2016hop\") #> # A tibble: 75 × 11 #>    matches_played  rank losses  ties  wins `Ranking Score`  Auto #>             <int> <int>  <int> <int> <int>           <dbl> <dbl> #>  1             10     1      1     0     9              36   349 #>  2             10     2      1     0     9              36   286 #>  3             10     3      1     0     9              33   420 #>  4             10     4      2     0     8              33   410 #>  5             10     5      2     0     8              32   354 #>  6             10     6      3     0     7              31   273 #>  7             10     7      3     0     7              30   326 #>  8             10     8      3     0     7              29   317 #>  9             10     9      3     0     7              29   312 #> 10             10    10      3     0     7              29   308 #> # ℹ 65 more rows #> # ℹ 4 more variables: `Scale/Challenge` <dbl>, Goals <dbl>, Defense <dbl>, #> #   team_key <chr>"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Event (Statbotics) — event_sb","title":"Event (Statbotics) — event_sb","text":"Returns list representing statbotics info given event","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event (Statbotics) — event_sb","text":"","code":"event_sb(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event (Statbotics) — event_sb","text":"key event key (e.g. \"2025mdpas\")","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_sb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event (Statbotics) — event_sb","text":"","code":"pasadena <- event_sb(\"2025mdpas\")"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_tangibles.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Tangibles — event_tangibles","title":"Event Tangibles — event_tangibles","text":"Pulls \"tangible\" results given event TBA. Identifies \"tangible\" fields standard \"robot\" naming schema TBA FIRST API tends use describe robot-specific fields.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_tangibles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Tangibles — event_tangibles","text":"","code":"event_tangibles(   event_key,   schema = schema_cfs,   qual_only = T,   pct = T,   digits = 2 )"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_tangibles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Tangibles — event_tangibles","text":"event_key TBA-legal event key (.e. \"2025vagle\") schema function defining schema column names. schema_cfs() standard 2018 - 2025 (likely beyond) qual_only (logical) include qual matches? FALSE, include qualification playoff matches. pct Convert data columns percentage rather count? digits non-NULL, rounds numeric columns number digits supplied.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_tangibles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Tangibles — event_tangibles","text":"","code":"event_tangibles(\"2025vagle\") #>          id autoline_yes_pct autoline_no_pct endgame_deepcage_pct #> 1  frc10224             1.00            0.00                 0.00 #> 2  frc10257             1.00            0.00                 0.00 #> 3  frc10370             1.00            0.00                 0.00 #> 4   frc1086             1.00            0.00                 0.00 #> 5   frc1262             1.00            0.00                 0.00 #> 6   frc1522             0.92            0.08                 0.00 #> 7   frc1599             0.83            0.17                 0.58 #> 8   frc1731             1.00            0.00                 0.75 #> 9   frc1895             1.00            0.00                 0.00 #> 10  frc2106             1.00            0.00                 0.17 #> 11  frc2988             0.67            0.33                 0.00 #> 12  frc2998             0.58            0.42                 0.00 #> 13  frc3258             0.75            0.25                 0.00 #> 14  frc3361             0.08            0.92                 0.00 #> 15  frc3373             1.00            0.00                 0.42 #> 16   frc339             1.00            0.00                 0.00 #> 17   frc346             1.00            0.00                 0.00 #> 18   frc404             0.92            0.08                 0.00 #> 19  frc4286             0.50            0.50                 0.00 #> 20  frc4472             0.92            0.08                 0.00 #> 21   frc449             1.00            0.00                 0.00 #> 22  frc4505             0.58            0.42                 0.00 #> 23   frc539             0.92            0.08                 0.00 #> 24   frc540             0.75            0.25                 0.00 #> 25  frc5724             1.00            0.00                 0.00 #> 26  frc5804             0.83            0.17                 0.00 #> 27   frc614             1.00            0.00                 0.00 #> 28   frc617             0.08            0.92                 0.00 #> 29  frc6326             0.92            0.08                 0.00 #> 30  frc6802             1.00            0.00                 0.50 #> 31  frc8592             1.00            0.00                 0.42 #> 32  frc9003             1.00            0.00                 0.00 #> 33  frc9214             0.67            0.33                 0.00 #> 34  frc9709             0.50            0.50                 0.00 #>    endgame_parked_pct endgame_none_pct n_matches_count #> 1                0.50             0.50              12 #> 2                1.00             0.00              12 #> 3                0.92             0.08              12 #> 4                0.42             0.58              12 #> 5                0.75             0.25              12 #> 6                0.75             0.25              12 #> 7                0.33             0.08              12 #> 8                0.25             0.00              12 #> 9                0.75             0.25              12 #> 10               0.83             0.00              12 #> 11               0.42             0.58              12 #> 12               0.58             0.42              12 #> 13               0.83             0.17              12 #> 14               0.75             0.25              12 #> 15               0.58             0.00              12 #> 16               0.42             0.58              12 #> 17               1.00             0.00              12 #> 18               0.33             0.67              12 #> 19               0.33             0.67              12 #> 20               1.00             0.00              12 #> 21               0.83             0.17              12 #> 22               0.50             0.50              12 #> 23               0.75             0.25              12 #> 24               0.08             0.92              12 #> 25               0.75             0.25              12 #> 26               0.92             0.08              12 #> 27               0.50             0.50              12 #> 28               0.50             0.50              12 #> 29               0.92             0.08              12 #> 30               0.42             0.08              12 #> 31               0.50             0.08              12 #> 32               0.75             0.25              12 #> 33               0.42             0.58              12 #> 34               1.00             0.00              12 event_tangibles(\"2025vagle\", qual_only = FALSE) #>          id autoline_yes_pct autoline_no_pct endgame_deepcage_pct #> 1  frc10224             0.93            0.07                 0.00 #> 2  frc10257             1.00            0.00                 0.00 #> 3  frc10370             1.00            0.00                 0.00 #> 4   frc1086             1.00            0.00                 0.00 #> 5   frc1262             1.00            0.00                 0.00 #> 6   frc1522             0.93            0.07                 0.00 #> 7   frc1599             0.87            0.13                 0.60 #> 8   frc1731             1.00            0.00                 0.82 #> 9   frc1895             1.00            0.00                 0.00 #> 10  frc2106             1.00            0.00                 0.11 #> 11  frc2988             0.67            0.33                 0.00 #> 12  frc2998             0.58            0.42                 0.00 #> 13  frc3258             0.75            0.25                 0.00 #> 14  frc3361             0.08            0.92                 0.00 #> 15  frc3373             1.00            0.00                 0.36 #> 16   frc339             1.00            0.00                 0.00 #> 17   frc346             1.00            0.00                 0.00 #> 18   frc404             0.93            0.07                 0.00 #> 19  frc4286             0.50            0.50                 0.00 #> 20  frc4472             0.79            0.21                 0.00 #> 21   frc449             1.00            0.00                 0.00 #> 22  frc4505             0.69            0.31                 0.00 #> 23   frc539             0.94            0.06                 0.00 #> 24   frc540             0.81            0.19                 0.00 #> 25  frc5724             1.00            0.00                 0.00 #> 26  frc5804             0.88            0.12                 0.00 #> 27   frc614             1.00            0.00                 0.00 #> 28   frc617             0.08            0.92                 0.00 #> 29  frc6326             0.94            0.06                 0.00 #> 30  frc6802             1.00            0.00                 0.43 #> 31  frc8592             1.00            0.00                 0.32 #> 32  frc9003             1.00            0.00                 0.00 #> 33  frc9214             0.67            0.33                 0.00 #> 34  frc9709             0.50            0.50                 0.00 #>    endgame_parked_pct endgame_none_pct n_matches_count #> 1                0.57             0.43              14 #> 2                1.00             0.00              12 #> 3                0.85             0.15              13 #> 4                0.56             0.44              16 #> 5                0.60             0.40              15 #> 6                0.73             0.27              15 #> 7                0.33             0.07              15 #> 8                0.18             0.00              17 #> 9                0.79             0.21              14 #> 10               0.84             0.05              19 #> 11               0.42             0.58              12 #> 12               0.58             0.42              12 #> 13               0.83             0.17              12 #> 14               0.75             0.25              12 #> 15               0.64             0.00              14 #> 16               0.63             0.37              19 #> 17               0.93             0.07              15 #> 18               0.33             0.67              15 #> 19               0.33             0.67              12 #> 20               1.00             0.00              14 #> 21               0.65             0.35              17 #> 22               0.56             0.44              16 #> 23               0.81             0.19              16 #> 24               0.25             0.75              16 #> 25               0.79             0.21              14 #> 26               0.94             0.06              16 #> 27               0.56             0.44              16 #> 28               0.50             0.50              12 #> 29               0.88             0.12              16 #> 30               0.50             0.07              14 #> 31               0.63             0.05              19 #> 32               0.67             0.33              15 #> 33               0.42             0.58              12 #> 34               1.00             0.00              12 event_tangibles(\"2017mrcmp\", schema = schema_csf) #> Error: object 'schema_csf' not found"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Teams — event_teams","title":"Event Teams — event_teams","text":"Reads teams given event","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Teams — event_teams","text":"","code":"event_teams(key, statuses = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/event_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Teams — event_teams","text":"key TBA legal event key statuses (bool) unpack event statuses? simple (bool) simplify teams objects? keys (bool) get keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_teams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Teams — event_teams","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/event_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Teams — event_teams","text":"","code":"event_teams(\"2015padre\", keys = TRUE) #>  [1] \"frc103\"  \"frc1143\" \"frc1168\" \"frc1391\" \"frc1495\" \"frc1712\" \"frc1791\" #>  [8] \"frc225\"  \"frc2539\" \"frc2607\" \"frc272\"  \"frc316\"  \"frc321\"  \"frc357\"  #> [15] \"frc365\"  \"frc3929\" \"frc3974\" \"frc423\"  \"frc433\"  \"frc4342\" \"frc4454\" #> [22] \"frc4460\" \"frc4575\" \"frc4637\" \"frc4750\" \"frc484\"  \"frc4954\" \"frc5401\" #> [29] \"frc5404\" \"frc5420\" \"frc5457\" \"frc5733\" \"frc708\"  \"frc709\"  \"frc87\""},{"path":"https://gkrotkov.github.io/scoutR/reference/events.html","id":null,"dir":"Reference","previous_headings":"","what":"Events — events","title":"Events — events","text":"Reads group event objects TBA API","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Events — events","text":"","code":"events(year, official = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Events — events","text":"year year interest official (bool) get official events? simple (bool) simplify event objects? keys (bool) get keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Events — events","text":"tidy tibble event objects, vector keys = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Events — events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Events — events","text":"","code":"events(2019) #> # A tibble: 303 × 30 #>    address   city  country district division_keys end_date event_code event_type #>    <chr>     <chr> <chr>   <list>   <list>        <chr>    <chr>           <int> #>  1 7555 Fal… Calg… Canada  <NULL>   <NULL>        2019-04… abca                0 #>  2 700 Monr… Hunt… USA     <NULL>   <NULL>        2019-03… alhu                0 #>  3 1 Washin… Detr… USA     <NULL>   <NULL>        2019-04… arc                 3 #>  4 2600 How… Litt… USA     <NULL>   <NULL>        2019-03… arli                0 #>  5 1529 E P… Sear… USA     <NULL>   <NULL>        2019-09… aroz               99 #>  6 Balaclav… Macq… Austra… <NULL>   <NULL>        2019-07… audd               99 #>  7 Olympic … Sydn… Austra… <NULL>   <NULL>        2019-03… ausc                0 #>  8 Olympic … Sydn… Austra… <NULL>   <NULL>        2019-03… ausp                0 #>  9 1701 S S… Flag… USA     <NULL>   <NULL>        2019-03… azfl                0 #> 10 3300 W C… Phoe… USA     <NULL>   <NULL>        2019-04… azpx                0 #> # ℹ 293 more rows #> # ℹ 22 more variables: event_type_string <chr>, first_event_code <chr>, #> #   first_event_id <chr>, gmaps_place_id <chr>, gmaps_url <chr>, key <chr>, #> #   lat <dbl>, lng <dbl>, location_name <chr>, name <chr>, #> #   parent_event_key <chr>, playoff_type <int>, playoff_type_string <chr>, #> #   postal_code <chr>, short_name <chr>, start_date <chr>, state_prov <chr>, #> #   timezone <chr>, webcasts <list>, website <chr>, week <int>, year <int> events(2010, official = TRUE) #> # A tibble: 56 × 30 #>    address          city  country district     division_keys end_date event_code #>    <chr>            <chr> <chr>   <list>       <list>        <chr>    <chr>      #>  1 1 Georgia Dome … Atla… USA     <NULL>       <NULL>        2010-04… arc        #>  2 1826 W. McDowel… Phoe… USA     <NULL>       <NULL>        2010-03… az         #>  3 300 E Ocean Blv… Long… USA     <NULL>       <NULL>        2010-03… ca         #>  4 1 Georgia Dome … Atla… USA     <NULL>       <list [4]>    2010-04… cmp        #>  5 2240 Buchtel Bl… Denv… USA     <NULL>       <NULL>        2010-03… co         #>  6 100 Columbus Bl… Hart… USA     <NULL>       <NULL>        2010-04… ct         #>  7 1 Georgia Dome … Atla… USA     <NULL>       <NULL>        2010-04… cur        #>  8 6024 Airline Rd… Dall… USA     <NULL>       <NULL>        2010-03… da         #>  9 801 Mt Vernon P… Wash… USA     <NULL>       <NULL>        2010-03… dc         #> 10 42 W Warren Ave… Detr… USA     <named list> <NULL>        2010-03… dt         #> # ℹ 46 more rows #> # ℹ 23 more variables: event_type <int>, event_type_string <chr>, #> #   first_event_code <chr>, first_event_id <chr>, gmaps_place_id <chr>, #> #   gmaps_url <chr>, key <chr>, lat <dbl>, lng <dbl>, location_name <chr>, #> #   name <chr>, parent_event_key <chr>, playoff_type <int>, #> #   playoff_type_string <lgl>, postal_code <chr>, short_name <chr>, #> #   start_date <chr>, state_prov <chr>, timezone <chr>, webcasts <lgl>, … events(2012, simple = TRUE) #> # A tibble: 82 × 11 #>    city   country district end_date event_code event_type key   name  start_date #>    <chr>  <chr>   <list>   <chr>    <chr>           <int> <chr> <chr> <chr>      #>  1 St. L… USA     <NULL>   2012-04… arc                 3 2012… Arch… 2012-04-25 #>  2 Chand… USA     <NULL>   2012-03… az                  0 2012… Ariz… 2012-03-22 #>  3 Worce… USA     <NULL>   2012-05… bc                 99 2012… Batt… 2012-05-18 #>  4 Long … USA     <NULL>   2012-03… ca                  0 2012… Los … 2012-03-15 #>  5 San D… USA     <NULL>   2012-10… cabb               99 2012… Batt… 2012-10-20 #>  6 Madera USA     <NULL>   2012-04… caf                 0 2012… Cent… 2012-04-05 #>  7 Woods… USA     <NULL>   2012-10… cal                99 2012… CalG… 2012-10-12 #>  8 St. L… USA     <NULL>   2012-04… cmp                 4 2012… Eins… 2012-04-28 #>  9 Denver USA     <NULL>   2012-03… co                  0 2012… Colo… 2012-03-22 #> 10 Hartf… USA     <NULL>   2012-03… ct                  0 2012… Nort… 2012-03-29 #> # ℹ 72 more rows #> # ℹ 2 more variables: state_prov <chr>, year <int> events(2015, keys = TRUE) #>   [1] \"2015abca\"   \"2015arc\"    \"2015arfa\"   \"2015auddu\"  \"2015ausy\"   #>   [6] \"2015azch\"   \"2015azpx\"   \"2015azsc\"   \"2015bc\"     \"2015bt\"     #>  [11] \"2015cabb\"   \"2015cacc\"   \"2015cacg\"   \"2015cafc\"   \"2015cafc2\"  #>  [16] \"2015calb\"   \"2015cama\"   \"2015carm\"   \"2015cars\"   \"2015carv\"   #>  [21] \"2015casa\"   \"2015casd\"   \"2015casj\"   \"2015cave\"   \"2015cc\"     #>  [26] \"2015cmp\"    \"2015code\"   \"2015crc\"    \"2015cthar\"  \"2015ctsc\"   #>  [31] \"2015ctss\"   \"2015cttd\"   \"2015ctwat\"  \"2015cur\"    \"2015dcwa\"   #>  [36] \"2015flfo\"   \"2015flmm\"   \"2015flor\"   \"2015flpp\"   \"2015flrc\"   #>  [41] \"2015gadu\"   \"2015gagr\"   \"2015gal\"    \"2015gape\"   \"2015gaxb\"   #>  [46] \"2015glbbb\"  \"2015hiho\"   \"2015hop\"    \"2015ilch\"   \"2015ilil\"   #>  [51] \"2015ilrr\"   \"2015incm\"   \"2015incmp\"  \"2015inind\"  \"2015inkok\"  #>  [56] \"2015inwla\"  \"2015ios\"    \"2015iri\"    \"2015iroc\"   \"2015ista\"   #>  [61] \"2015lake\"   \"2015mabos\"  \"2015manda\"  \"2015marc\"   \"2015marea\"  #>  [66] \"2015maspr\"  \"2015mdbb\"   \"2015mdcp\"   \"2015melew\"  \"2015mems\"   #>  [71] \"2015mesh\"   \"2015mibed\"  \"2015mibg\"   \"2015micen\"  \"2015micmp\"  #>  [76] \"2015miesc\"  \"2015mifla\"  \"2015migul\"  \"2015mihow\"  \"2015miken\"  #>  [81] \"2015miket\"  \"2015milan\"  \"2015miliv\"  \"2015mimid\"  \"2015misjo\"  #>  [86] \"2015misou\"  \"2015mista\"  \"2015mitry\"  \"2015mitvc\"  \"2015miwat\"  #>  [91] \"2015miwmi\"  \"2015mm\"     \"2015mndu\"   \"2015mndu2\"  \"2015mngggt\" #>  [96] \"2015mnmi\"   \"2015mnmi2\"  \"2015mnsc\"   \"2015mobp\"   \"2015mogw\"   #> [101] \"2015mokc\"   \"2015mosc\"   \"2015mosl\"   \"2015mrcmp\"  \"2015mttd\"   #> [106] \"2015mxmc\"   \"2015ncre\"   \"2015ncth\"   \"2015necmp\"  \"2015new\"    #> [111] \"2015nhbb\"   \"2015nhdur\"  \"2015nhmm\"   \"2015nhnas\"  \"2015nhwz\"   #> [116] \"2015njbe\"   \"2015njbri\"  \"2015njdd\"   \"2015njfla\"  \"2015njmm\"   #> [121] \"2015njnbr\"  \"2015njtab\"  \"2015nvlv\"   \"2015nyli\"   \"2015nyny\"   #> [126] \"2015nyro\"   \"2015nyrr\"   \"2015nytr\"   \"2015nytv\"   \"2015ohci\"   #> [131] \"2015ohcl\"   \"2015ohmv\"   \"2015ohri\"   \"2015ohst\"   \"2015okok\"   #> [136] \"2015onffj\"  \"2015onffs\"  \"2015onnb\"   \"2015onsc\"   \"2015onto\"   #> [141] \"2015onto2\"  \"2015onwa\"   \"2015onwi\"   \"2015orore\"  \"2015orphi\"  #> [146] \"2015orwil\"  \"2015padre\"  \"2015pahat\"  \"2015paphi\"  \"2015papi\"   #> [151] \"2015parr\"   \"2015pncmp\"  \"2015qcmo\"   \"2015rismi\"  \"2015rsr\"    #> [156] \"2015scmb\"   \"2015scri\"   \"2015tes\"    \"2015tnkn\"   \"2015txda\"   #> [161] \"2015txho\"   \"2015txlu\"   \"2015txrb\"   \"2015txri\"   \"2015txrm\"   #> [166] \"2015txrr\"   \"2015txsa\"   \"2015utwv\"   \"2015vari\"   \"2015varr\"   #> [171] \"2015waahs\"  \"2015waamv\"  \"2015waell\"  \"2015wamou\"  \"2015washo\"  #> [176] \"2015wasno\"  \"2015waspo\"  \"2015wimi\"   \"2015wirf\"   \"2015wiwi\"   #> [181] \"2015wmri\""},{"path":"https://gkrotkov.github.io/scoutR/reference/events_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Events (Statbotics) — events_sb","title":"Events (Statbotics) — events_sb","text":"Returns batch statbotics event objects conforming given parameters","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/events_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Events (Statbotics) — events_sb","text":"","code":"events_sb(...)"},{"path":"https://gkrotkov.github.io/scoutR/reference/events_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Events (Statbotics) — events_sb","text":"... Parameters passed statbotics /v3/events endpoint","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_event_lr.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Event Linear Regression — fit_event_lr","title":"Fit Event Linear Regression — fit_event_lr","text":"Performs linear regression origin given event. default settings, compute OPR; cOPRs can retrieved changing `response` field.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_event_lr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Event Linear Regression — fit_event_lr","text":"","code":"fit_event_lr(   event_code,   match_type = \"qual\",   response = \"score\",   w = NULL,   flip_response_alliance = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_event_lr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Event Linear Regression — fit_event_lr","text":"event_code TBA-legal event code (e.g. \"2024paca\") match_type One \"qual\", \"playoff\", \"\" response response variable interest linear regression. compute regular OPR, pick \"score\". Component OPRs can computed supplying string different response. w Numeric vector indicating weights apply row flip_response_alliance (bool) TRUE, uses blue alliance response red alliance design matrix vice versa. can useful calculating foul contributions alliance defensive metrics.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_event_lr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Event Linear Regression — fit_event_lr","text":"Fitted lm object; retrieve coefficients call coefficients(fit)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_event_lr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Event Linear Regression — fit_event_lr","text":"Assumes event matches dataframe follows convention \"(red/blue)_(response)\" (response) type score interested computing approximation contribution .","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_event_lr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Event Linear Regression — fit_event_lr","text":"","code":"fit_event_lr(\"2024paca\") #>  #> Call: #> lm(formula = response ~ 0 + ., data = design, weights = w) #>  #> Coefficients: #>  frc117   frc144   frc325   frc340   frc379   frc578   frc677   frc695   #>  17.350   20.790   30.720   20.948   20.630    5.232   11.324   27.089   #> frc1126  frc1559  frc1708  frc1787  frc2013  frc2053  frc2172  frc2228   #>  16.861   17.685   23.340   34.827    6.928   15.692   10.913   17.101   #> frc2252  frc2399  frc2614  frc2638  frc2641  frc2656  frc3015  frc3181   #>  24.981   17.446   24.605   14.414   17.629   17.003   35.502   16.758   #> frc3201  frc3260  frc3484  frc3492  frc3504  frc3954  frc4027  frc4050   #>  31.846   13.140   15.508    8.216   24.445   20.856   25.283    9.845   #> frc4121  frc4145  frc4150  frc4611  frc4991  frc5413  frc5740  frc6834   #>  30.092   14.035   21.774   28.150    9.623    9.992   12.281   20.959   #> frc7274  frc7515  frc8096  frc8393  frc8705  frc9004  frc9022  frc9139   #>   9.332   13.019   11.734   -1.230    5.104    2.183   12.197   16.531   #> frc9415  frc9475   #>   1.825   12.379   #>  fit_event_lr(\"2023mil\", response = \"teleopGamePieceCount\") #>  #> Call: #> lm(formula = response ~ 0 + ., data = design, weights = w) #>  #> Coefficients: #>   frc25   frc135   frc176   frc316   frc319   frc360   frc384   frc469   #>   6.628    6.760    9.870    7.936    8.226    6.049    8.198    6.813   #>  frc587   frc597   frc604   frc694   frc910   frc930   frc987  frc1072   #>   7.432    6.642    8.614    8.052    6.293   10.372    8.312    6.334   #> frc1218  frc1241  frc1414  frc1506  frc1599  frc1683  frc1745  frc1923   #>   6.754    6.195    7.641    8.459    5.631    6.584    8.707    9.107   #> frc1983  frc2230  frc2240  frc2399  frc2403  frc2489  frc2539  frc2635   #>   5.654    7.356    6.911    7.666    5.857    4.240    9.680    3.533   #> frc2638  frc2656  frc2974  frc3374  frc3604  frc3620  frc3655  frc3668   #>   5.222    4.482    9.073    5.215    7.894    7.115    8.411    7.146   #> frc3679  frc3683  frc3937  frc4020  frc4039  frc4122  frc4175  frc4561   #>   6.170    8.915    8.959    5.717    8.550    3.585    3.729    7.009   #> frc4693  frc4779  frc5024  frc5089  frc5152  frc5409  frc5411  frc5419   #>   3.985    6.618    5.828    5.235    6.431    8.221    6.006    7.018   #> frc5505  frc5618  frc5653  frc5895  frc5913  frc5988  frc6090  frc6352   #>   5.508    2.323    5.769    8.513    6.579    3.026    6.655    4.308   #> frc6420  frc6672  frc6823  frc6865  frc7018  frc8576  frc9007  frc9008   #>   6.318    9.653    7.938    5.626    4.449    5.666    4.753    2.593   #> frc9022  frc9075  frc9076  frc9125  frc9244   #>   4.533    4.615    3.120    5.277    2.484   #>  fit_event_lr(\"2024new\", match_type = \"all\") #>  #> Call: #> lm(formula = response ~ 0 + ., data = design, weights = w) #>  #> Coefficients: #>   frc58    frc59    frc85   frc111   frc254   frc294   frc316   frc359   #>  26.011   40.587   30.573   43.172   56.308   27.875   37.089   46.319   #>  frc369   frc610   frc836   frc888  frc1025  frc1156  frc1189  frc1323   #>  10.669   29.237   32.563   27.552   31.032   40.863   41.112   64.116   #> frc1629  frc1778  frc1792  frc1797  frc1880  frc1891  frc2341  frc2767   #>  33.711   55.671   16.254   21.707   20.534   14.520   19.361   46.402   #> frc2910  frc2974  frc3008  frc3015  frc3196  frc3339  frc3354  frc3414   #>  54.008   48.840   19.395   30.398   21.033   38.486   12.276   46.992   #> frc3472  frc3473  frc3476  frc3478  frc3504  frc3506  frc3620  frc3663   #>   6.311   19.373   27.046   51.659   27.902   40.040   39.811   44.557   #> frc3937  frc4039  frc4130  frc4329  frc4392  frc4607  frc4779  frc5024   #>  37.577   39.740   31.057   28.289   31.590   42.402   36.676   32.460   #> frc5472  frc5614  frc5804  frc5914  frc5933  frc5985  frc6014  frc6191   #>  42.417   38.603   44.248    8.751   23.696    9.832   17.325   -1.855   #> frc6366  frc6429  frc6443  frc6919  frc7111  frc7565  frc7605  frc7748   #>  34.426   23.870   40.211   36.882   14.887   21.569   13.303    4.219   #> frc8048  frc8393  frc8780  frc9098  frc9401  frc9475  frc9477  frc9495   #>  28.228   18.542    8.624   36.115   44.144   11.493   12.009   11.057   #> frc9602  frc9609  frc9613   #>   6.727   36.274    6.870   #>  fit_event_lr(\"2024paca\", response = \"foulPoints\", flip_response_alliance = T) #>  #> Call: #> lm(formula = response ~ 0 + ., data = design, weights = w) #>  #> Coefficients: #>   frc117    frc144    frc325    frc340    frc379    frc578    frc677    frc695   #> -0.07866  -0.26968   3.03721   2.97982   0.53536   3.23848  -0.43398   2.24065   #>  frc1126   frc1559   frc1708   frc1787   frc2013   frc2053   frc2172   frc2228   #>  3.98934   1.85517  -1.40523  -1.91714   1.39115   1.21372   0.23473   2.76690   #>  frc2252   frc2399   frc2614   frc2638   frc2641   frc2656   frc3015   frc3181   #>  0.81981   1.70962  -0.42900   1.14738   2.47890  -0.17572  -2.19345   1.90455   #>  frc3201   frc3260   frc3484   frc3492   frc3504   frc3954   frc4027   frc4050   #>  0.13200  -1.54401   1.76614   0.56782   0.43775   1.63516  -1.37627   2.42047   #>  frc4121   frc4145   frc4150   frc4611   frc4991   frc5413   frc5740   frc6834   #>  0.76563   1.69059  -0.55735  -1.75418   0.81411   3.34038   2.18137   3.69759   #>  frc7274   frc7515   frc8096   frc8393   frc8705   frc9004   frc9022   frc9139   #>  1.73416   0.83289   1.30827  -0.80325   0.40470   2.51817   0.14655   2.15096   #>  frc9415   frc9475   #>  0.34034   3.95450   #>"},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_lineup_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Lineup Linear Model — fit_lineup_lm","title":"Fit Lineup Linear Model — fit_lineup_lm","text":"Computes lineup design matrix given dataframe `lineups`, fits linear model using given `responses`.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_lineup_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Lineup Linear Model — fit_lineup_lm","text":"","code":"fit_lineup_lm(lineups, responses, w = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_lineup_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Lineup Linear Model — fit_lineup_lm","text":"lineups dataframe lineups assumed columns `blue1`, `blue2`, `blue3`, `red1`, `red2`, `red3`. can like dataframe matches output `event_matches`. responses list two vectors, `red` `blue`. must vector length number rows `lineups`, representing response value fit linear model . w Weights WLS fit. Weights extended `rep_len` length corresponding rows `lineups`.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_lineup_lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Lineup Linear Model — fit_lineup_lm","text":"Key assumption - order `lineups` `responses` vector must line exactly. Otherwise, fit meaningless. Fits regression origin - fixing intercept coefficient 0. Regression always origin model validity (want matrix full rank) , unlike basketball (R)APM, home team advantage account .","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/fit_lineup_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Lineup Linear Model — fit_lineup_lm","text":"","code":"gpr <- event_matches(\"2024paca\", match_type = \"qual\") opr <- fit_lineup_lm(gpr, list(red = gpr$red_score, blue = gpr$blue_score))"},{"path":"https://gkrotkov.github.io/scoutR/reference/get_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Content — get_content","title":"Get Content — get_content","text":"Executes API request given endpoint API base","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Content — get_content","text":"","code":"get_content(req, params = list(), base = TBA_BASE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/get_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Content — get_content","text":"req request string endpoint base API base string (example, TBA Statbotics API root)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Content — get_content","text":"JSON list result string","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_content.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Content — get_content","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Content — get_content","text":"","code":"get_content(\"team/frc1712/awards\") #> Error in get_content(\"team/frc1712/awards\"): could not find function \"get_content\" get_content(\"team/3504\", base = STATBOTICS_BASE) #> Error in get_content(\"team/3504\", base = STATBOTICS_BASE): could not find function \"get_content\""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_multifield_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dataframe for multiple fields — get_multifield_df","title":"Get Dataframe for multiple fields — get_multifield_df","text":"Applies get_robot_field_df function fields provided returns dataframe resulting data","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_multifield_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dataframe for multiple fields — get_multifield_df","text":"","code":"get_multifield_df(   matches,   fields = NULL,   schema = schema_cfs,   unlist = TRUE,   merge = TRUE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/get_multifield_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dataframe for multiple fields — get_multifield_df","text":"matches dataframe matches rows fields vector name fields want pulled . NULL, scoutR guess id_robot_fields() schema function defining schema column names unlist (boolean) unlist result? Vast majority time TRUE, FALSE content given field complicated content fit vector merge TRUE, simplifying resulting list dataframes single dataframe using Reduce","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_multifield_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Dataframe for multiple fields — get_multifield_df","text":"assumes fields considered categorical - treat numeric variables categorical.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_multifield_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dataframe for multiple fields — get_multifield_df","text":"","code":"mil23 <- event_matches(\"2023mil\") fields <- id_robot_fields(mil23) #> Error in id_robot_fields(mil23): could not find function \"id_robot_fields\" get_multifield_df(mil23, fields) #> Error in get_multifield_df(mil23, fields): could not find function \"get_multifield_df\" fma17 <- event_matches(\"2017mrcmp\") fields <- c(\"auto\") get_multifield_df(fma17, fields, schema = schema_csf) #> Error in get_multifield_df(fma17, fields, schema = schema_csf): could not find function \"get_multifield_df\""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Robot Field Getter — get_robot_field","title":"Generic Robot Field Getter — get_robot_field","text":"generic solution getting fields tba use \"(color)_nameRobot#\" naming style. Assumes field leading underscore. schema optional parameter allows user define schema \"(color)_nameRobot#\" style inapplicable","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Robot Field Getter — get_robot_field","text":"","code":"get_robot_field(matches, field, team_id, schema = schema_cfs, unlist = T)"},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Robot Field Getter — get_robot_field","text":"matches dataframe match rows field variable name interest (color)_(field)Robot(#) format team_id team id interest schema (function) function takes alliance color, driver station number, name relevant field returns column name variable interest. **Supply parameter without parentheses**. Also note schema_csf exists years 2016 2017. unlist (boolean) unlist result? Vast majority time TRUE, FALSE content complicated content fit vector.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Robot Field Getter — get_robot_field","text":"","code":"mil23 <- event_matches(\"2023mil\") get_robot_field(mil23, \"mobility\", 6672) #> Error in get_robot_field(mil23, \"mobility\", 6672): could not find function \"get_robot_field\" get_robot_field(mil23, \"endGameChargeStation\", 2539) #> Error in get_robot_field(mil23, \"endGameChargeStation\", 2539): could not find function \"get_robot_field\" mar16 <- event_matches(\"2016mrcmp\") get_robot_field(mar16, \"auto\", 1712, schema = schema_csf) #> Error in get_robot_field(mar16, \"auto\", 1712, schema = schema_csf): could not find function \"get_robot_field\""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Field Dataframe (Robot-level) — get_robot_field_df","title":"Get Field Dataframe (Robot-level) — get_robot_field_df","text":"Returns dataframe results every robot matches field specified field.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Field Dataframe (Robot-level) — get_robot_field_df","text":"","code":"get_robot_field_df(matches, field, schema = schema_cfs, unlist = T)"},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Field Dataframe (Robot-level) — get_robot_field_df","text":"matches dataframe match rows field name field interest schema function defining schema column names unlist (boolean) unlist result? Vast majority time TRUE, FALSE content complicated content fit vector.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_robot_field_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Field Dataframe (Robot-level) — get_robot_field_df","text":"","code":"mil23 <- event_matches(\"2023mil\") get_robot_field_df(mil23, \"autoChargeStation\") #> Error in get_robot_field_df(mil23, \"autoChargeStation\"): could not find function \"get_robot_field_df\" mar17 <- event_matches(\"2017mrcmp\") get_robot_field_df(mar17, \"auto\", schema = schema_csf) #> Error in get_robot_field_df(mar17, \"auto\", schema = schema_csf): could not find function \"get_robot_field_df\""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_team_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Team Stations — get_team_stations","title":"Get Team Stations — get_team_stations","text":"Returns df containing indices team's matches alliance station team match.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_team_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Team Stations — get_team_stations","text":"","code":"get_team_stations(matches, key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/get_team_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Team Stations — get_team_stations","text":"matches dataframe matches alliances broken key team key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/get_team_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Team Stations — get_team_stations","text":"data frame match indices alliance station","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id2int.html","id":null,"dir":"Reference","previous_headings":"","what":"ID to Int — id2int","title":"ID to Int — id2int","text":"Coerce string team formatting int","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id2int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ID to Int — id2int","text":"","code":"id2int(id, prefix = \"frc\")"},{"path":"https://gkrotkov.github.io/scoutR/reference/id2int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ID to Int — id2int","text":"id TBA-legal team formatted string (.e. \"frc3504\") prefix string prefix id (overwhelming majority cases \"frc\")","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id_robot_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"ID Robot Fields — id_robot_fields","title":"ID Robot Fields — id_robot_fields","text":"Helper function returns column names matches include \"robot\" . Useful identify fields may want include input get_multifield_df().","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id_robot_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ID Robot Fields — id_robot_fields","text":"","code":"id_robot_fields(matches, simplify = TRUE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/id_robot_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ID Robot Fields — id_robot_fields","text":"matches dataframe match objects simplify (bool) TRUE, make assumptions naming schema cut away alliance color robot number can make output little less ugly.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id_unplayed.html","id":null,"dir":"Reference","previous_headings":"","what":"ID Unplayed Matches — id_unplayed","title":"ID Unplayed Matches — id_unplayed","text":"function takes dataframe TBA match objects identifies matches played.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id_unplayed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ID Unplayed Matches — id_unplayed","text":"","code":"id_unplayed(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/id_unplayed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ID Unplayed Matches — id_unplayed","text":"matches dataframe TBA match objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/id_unplayed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ID Unplayed Matches — id_unplayed","text":"identify match unplayed red blue alliances score -1.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/indexer.html","id":null,"dir":"Reference","previous_headings":"","what":"Indexer — indexer","title":"Indexer — indexer","text":"Indexer","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/indexer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indexer — indexer","text":"","code":"indexer(row, col)"},{"path":"https://gkrotkov.github.io/scoutR/reference/indexer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Indexer — indexer","text":"Isolde Moyer Helper function access matrix diagonal.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/initialize_scoutR.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize scoutR — initialize_scoutR","title":"Initialize scoutR — initialize_scoutR","text":"Function store auth key scoutR user's HOME directory","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/initialize_scoutR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize scoutR — initialize_scoutR","text":"","code":"initialize_scoutR(auth_key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_key_official.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify an event key as official — is_event_key_official","title":"Identify an event key as official — is_event_key_official","text":"Returns boolean describing whether given event key official","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_key_official.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify an event key as official — is_event_key_official","text":"","code":"is_event_key_official(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_key_official.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify an event key as official — is_event_key_official","text":"key TBA event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_key_official.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify an event key as official — is_event_key_official","text":"(bool) event official?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_key_official.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify an event key as official — is_event_key_official","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_key_official.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify an event key as official — is_event_key_official","text":"","code":"is_event_key_official(read_event(\"2016parr\")) #> Error in is_event_key_official(read_event(\"2016parr\")): could not find function \"is_event_key_official\" is_event_key_official(read_event(\"2016paphi\")) #> Error in is_event_key_official(read_event(\"2016paphi\")): could not find function \"is_event_key_official\""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_official.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify an official event — is_event_official","title":"Identify an official event — is_event_official","text":"Returns boolean describing whether event offical, using TBA's event type code.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_official.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify an official event — is_event_official","text":"","code":"is_event_official(event)"},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_official.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify an official event — is_event_official","text":"event TBA Event object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_official.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify an official event — is_event_official","text":"(bool) input event official?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_official.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify an official event — is_event_official","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_event_official.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify an official event — is_event_official","text":"","code":"is_event_official(read_event(\"2016parr\")) #> Error in is_event_official(read_event(\"2016parr\")): could not find function \"is_event_official\" is_event_official(read_event(\"2016pahat\")) #> Error in is_event_official(read_event(\"2016pahat\")): could not find function \"is_event_official\""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_qual_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify qualification match — is_qual_match","title":"Identify qualification match — is_qual_match","text":"Returns boolean given match object representing whether match qualification match.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_qual_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify qualification match — is_qual_match","text":"","code":"is_qual_match(match)"},{"path":"https://gkrotkov.github.io/scoutR/reference/is_qual_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify qualification match — is_qual_match","text":"match TBA Match object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_qual_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify qualification match — is_qual_match","text":"boolean","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_qual_match.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify qualification match — is_qual_match","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_qual_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify qualification match — is_qual_match","text":"","code":"paphi <- read_event_matches(\"2016paphi\") #> Error in read_event_matches(\"2016paphi\"): could not find function \"read_event_matches\" is_qual_match(paphi[[1]]) #> Error in is_qual_match(paphi[[1]]): could not find function \"is_qual_match\" is_qual_match(paphi[[56]]) #> Error in is_qual_match(paphi[[56]]): could not find function \"is_qual_match\""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_score_posted.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Posted Identified — is_score_posted","title":"Score Posted Identified — is_score_posted","text":"Returns boolean whether score posted given match object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_score_posted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Posted Identified — is_score_posted","text":"","code":"is_score_posted(match)"},{"path":"https://gkrotkov.github.io/scoutR/reference/is_score_posted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Posted Identified — is_score_posted","text":"match TBA match object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_score_posted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Posted Identified — is_score_posted","text":"boolean, TRUE score posted, FALSE otherwise","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_score_posted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Score Posted Identified — is_score_posted","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/is_score_posted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score Posted Identified — is_score_posted","text":"","code":"match <- read_event_matches(\"2016paphi\")[[1]] #> Error in read_event_matches(\"2016paphi\"): could not find function \"read_event_matches\" is_score_posted(match) #> Error in is_score_posted(match): could not find function \"is_score_posted\""},{"path":"https://gkrotkov.github.io/scoutR/reference/lineup_design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Lineup Design Matrix — lineup_design_matrix","title":"Lineup Design Matrix — lineup_design_matrix","text":"Computes lineup design matrix (indicator variables one-hot encoding robot's presence match). used fit linear regression intercept scores response, resulting coefficients equal OPR. use nomenclature \"lineups\" reflect NBA \"lineup data\" related development OPR/Calculated Contribution.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/lineup_design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lineup Design Matrix — lineup_design_matrix","text":"","code":"lineup_design_matrix(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/lineup_design_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lineup Design Matrix — lineup_design_matrix","text":"matches Dataframe matches like output event_matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/lineup_design_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lineup Design Matrix — lineup_design_matrix","text":"Assumes match order irrelevant. Casts final output data.frame `lm` function expects data.frame. Returns blue alliances block, red alliances. call function \"design matrix\" includes indicator variables, responses.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/lineup_design_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lineup Design Matrix — lineup_design_matrix","text":"","code":"matches <- event_matches(\"2023mil\", match_type = \"qual\") matches <- matches[order(matches$match_number), ] design <- lineup_design_matrix(matches) design$score <- c(matches$blue_score, matches$red_score) fit <- lm(score ~ 0 + ., data = design) summary(fit) # retrieves OPRs #>  #> Call: #> lm(formula = score ~ 0 + ., data = design) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -49.747  -8.596   1.368  10.991  36.460  #>  #> Coefficients: #>         Estimate Std. Error t value Pr(>|t|)     #> frc25     46.902      6.551   7.159 1.96e-11 *** #> frc135    43.027      6.528   6.591 4.62e-10 *** #> frc176    66.202      6.564  10.085  < 2e-16 *** #> frc316    58.238      6.565   8.871 6.88e-16 *** #> frc319    61.239      6.520   9.393  < 2e-16 *** #> frc360    38.305      6.527   5.869 2.06e-08 *** #> frc384    58.890      6.541   9.004 2.99e-16 *** #> frc469    55.691      6.543   8.511 6.42e-15 *** #> frc587    56.617      6.587   8.595 3.83e-15 *** #> frc597    50.616      6.529   7.753 6.27e-13 *** #> frc604    64.133      6.531   9.820  < 2e-16 *** #> frc694    62.581      6.579   9.512  < 2e-16 *** #> frc910    50.573      6.576   7.691 9.03e-13 *** #> frc930    69.738      6.570  10.615  < 2e-16 *** #> frc987    55.354      6.547   8.455 9.10e-15 *** #> frc1072   45.461      6.245   7.279 9.88e-12 *** #> frc1218   47.835      6.473   7.390 5.23e-12 *** #> frc1241   47.527      6.188   7.681 9.59e-13 *** #> frc1414   52.912      6.508   8.131 6.54e-14 *** #> frc1506   55.372      6.465   8.564 4.63e-15 *** #> frc1599   49.209      6.544   7.520 2.46e-12 *** #> frc1683   54.401      6.646   8.186 4.69e-14 *** #> frc1745   57.355      6.453   8.888 6.18e-16 *** #> frc1923   65.649      6.532  10.050  < 2e-16 *** #> frc1983   38.904      6.551   5.939 1.44e-08 *** #> frc2230   50.020      6.508   7.686 9.32e-13 *** #> frc2240   49.103      6.474   7.585 1.68e-12 *** #> frc2399   68.519      6.465  10.598  < 2e-16 *** #> frc2403   37.227      6.478   5.747 3.79e-08 *** #> frc2489   27.173      6.543   4.153 5.05e-05 *** #> frc2539   67.546      6.240  10.824  < 2e-16 *** #> frc2635   33.435      6.557   5.099 8.56e-07 *** #> frc2638   38.788      6.609   5.869 2.05e-08 *** #> frc2656   29.805      6.567   4.539 1.03e-05 *** #> frc2974   63.727      6.553   9.725  < 2e-16 *** #> frc3374   42.786      6.522   6.560 5.46e-10 *** #> frc3604   56.358      6.634   8.495 7.10e-15 *** #> frc3620   56.670      6.554   8.647 2.78e-15 *** #> frc3655   64.404      6.561   9.817  < 2e-16 *** #> frc3668   48.777      6.469   7.540 2.19e-12 *** #> frc3679   49.814      6.460   7.712 7.99e-13 *** #> frc3683   56.138      6.487   8.653 2.67e-15 *** #> frc3937   64.619      6.591   9.804  < 2e-16 *** #> frc4020   42.248      6.454   6.546 5.89e-10 *** #> frc4039   61.401      6.548   9.377  < 2e-16 *** #> frc4122   30.500      6.528   4.673 5.79e-06 *** #> frc4175   30.083      6.588   4.566 9.15e-06 *** #> frc4561   48.074      6.611   7.271 1.03e-11 *** #> frc4693   26.866      6.537   4.110 6.00e-05 *** #> frc4779   47.749      6.538   7.304 8.59e-12 *** #> frc5024   40.905      6.482   6.311 2.08e-09 *** #> frc5089   32.740      6.540   5.006 1.31e-06 *** #> frc5152   56.095      6.524   8.598 3.75e-15 *** #> frc5409   61.325      6.539   9.378  < 2e-16 *** #> frc5411   49.298      6.570   7.503 2.72e-12 *** #> frc5419   44.193      6.567   6.729 2.17e-10 *** #> frc5505   43.029      6.524   6.596 4.51e-10 *** #> frc5618   29.989      6.633   4.521 1.11e-05 *** #> frc5653   34.976      6.573   5.322 3.02e-07 *** #> frc5895   56.393      6.528   8.638 2.93e-15 *** #> frc5913   39.685      6.487   6.118 5.72e-09 *** #> frc5988   21.556      6.536   3.298  0.00117 **  #> frc6090   59.325      6.530   9.085  < 2e-16 *** #> frc6352   33.084      6.240   5.302 3.31e-07 *** #> frc6420   49.047      6.536   7.505 2.69e-12 *** #> frc6672   60.535      6.540   9.256  < 2e-16 *** #> frc6823   58.039      6.589   8.808 1.02e-15 *** #> frc6865   37.529      6.515   5.761 3.54e-08 *** #> frc7018   32.699      6.541   4.999 1.35e-06 *** #> frc8576   41.346      6.570   6.293 2.28e-09 *** #> frc9007   28.847      6.554   4.401 1.84e-05 *** #> frc9008   27.898      6.585   4.237 3.61e-05 *** #> frc9022   36.326      6.569   5.530 1.11e-07 *** #> frc9075   32.940      6.584   5.003 1.33e-06 *** #> frc9076   21.123      6.504   3.248  0.00139 **  #> frc9125   45.637      6.546   6.971 5.66e-11 *** #> frc9244   18.817      6.564   2.867  0.00464 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 18.68 on 181 degrees of freedom #> Multiple R-squared:  0.9882,\tAdjusted R-squared:  0.9832  #> F-statistic: 197.4 on 77 and 181 DF,  p-value: < 2.2e-16 #>"},{"path":"https://gkrotkov.github.io/scoutR/reference/match_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract match keys — match_keys","title":"Extract match keys — match_keys","text":"Returns vector match keys given list TBA match objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/match_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract match keys — match_keys","text":"","code":"match_keys(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/match_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract match keys — match_keys","text":"matches List TBA match objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/match_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract match keys — match_keys","text":"Vector match keys","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/match_keys.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract match keys — match_keys","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/match_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract match keys — match_keys","text":"","code":"event_key <- \"2016paphi\" match_keys(read_event_matches(event_key)) #> Error in match_keys(read_event_matches(event_key)): could not find function \"match_keys\""},{"path":"https://gkrotkov.github.io/scoutR/reference/match_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Match (Statbotics) — match_sb","title":"Match (Statbotics) — match_sb","text":"Returns list representing statbotics info particular match","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/match_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match (Statbotics) — match_sb","text":"","code":"match_sb(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/match_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match (Statbotics) — match_sb","text":"key match key (e.g. \"2023milf1m3\")","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/matches_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Matches (Statbotics) — matches_sb","title":"Matches (Statbotics) — matches_sb","text":"Returns batch statbotics match objects conforming given parameters","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/matches_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matches (Statbotics) — matches_sb","text":"","code":"matches_sb(...)"},{"path":"https://gkrotkov.github.io/scoutR/reference/matches_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matches (Statbotics) — matches_sb","text":"... Parameters passed statbotics /v3/matches endpoint","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/max_coprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Max cOPRs — max_coprs","title":"Max cOPRs — max_coprs","text":"Max cOPRs","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/max_coprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Max cOPRs — max_coprs","text":"","code":"max_coprs(tms, yr, ...)"},{"path":"https://gkrotkov.github.io/scoutR/reference/max_coprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Max cOPRs — max_coprs","text":"tms (numeric) vector team ids yr (numeric) year ... additional arguments passed team_max_coprs()","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/normalize_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Weights — normalize_weights","title":"Normalize Weights — normalize_weights","text":"Takes vector real, non-negative weights converts integer form maintaining ratios elements.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/normalize_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Weights — normalize_weights","text":"","code":"normalize_weights(w, len_out = NA)"},{"path":"https://gkrotkov.github.io/scoutR/reference/normalize_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Weights — normalize_weights","text":"w vector weights len_out positive integer, desired output length normed weights","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/normalize_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Weights — normalize_weights","text":"vector scaled weights, guaranteed integer","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/normalize_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize Weights — normalize_weights","text":"Iteratively gets LCM denominators, guaranteed get integer results multiplying LCM. , *least* common multiple, smallest possible integer weights.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/prescout.html","id":null,"dir":"Reference","previous_headings":"","what":"Prescout — prescout","title":"Prescout — prescout","text":"Given event code, return df prescouting data","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/prescout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prescout — prescout","text":"","code":"prescout(event_code, fields = NULL, manual_teams = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/prescout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prescout — prescout","text":"event_code TBA-legal event code (ex. \"2024paca\") fields optional, robot fields want retrieve. NULL, uses `id_robot_fields()` get individual robot-level fields automatically. manual_teams (int) additional teams manually add team list","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/prescout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prescout — prescout","text":"Checks match duplication, stop execution TRUE.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/prescout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prescout — prescout","text":"","code":"gpr24 <- prescout(\"2024paca\") newton25 <- prescout(\"2025newton\", manual_teams = c(1712, 6672, 3504))"},{"path":"https://gkrotkov.github.io/scoutR/reference/qual_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Schedule — qual_schedule","title":"Event Schedule — qual_schedule","text":"Returns dataframe event's qualification match schedule","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/qual_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Schedule — qual_schedule","text":"","code":"qual_schedule(event_code, int_output = TRUE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/qual_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Schedule — qual_schedule","text":"event_code TBA-legal event key int_output convert TBA keys (e.g. \"frc1712\") int (\"1712\")?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Read District Events — read_district_events","title":"Read District Events — read_district_events","text":"Returns list district events given district key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read District Events — read_district_events","text":"","code":"read_district_events(district_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read District Events — read_district_events","text":"district_key (character) TBA identifier district year simple (bool) simplify event objects?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read District Events — read_district_events","text":"list district event objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read District Events — read_district_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read District Events — read_district_events","text":"","code":"read_district_events(\"2022fit\") #> Error in read_district_events(\"2022fit\"): could not find function \"read_district_events\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Read District Rankings — read_district_rankings","title":"Read District Rankings — read_district_rankings","text":"Gets rankings input district","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read District Rankings — read_district_rankings","text":"","code":"read_district_rankings(district_key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read District Rankings — read_district_rankings","text":"district_key (character) district identifier","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read District Rankings — read_district_rankings","text":"list district rankings objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_rankings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read District Rankings — read_district_rankings","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read District Rankings — read_district_rankings","text":"","code":"read_district_rankings(\"2016mar\") #> Error in read_district_rankings(\"2016mar\"): could not find function \"read_district_rankings\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Read District Teams — read_district_teams","title":"Read District Teams — read_district_teams","text":"Get list teams district","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read District Teams — read_district_teams","text":"","code":"read_district_teams(district_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read District Teams — read_district_teams","text":"district_key (character) TBA key district simple (bool) simplify team objects?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read District Teams — read_district_teams","text":"list district teams","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_teams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read District Teams — read_district_teams","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_district_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read District Teams — read_district_teams","text":"","code":"read_district_teams(\"2022fit\") #> Error in read_district_teams(\"2022fit\"): could not find function \"read_district_teams\" read_district_teams(\"2016mar\") #> Error in read_district_teams(\"2016mar\"): could not find function \"read_district_teams\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Districts — read_districts","title":"Read Districts — read_districts","text":"Reads districts FIRST given year","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Districts — read_districts","text":"","code":"read_districts(year = YEAR)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_districts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Districts — read_districts","text":"year (numeric/character)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_districts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Districts — read_districts","text":"List district objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_districts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Districts — read_districts","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_districts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Districts — read_districts","text":"","code":"read_districts(2022) #> Error in read_districts(2022): could not find function \"read_districts\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an event object from a key — read_event","title":"Read an event object from a key — read_event","text":"Returns event object given key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an event object from a key — read_event","text":"","code":"read_event(key, simple = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an event object from a key — read_event","text":"key TBA legal event key simple (bool) return simple version?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an event object from a key — read_event","text":"TBA Event Object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read an event object from a key — read_event","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an event object from a key — read_event","text":"","code":"read_event(\"2016paphi\") #> Error in read_event(\"2016paphi\"): could not find function \"read_event\" read_event(\"2016mrcmp\", simple = TRUE) #> Error in read_event(\"2016mrcmp\", simple = TRUE): could not find function \"read_event\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_alliances.html","id":null,"dir":"Reference","previous_headings":"","what":"Read event alliances from key — read_event_alliances","title":"Read event alliances from key — read_event_alliances","text":"Returns event alliances object given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_alliances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read event alliances from key — read_event_alliances","text":"","code":"read_event_alliances(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_alliances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read event alliances from key — read_event_alliances","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_alliances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read event alliances from key — read_event_alliances","text":"TBA Alliances object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_alliances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read event alliances from key — read_event_alliances","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_alliances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read event alliances from key — read_event_alliances","text":"","code":"read_event_alliances(\"2015paphi\") #> Error in read_event_alliances(\"2015paphi\"): could not find function \"read_event_alliances\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_awards.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Awards — read_event_awards","title":"Read Event Awards — read_event_awards","text":"Returns event awards given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_awards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Awards — read_event_awards","text":"","code":"read_event_awards(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_awards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Awards — read_event_awards","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_awards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Awards — read_event_awards","text":"TBA Awards object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_awards.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Awards — read_event_awards","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_awards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Awards — read_event_awards","text":"","code":"read_event_awards(\"2017pawch\") #> Error in read_event_awards(\"2017pawch\"): could not find function \"read_event_awards\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_coprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event cOPRs — read_event_coprs","title":"Read Event cOPRs — read_event_coprs","text":"Read Event cOPRs","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_coprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event cOPRs — read_event_coprs","text":"","code":"read_event_coprs(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_coprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event cOPRs — read_event_coprs","text":"key (chr) event key (e.g. \"2025vagle\")","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_district_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event District Points — read_event_district_points","title":"Read Event District Points — read_event_district_points","text":"Returns event district points given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_district_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event District Points — read_event_district_points","text":"","code":"read_event_district_points(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_district_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event District Points — read_event_district_points","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_district_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event District Points — read_event_district_points","text":"TBA district points event object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_district_points.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event District Points — read_event_district_points","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_district_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event District Points — read_event_district_points","text":"","code":"read_event_district_points(\"2016mrcmp\") #> Error in read_event_district_points(\"2016mrcmp\"): could not find function \"read_event_district_points\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_insights.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Insights from key — read_event_insights","title":"Read Event Insights from key — read_event_insights","text":"Returns event insights given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_insights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Insights from key — read_event_insights","text":"","code":"read_event_insights(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_insights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Insights from key — read_event_insights","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_insights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Insights from key — read_event_insights","text":"TBA Insights object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_insights.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Insights from key — read_event_insights","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_insights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Insights from key — read_event_insights","text":"","code":"read_event_insights(\"2018pawch\") #> Error in read_event_insights(\"2018pawch\"): could not find function \"read_event_insights\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Matches — read_event_matches","title":"Read Event Matches — read_event_matches","text":"Given event key returns list matches event","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Matches — read_event_matches","text":"","code":"read_event_matches(event_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Matches — read_event_matches","text":"event_key (string) TBA legal event key simple (bool) simple format response? keys (bool) return keys?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Matches — read_event_matches","text":"Returns list matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Matches — read_event_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Matches — read_event_matches","text":"","code":"read_event_matches(\"2016mrcmp\") #> Error in read_event_matches(\"2016mrcmp\"): could not find function \"read_event_matches\" read_event_matches(\"2014mrcmp\", keys = TRUE) #> Error in read_event_matches(\"2014mrcmp\", keys = TRUE): could not find function \"read_event_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_oprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event OPRs — read_event_oprs","title":"Read Event OPRs — read_event_oprs","text":"Returns event oprs given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_oprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event OPRs — read_event_oprs","text":"","code":"read_event_oprs(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_oprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event OPRs — read_event_oprs","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_oprs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event OPRs — read_event_oprs","text":"TBA OPRs object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_oprs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event OPRs — read_event_oprs","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_oprs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event OPRs — read_event_oprs","text":"","code":"read_event_oprs(\"2018mrcmp\") #> Error in read_event_oprs(\"2018mrcmp\"): could not find function \"read_event_oprs\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_playoff_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Playoff Matches — read_event_playoff_matches","title":"Read Event Playoff Matches — read_event_playoff_matches","text":"Reads event's playoff matches given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_playoff_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Playoff Matches — read_event_playoff_matches","text":"","code":"read_event_playoff_matches(event_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_playoff_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Playoff Matches — read_event_playoff_matches","text":"event_key TBA legal event key simple return simple format match objects? key return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_playoff_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Playoff Matches — read_event_playoff_matches","text":"List TBA Match objects, vector keys keys = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_playoff_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Playoff Matches — read_event_playoff_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_playoff_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Playoff Matches — read_event_playoff_matches","text":"","code":"read_event_playoff_matches(\"2018pawch\") #> Error in read_event_playoff_matches(\"2018pawch\"): could not find function \"read_event_playoff_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Predictions — read_event_predictions","title":"Read Event Predictions — read_event_predictions","text":"Returns event predictions given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Predictions — read_event_predictions","text":"","code":"read_event_predictions(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Predictions — read_event_predictions","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Predictions — read_event_predictions","text":"TBA Predictions object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_predictions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Predictions — read_event_predictions","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Predictions — read_event_predictions","text":"","code":"read_event_predictions(\"2018mrcmp\") #> Error in read_event_predictions(\"2018mrcmp\"): could not find function \"read_event_predictions\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_qual_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Qualification Matches — read_event_qual_matches","title":"Read Event Qualification Matches — read_event_qual_matches","text":"Given event key, returns event's qualification matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_qual_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Qualification Matches — read_event_qual_matches","text":"","code":"read_event_qual_matches(event_key, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_qual_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Qualification Matches — read_event_qual_matches","text":"event_key TBA legal event key simple (bool) simple format response? keys (bool) restrict response keys?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_qual_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Qualification Matches — read_event_qual_matches","text":"List qualification matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_qual_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Qualification Matches — read_event_qual_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_qual_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Qualification Matches — read_event_qual_matches","text":"","code":"read_event_qual_matches(\"2016hop\", simple = TRUE) #> Error in read_event_qual_matches(\"2016hop\", simple = TRUE): could not find function \"read_event_qual_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Rankings — read_event_rankings","title":"Read Event Rankings — read_event_rankings","text":"Returns event rankings given event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Rankings — read_event_rankings","text":"","code":"read_event_rankings(key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Rankings — read_event_rankings","text":"key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Rankings — read_event_rankings","text":"TBA rankings object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_rankings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Rankings — read_event_rankings","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Rankings — read_event_rankings","text":"","code":"read_event_rankings(\"2015paphi\") #> Error in read_event_rankings(\"2015paphi\"): could not find function \"read_event_rankings\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Event Teams — read_event_teams","title":"Read Event Teams — read_event_teams","text":"Returns event teams given event key. Either key simple overrides statuses","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Event Teams — read_event_teams","text":"","code":"read_event_teams(event_key, statuses = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Event Teams — read_event_teams","text":"statuses (boolean) get team statuses? simple (boolean) return simple format? keys (boolean) return keys ? key TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Event Teams — read_event_teams","text":"List team objects given event","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_teams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Event Teams — read_event_teams","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_event_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Event Teams — read_event_teams","text":"","code":"read_event_teams(\"2016hop\") #> Error in read_event_teams(\"2016hop\"): could not find function \"read_event_teams\" read_event_teams(\"2016hop\", statuses = TRUE) #> Error in read_event_teams(\"2016hop\", statuses = TRUE): could not find function \"read_event_teams\" read_event_teams(\"2016hop\", simple = TRUE) #> Error in read_event_teams(\"2016hop\", simple = TRUE): could not find function \"read_event_teams\" read_event_teams(\"2016hop\", keys = TRUE) #> Error in read_event_teams(\"2016hop\", keys = TRUE): could not find function \"read_event_teams\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Events — read_events","title":"Read Events — read_events","text":"Returns list events given year, events years.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Events — read_events","text":"","code":"read_events(   year = NA,   official = FALSE,   trim_parents = FALSE,   simple = FALSE,   keys = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Events — read_events","text":"year (int NA) year interest NA years official (bool) restrict official events? trim_parents (bool) remove events divisions ? simple (bool) simple format return? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Events — read_events","text":"List year events","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Events — read_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Events — read_events","text":"","code":"read_events(year = 2016, official = TRUE, trim_parents = TRUE) #> Error in read_events(year = 2016, official = TRUE, trim_parents = TRUE): could not find function \"read_events\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_match_zebra.html","id":null,"dir":"Reference","previous_headings":"","what":"Zebra reader Reads Zebra match data — read_match_zebra","title":"Zebra reader Reads Zebra match data — read_match_zebra","text":"Zebra reader Reads Zebra match data","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_match_zebra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zebra reader Reads Zebra match data — read_match_zebra","text":"","code":"read_match_zebra(match_key)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_match_zebra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zebra reader Reads Zebra match data — read_match_zebra","text":"match_key TBA match key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_match_zebra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zebra reader Reads Zebra match data — read_match_zebra","text":"Zebra match input match key, NULL","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_match_zebra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Zebra reader Reads Zebra match data — read_match_zebra","text":"Dr. Holt Oliver","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_match_zebra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zebra reader Reads Zebra match data — read_match_zebra","text":"","code":"read_match_zebra(\"2022txcmp2_qf4m3\") #> Error in read_match_zebra(\"2022txcmp2_qf4m3\"): could not find function \"read_match_zebra\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Official Events — read_official_events","title":"Read Official Events — read_official_events","text":"Reads official events TBA API.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Official Events — read_official_events","text":"","code":"read_official_events(   year = YEAR,   trim_parents = TRUE,   simple = FALSE,   keys = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Official Events — read_official_events","text":"year year interest trim_parents remove events divisions ? simple return simple event objects? keys return vector keys?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Official Events — read_official_events","text":"TBA event objects list, vector keys = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Official Events — read_official_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Official Events — read_official_events","text":"","code":"read_official_events(year = 2016, trim_parents = TRUE, keys = TRUE) #> Error in read_official_events(year = 2016, trim_parents = TRUE, keys = TRUE): could not find function \"read_official_events\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_match_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Official Matchkeys — read_official_match_keys","title":"Read Official Matchkeys — read_official_match_keys","text":"Returns list official match keys","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_match_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Official Matchkeys — read_official_match_keys","text":"","code":"read_official_match_keys(year = YEAR, trim_parents = TRUE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_match_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Official Matchkeys — read_official_match_keys","text":"year (int) year interest trim_parents (bool) remove events divisions ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_match_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Official Matchkeys — read_official_match_keys","text":"List official match keys, NULL","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_match_keys.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Official Matchkeys — read_official_match_keys","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_official_match_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Official Matchkeys — read_official_match_keys","text":"","code":"read_official_match_keys(year = 2022) #> Error in read_official_match_keys(year = 2022): could not find function \"read_official_match_keys\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Team — read_team","title":"Read Team — read_team","text":"Reads team object numeric input","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Team — read_team","text":"","code":"read_team(n, simple = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Team — read_team","text":"n team number simple - (boolean) FALSE want available information","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Team — read_team","text":"Team object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Team — read_team","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Team — read_team","text":"","code":"read_team(1712) #> Error in read_team(1712): could not find function \"read_team\" read_team(708) #> Error in read_team(708): could not find function \"read_team\" read_team(6672) #> Error in read_team(6672): could not find function \"read_team\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_awards.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Team Awards — read_team_awards","title":"Read Team Awards — read_team_awards","text":"Reads awards given team won","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_awards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Team Awards — read_team_awards","text":"","code":"read_team_awards(team, year = NULL, event = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_awards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Team Awards — read_team_awards","text":"team (numeric/character) team interest year (numeric/character) year interest event (character) TBA legal event key","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_awards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Team Awards — read_team_awards","text":"List award objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_awards.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Team Awards — read_team_awards","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_awards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Team Awards — read_team_awards","text":"","code":"read_team_awards(1712, year = 2018) #> Error in read_team_awards(1712, year = 2018): could not find function \"read_team_awards\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Team Events — read_team_events","title":"Read Team Events — read_team_events","text":"Returns team's event given team number","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Team Events — read_team_events","text":"","code":"read_team_events(n, year = NA, official = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Team Events — read_team_events","text":"n (numeric) team number year (numeric/character) year interest","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Team Events — read_team_events","text":"list event objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Team Events — read_team_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Team Events — read_team_events","text":"","code":"read_team_events(1712, year = 2018, simple = TRUE) #> Error in read_team_events(1712, year = 2018, simple = TRUE): could not find function \"read_team_events\" read_team_events(1712, keys = TRUE) #> Error in read_team_events(1712, keys = TRUE): could not find function \"read_team_events\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Team Matches — read_team_matches","title":"Read Team Matches — read_team_matches","text":"Returns team's matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Team Matches — read_team_matches","text":"","code":"read_team_matches(   team,   year = NA,   event = NA,   official = FALSE,   simple = FALSE,   keys = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Team Matches — read_team_matches","text":"team (numeric/character) team key number year (numeric) year interest, NA event (character) TBA event key official (bool) restrict official events? simple (bool) present simple data objects? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Team Matches — read_team_matches","text":"list match objects given team","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Team Matches — read_team_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Team Matches — read_team_matches","text":"","code":"read_team_matches(1712, year = 2016, keys = TRUE) #> Error in read_team_matches(1712, year = 2016, keys = TRUE): could not find function \"read_team_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_official_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Official Team Matches — read_team_official_matches","title":"Read Official Team Matches — read_team_official_matches","text":"Returns team's official matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_official_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Official Team Matches — read_team_official_matches","text":"","code":"read_team_official_matches(team, year, event, simple, keys)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_official_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Official Team Matches — read_team_official_matches","text":"team (numeric/character) year (numeric) year interest event (character) event key simple (bool) return simple objects? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_official_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Official Team Matches — read_team_official_matches","text":"List official matches team interest","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_official_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Official Team Matches — read_team_official_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_team_official_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Official Team Matches — read_team_official_matches","text":"","code":"read_team_official_matches(1712, 2015, NA, TRUE, TRUE) #> Error in read_team_official_matches(1712, 2015, NA, TRUE, TRUE): could not find function \"read_team_official_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Teams — read_teams","title":"Read Teams — read_teams","text":"Returns list team objects paginated 500s (uses 0 indexing)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Teams — read_teams","text":"","code":"read_teams(page_num, year = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Teams — read_teams","text":"page_num Page index interest year year interest, FALSE years simple return simple team objects? keys return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Teams — read_teams","text":"Returns list team objects, vector keys","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_teams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Teams — read_teams","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Teams — read_teams","text":"","code":"read_teams(1) #> Error in read_teams(1): could not find function \"read_teams\" read_teams(3, keys = TRUE) #> Error in read_teams(3, keys = TRUE): could not find function \"read_teams\""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_year_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Year Events — read_year_events","title":"Read Year Events — read_year_events","text":"Returns events given year. Keys overrides simple.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_year_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Year Events — read_year_events","text":"","code":"read_year_events(year = YEAR, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/read_year_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Year Events — read_year_events","text":"year (int) year interest simple (bool) simple format return value? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_year_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Year Events — read_year_events","text":"List event objects given year","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_year_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Year Events — read_year_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/read_year_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Year Events — read_year_events","text":"","code":"read_year_events(year = 2014) #> Error in read_year_events(year = 2014): could not find function \"read_year_events\" read_year_events(year = 2015, simple = TRUE) #> Error in read_year_events(year = 2015, simple = TRUE): could not find function \"read_year_events\" read_year_events(year = 2016, keys = TRUE) #> Error in read_year_events(year = 2016, keys = TRUE): could not find function \"read_year_events\" read_year_events(year = 2017, simple = TRUE, keys = TRUE) #> Error in read_year_events(year = 2017, simple = TRUE, keys = TRUE): could not find function \"read_year_events\""},{"path":"https://gkrotkov.github.io/scoutR/reference/remove_unscored_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Unscored Matches — remove_unscored_matches","title":"Remove Unscored Matches — remove_unscored_matches","text":"Returns list match objects without matches without score posted.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/remove_unscored_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Unscored Matches — remove_unscored_matches","text":"","code":"remove_unscored_matches(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/remove_unscored_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Unscored Matches — remove_unscored_matches","text":"matches List TBA match objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/remove_unscored_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Unscored Matches — remove_unscored_matches","text":"List TBA match objects without unposted matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/remove_unscored_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Unscored Matches — remove_unscored_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/remove_unscored_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Unscored Matches — remove_unscored_matches","text":"","code":"matches <- read_event_matches(\"2022azfl\") #> Error in read_event_matches(\"2022azfl\"): could not find function \"read_event_matches\" remove_unscored_matches(matches) #> Error in remove_unscored_matches(matches): could not find function \"remove_unscored_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/rep_each_len.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat Each for Given Length — rep_each_len","title":"Repeat Each for Given Length — rep_each_len","text":"Extend vector given (`len_out`) length repeating elements using `` functionality `rep()`","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/rep_each_len.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat Each for Given Length — rep_each_len","text":"","code":"rep_each_len(v, len_out)"},{"path":"https://gkrotkov.github.io/scoutR/reference/rep_each_len.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat Each for Given Length — rep_each_len","text":"v input vector extend len_out desired final length vector","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/schema_cfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Schema for (color)_(field)Robot(station_num) — schema_cfs","title":"Schema for (color)_(field)Robot(station_num) — schema_cfs","text":"schema default 2018 2023 (least.) cfs references color/field/station, order terms","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/schema_cfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema for (color)_(field)Robot(station_num) — schema_cfs","text":"","code":"schema_cfs(color, station_num, field)"},{"path":"https://gkrotkov.github.io/scoutR/reference/schema_cfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema for (color)_(field)Robot(station_num) — schema_cfs","text":"color alliance color, either \"red\" \"blue\" station_num number driver station field name relevant field","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/schema_csf.html","id":null,"dir":"Reference","previous_headings":"","what":"Schema for (color)_robot(station_num)(Field) — schema_csf","title":"Schema for (color)_robot(station_num)(Field) — schema_csf","text":"schema default 2016 2017. csf references color/station/field, order terms","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/schema_csf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schema for (color)_robot(station_num)(Field) — schema_csf","text":"","code":"schema_csf(color, station_num, field)"},{"path":"https://gkrotkov.github.io/scoutR/reference/schema_csf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schema for (color)_robot(station_num)(Field) — schema_csf","text":"color alliance color, either \"red\" \"blue\" station_num number driver station field name relevant field","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":null,"dir":"Reference","previous_headings":"","what":"Simkeys — simkeys","title":"Simkeys — simkeys","text":"Attaches simple keys end request string","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simkeys — simkeys","text":"","code":"simkeys(req, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simkeys — simkeys","text":"req Request string simple Boolean - attach simple? keys Boolean - attach keys?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simkeys — simkeys","text":"Modified request string","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simkeys — simkeys","text":"Note keys = TRUE overrides simple = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simkeys — simkeys","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/simkeys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simkeys — simkeys","text":"","code":"simkeys(\"\", TRUE, FALSE) #> Error in simkeys(\"\", TRUE, FALSE): could not find function \"simkeys\" simkeys(\"\", FALSE, TRUE) #> Error in simkeys(\"\", FALSE, TRUE): could not find function \"simkeys\" simkeys(\"\", TRUE, TRUE) #> Error in simkeys(\"\", TRUE, TRUE): could not find function \"simkeys\""},{"path":"https://gkrotkov.github.io/scoutR/reference/substr_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Substring Right — substr_right","title":"Substring Right — substr_right","text":"Returns n rightmost characters s.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/substr_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substring Right — substr_right","text":"","code":"substr_right(s, n)"},{"path":"https://gkrotkov.github.io/scoutR/reference/substr_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substring Right — substr_right","text":"s input string n number characters right include (1 indexed)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/substr_right_inv.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverted Substring Right — substr_right_inv","title":"Inverted Substring Right — substr_right_inv","text":"Returns string s without n rightmost characters","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/substr_right_inv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverted Substring Right — substr_right_inv","text":"","code":"substr_right_inv(s, n)"},{"path":"https://gkrotkov.github.io/scoutR/reference/substr_right_inv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverted Substring Right — substr_right_inv","text":"s input string n number characters (1 indexed) chop right.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/ta_hexafecta24.html","id":null,"dir":"Reference","previous_headings":"","what":"Team Attributes Hexafecta — ta_hexafecta24","title":"Team Attributes Hexafecta — ta_hexafecta24","text":"DF noting whether team achieved Team Attributes Hexafecta 2024.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/ta_hexafecta24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team Attributes Hexafecta — ta_hexafecta24","text":"","code":"ta_hexafecta24"},{"path":"https://gkrotkov.github.io/scoutR/reference/ta_hexafecta24.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Team Attributes Hexafecta — ta_hexafecta24","text":"object class data.frame 8420 rows 2 columns.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/ta_hexafecta24.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Team Attributes Hexafecta — ta_hexafecta24","text":"thebluealliance.com","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team.html","id":null,"dir":"Reference","previous_headings":"","what":"Team — team","title":"Team — team","text":"Read team object TBA API","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team — team","text":"","code":"team(key, simple = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team — team","text":"key TBA legal team key simple (bool) simplify object?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team — team","text":"Team object list format","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Team — team","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_awards.html","id":null,"dir":"Reference","previous_headings":"","what":"Team Awards — team_awards","title":"Team Awards — team_awards","text":"Gets team award history","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_awards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team Awards — team_awards","text":"","code":"team_awards(key, year = NULL, event = NULL, recipients = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_awards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team Awards — team_awards","text":"key TBA legal team key year year interest event event interest recipients (bool) break recipients column?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_awards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team Awards — team_awards","text":"tidy tibble award history","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_awards.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Team Awards — team_awards","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_awards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team Awards — team_awards","text":"","code":"team_awards(\"1712\", year = 2016) #> # A tibble: 2 × 5 #>   award_type event_key name                                 recipient_list  year #>        <int> <chr>     <chr>                                <list>         <int> #> 1         22 2016mrcmp Entrepreneurship Award sponsored by… <list [1]>      2016 #> 2         30 2016paphi Team Spirit Award sponsored by FCA … <list [1]>      2016 team_awards(\"frc1712\", year = 2010, recipients = TRUE) #> # A tibble: 3 × 14 #>   award_type event_key name  recipients1  recipients2  recipients3  recipients4  #>        <int> <chr>     <chr> <list>       <list>       <list>       <list>       #> 1          4 2010cmp   FIRS… <named list> <named list> <named list> <named list> #> 2         22 2010dc    Entr… <named list> <NULL>       <NULL>       <NULL>       #> 3         22 2010pa    Entr… <named list> <NULL>       <NULL>       <NULL>       #> # ℹ 7 more variables: recipients5 <list>, recipients6 <list>, #> #   recipients7 <list>, recipients8 <list>, recipients9 <list>, #> #   recipients10 <list>, year <int> team_awards(1712, event = \"2017pawch\") #> # A tibble: 2 × 5 #>   award_type event_key name                                 recipient_list  year #>        <int> <chr>     <chr>                                <list>         <int> #> 1         18 2017pawch Safety Award sponsored by Underwrit… <list [1]>      2017 #> 2          9 2017pawch District Engineering Inspiration Aw… <list [1]>      2017"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Team Events — team_events","title":"Team Events — team_events","text":"Read events certain team","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team Events — team_events","text":"","code":"team_events(key, year = NA, official = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team Events — team_events","text":"key TBA legal team key. Can int string format. year year interest official (bool) get official events? simple (bool) simplify event objects? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team Events — team_events","text":"tidy tibble event objects, vector keys = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Team Events — team_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team Events — team_events","text":"","code":"team_events(1712, year = 2017) #> # A tibble: 5 × 30 #>   address           city  country district     division_keys end_date event_code #>   <chr>             <chr> <chr>   <list>       <lgl>         <chr>    <chr>      #> 1 124 Goodman Dr S… \"Bet… USA     <named list> NA            2017-04… mrcmp      #> 2 NA                \" We… USA     <NULL>       NA            2017-06… njmm       #> 3 110 Carranza Rd,… \"Tab… USA     <named list> NA            2017-03… njtab      #> 4 521 Houston Rd, … \"Amb… USA     <NULL>       NA            2017-11… parr       #> 5 975 Westtown Rd,… \"Wes… USA     <named list> NA            2017-03… pawch      #> # ℹ 23 more variables: event_type <int>, event_type_string <chr>, #> #   first_event_code <chr>, first_event_id <chr>, gmaps_place_id <chr>, #> #   gmaps_url <chr>, key <chr>, lat <dbl>, lng <dbl>, location_name <chr>, #> #   name <chr>, parent_event_key <lgl>, playoff_type <lgl>, #> #   playoff_type_string <lgl>, postal_code <chr>, short_name <chr>, #> #   start_date <chr>, state_prov <chr>, timezone <chr>, webcasts <list>, #> #   website <chr>, week <int>, year <int> team_events(\"1712\", year = 2018, official = TRUE) #> # A tibble: 4 × 30 #>   address           city  country district     division_keys end_date event_code #>   <chr>             <chr> <chr>   <list>       <lgl>         <chr>    <chr>      #> 1 124 Goodman Dr S… Beth… USA     <named list> NA            2018-04… mrcmp      #> 2 110 Carranza Rd,… Tabe… USA     <named list> NA            2018-03… njtab      #> 3 975 Westtown Rd,… West… USA     <named list> NA            2018-03… pawch      #> 4 1 Washington Blv… Detr… USA     <NULL>       NA            2018-04… tes        #> # ℹ 23 more variables: event_type <int>, event_type_string <chr>, #> #   first_event_code <chr>, first_event_id <chr>, gmaps_place_id <chr>, #> #   gmaps_url <chr>, key <chr>, lat <dbl>, lng <dbl>, location_name <chr>, #> #   name <chr>, parent_event_key <chr>, playoff_type <lgl>, #> #   playoff_type_string <lgl>, postal_code <chr>, short_name <chr>, #> #   start_date <chr>, state_prov <chr>, timezone <chr>, webcasts <list>, #> #   website <chr>, week <int>, year <int> team_events(\"frc1712\", keys = TRUE) #>  [1] \"2006pa\"    \"2007gal\"   \"2007pa\"    \"2008mm\"    \"2008pa\"    \"2009arc\"   #>  [7] \"2009dc\"    \"2010cmp\"   \"2010dc\"    \"2010pa\"    \"2011pa\"    \"2012njt\"   #> [13] \"2012pa\"    \"2012pah\"   \"2013njlen\" \"2013pahat\" \"2014mrcmp\" \"2014pahat\" #> [19] \"2014paphi\" \"2015mrcmp\" \"2015padre\" \"2015paphi\" \"2016hop\"   \"2016mrcmp\" #> [25] \"2016paphi\" \"2016pawch\" \"2017mrcmp\" \"2017njmm\"  \"2017njtab\" \"2017parr\"  #> [31] \"2017pawch\" \"2018havoc\" \"2018mrcmp\" \"2018njtab\" \"2018parr\"  \"2018pawch\" #> [37] \"2018tes\"   \"2019mrcmp\" \"2019njdd\"  \"2019njmm\"  \"2019njtab\" \"2019parr\"  #> [43] \"2019pawch\" \"2020pahat\" \"2020paphi\" \"202121fma\" \"2021fmaaw\" \"2021gamas\" #> [49] \"2021gamce\" \"2021irhal\" \"2021irhce\" \"2021parr\"  \"2022paben\" \"2022paphi\" #> [55] \"2022parr\"  \"2023mrcmp\" \"2023njdd\"  \"2023njtab\" \"2023paphi\" \"2024njtab\" #> [61] \"2024paben\" \"2025mrcmp\" \"2025njtab\" \"2025paben\""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Team Matches — team_matches","title":"Team Matches — team_matches","text":"Team Matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team Matches — team_matches","text":"","code":"team_matches(   key,   year = NA,   event = NA,   official = FALSE,   simple = FALSE,   keys = FALSE,   alliances = TRUE,   breakdown = TRUE,   unplayed = FALSE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team Matches — team_matches","text":"key TBA legal team key year year interest event TBA event key interest official (bool) get official matches? simple (bool) simplify match objects? keys (bool) get keys? alliances (bool) break alliance column match objects? breakdown (bool) break score breakdown column? unplayed (boolean) include matches scores -1 (indicating match played?)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team Matches — team_matches","text":"tidy tibble team matches, vector keys = TRUE","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Team Matches — team_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team Matches — team_matches","text":"","code":"team_matches(1712, keys = TRUE) #>   [1] \"2006pa_qm15\"      \"2006pa_qm22\"      \"2006pa_qm27\"      #>   [4] \"2006pa_qm32\"      \"2006pa_qm40\"      \"2006pa_qm5\"       #>   [7] \"2006pa_qm52\"      \"2006pa_qm58\"      \"2006pa_qm68\"      #>  [10] \"2006pa_qm76\"      \"2006pa_qm84\"      \"2007gal_qf2m1\"    #>  [13] \"2007gal_qf2m2\"    \"2007gal_qf2m3\"    \"2007gal_qm102\"    #>  [16] \"2007gal_qm17\"     \"2007gal_qm30\"     \"2007gal_qm50\"     #>  [19] \"2007gal_qm6\"      \"2007gal_qm66\"     \"2007gal_qm87\"     #>  [22] \"2007gal_sf1m1\"    \"2007gal_sf1m2\"    \"2007gal_sf1m3\"    #>  [25] \"2007pa_qf4m1\"     \"2007pa_qf4m2\"     \"2007pa_qm23\"      #>  [28] \"2007pa_qm28\"      \"2007pa_qm31\"      \"2007pa_qm39\"      #>  [31] \"2007pa_qm46\"      \"2007pa_qm58\"      \"2007pa_qm6\"       #>  [34] \"2007pa_qm65\"      \"2007pa_qm74\"      \"2007pa_qm81\"      #>  [37] \"2007pa_qm9\"       \"2008mm_qf3m1\"     \"2008mm_qf3m2\"     #>  [40] \"2008mm_qm12\"      \"2008mm_qm20\"      \"2008mm_qm27\"      #>  [43] \"2008mm_qm34\"      \"2008mm_qm39\"      \"2008mm_qm7\"       #>  [46] \"2008pa_qf1m1\"     \"2008pa_qf1m2\"     \"2008pa_qm11\"      #>  [49] \"2008pa_qm19\"      \"2008pa_qm25\"      \"2008pa_qm31\"      #>  [52] \"2008pa_qm43\"      \"2008pa_qm48\"      \"2008pa_qm5\"       #>  [55] \"2008pa_qm54\"      \"2008pa_qm60\"      \"2008pa_qm72\"      #>  [58] \"2008pa_qm81\"      \"2009arc_qm27\"     \"2009arc_qm40\"     #>  [61] \"2009arc_qm48\"     \"2009arc_qm5\"      \"2009arc_qm63\"     #>  [64] \"2009arc_qm83\"     \"2009arc_qm91\"     \"2009dc_qf2m1\"     #>  [67] \"2009dc_qf2m2\"     \"2009dc_qm10\"      \"2009dc_qm18\"      #>  [70] \"2009dc_qm25\"      \"2009dc_qm39\"      \"2009dc_qm51\"      #>  [73] \"2009dc_qm63\"      \"2009dc_qm75\"      \"2009dc_sf1m1\"     #>  [76] \"2009dc_sf1m2\"     \"2010dc_qm19\"      \"2010dc_qm25\"      #>  [79] \"2010dc_qm39\"      \"2010dc_qm45\"      \"2010dc_qm52\"      #>  [82] \"2010dc_qm62\"      \"2010dc_qm7\"       \"2010dc_qm71\"      #>  [85] \"2010dc_qm80\"      \"2010pa_qf1m1\"     \"2010pa_qf1m2\"     #>  [88] \"2010pa_qf1m3\"     \"2010pa_qm21\"      \"2010pa_qm26\"      #>  [91] \"2010pa_qm36\"      \"2010pa_qm42\"      \"2010pa_qm47\"      #>  [94] \"2010pa_qm5\"       \"2010pa_qm53\"      \"2010pa_qm66\"      #>  [97] \"2010pa_qm9\"       \"2011pa_qf3m1\"     \"2011pa_qf3m2\"     #> [100] \"2011pa_qm17\"      \"2011pa_qm27\"      \"2011pa_qm37\"      #> [103] \"2011pa_qm45\"      \"2011pa_qm53\"      \"2011pa_qm65\"      #> [106] \"2011pa_qm7\"       \"2011pa_qm70\"      \"2011pa_qm84\"      #> [109] \"2012njt_qf1m1\"    \"2012njt_qf1m2\"    \"2012njt_qm19\"     #> [112] \"2012njt_qm2\"      \"2012njt_qm24\"     \"2012njt_qm29\"     #> [115] \"2012njt_qm36\"     \"2012njt_qm41\"     \"2012njt_qm50\"     #> [118] \"2012njt_qm56\"     \"2012njt_qm60\"     \"2012njt_qm64\"     #> [121] \"2012njt_qm73\"     \"2012njt_qm8\"      \"2012pa_qm10\"      #> [124] \"2012pa_qm103\"     \"2012pa_qm26\"      \"2012pa_qm3\"       #> [127] \"2012pa_qm33\"      \"2012pa_qm43\"      \"2012pa_qm47\"      #> [130] \"2012pa_qm58\"      \"2012pa_qm67\"      \"2012pa_qm79\"      #> [133] \"2012pa_qm88\"      \"2012pa_qm96\"      \"2012pah_qf3m1\"    #> [136] \"2012pah_qf3m2\"    \"2012pah_qf3m3\"    \"2012pah_qm1\"      #> [139] \"2012pah_qm10\"     \"2012pah_qm13\"     \"2012pah_qm22\"     #> [142] \"2012pah_qm27\"     \"2012pah_qm34\"     \"2012pah_qm40\"     #> [145] \"2012pah_qm45\"     \"2012pah_qm52\"     \"2012pah_qm61\"     #> [148] \"2012pah_qm65\"     \"2012pah_qm74\"     \"2013njlen_qf1m1\"  #> [151] \"2013njlen_qf1m2\"  \"2013njlen_qm12\"   \"2013njlen_qm16\"   #> [154] \"2013njlen_qm25\"   \"2013njlen_qm31\"   \"2013njlen_qm36\"   #> [157] \"2013njlen_qm38\"   \"2013njlen_qm42\"   \"2013njlen_qm49\"   #> [160] \"2013njlen_qm5\"    \"2013njlen_qm55\"   \"2013njlen_qm58\"   #> [163] \"2013njlen_qm8\"    \"2013njlen_sf1m1\"  \"2013njlen_sf1m2\"  #> [166] \"2013njlen_sf1m3\"  \"2013pahat_qm10\"   \"2013pahat_qm15\"   #> [169] \"2013pahat_qm21\"   \"2013pahat_qm28\"   \"2013pahat_qm32\"   #> [172] \"2013pahat_qm41\"   \"2013pahat_qm46\"   \"2013pahat_qm50\"   #> [175] \"2013pahat_qm61\"   \"2013pahat_qm68\"   \"2013pahat_qm7\"    #> [178] \"2013pahat_qm74\"   \"2014mrcmp_qf1m1\"  \"2014mrcmp_qf1m2\"  #> [181] \"2014mrcmp_qm108\"  \"2014mrcmp_qm17\"   \"2014mrcmp_qm25\"   #> [184] \"2014mrcmp_qm3\"    \"2014mrcmp_qm35\"   \"2014mrcmp_qm44\"   #> [187] \"2014mrcmp_qm51\"   \"2014mrcmp_qm63\"   \"2014mrcmp_qm72\"   #> [190] \"2014mrcmp_qm80\"   \"2014mrcmp_qm89\"   \"2014mrcmp_qm96\"   #> [193] \"2014pahat_qf4m1\"  \"2014pahat_qf4m2\"  \"2014pahat_qm12\"   #> [196] \"2014pahat_qm17\"   \"2014pahat_qm25\"   \"2014pahat_qm31\"   #> [199] \"2014pahat_qm34\"   \"2014pahat_qm41\"   \"2014pahat_qm5\"    #> [202] \"2014pahat_qm51\"   \"2014pahat_qm56\"   \"2014pahat_qm63\"   #> [205] \"2014pahat_qm67\"   \"2014pahat_qm77\"   \"2014paphi_qf1m1\"  #> [208] \"2014paphi_qf1m2\"  \"2014paphi_qf1m3\"  \"2014paphi_qm11\"   #> [211] \"2014paphi_qm13\"   \"2014paphi_qm21\"   \"2014paphi_qm25\"   #> [214] \"2014paphi_qm3\"    \"2014paphi_qm31\"   \"2014paphi_qm36\"   #> [217] \"2014paphi_qm42\"   \"2014paphi_qm49\"   \"2014paphi_qm54\"   #> [220] \"2014paphi_qm62\"   \"2014paphi_qm67\"   \"2014paphi_sf1m1\"  #> [223] \"2014paphi_sf1m2\"  \"2014paphi_sf1m3\"  \"2015mrcmp_qm105\"  #> [226] \"2015mrcmp_qm15\"   \"2015mrcmp_qm20\"   \"2015mrcmp_qm32\"   #> [229] \"2015mrcmp_qm40\"   \"2015mrcmp_qm46\"   \"2015mrcmp_qm58\"   #> [232] \"2015mrcmp_qm64\"   \"2015mrcmp_qm73\"   \"2015mrcmp_qm8\"    #> [235] \"2015mrcmp_qm81\"   \"2015mrcmp_qm90\"   \"2015padre_qf1m2\"  #> [238] \"2015padre_qf1m5\"  \"2015padre_qm13\"   \"2015padre_qm19\"   #> [241] \"2015padre_qm26\"   \"2015padre_qm3\"    \"2015padre_qm33\"   #> [244] \"2015padre_qm40\"   \"2015padre_qm43\"   \"2015padre_qm53\"   #> [247] \"2015padre_qm58\"   \"2015padre_qm60\"   \"2015padre_qm65\"   #> [250] \"2015padre_qm8\"    \"2015paphi_f1m1\"   \"2015paphi_f1m2\"   #> [253] \"2015paphi_qf1m1\"  \"2015paphi_qf1m5\"  \"2015paphi_qm10\"   #> [256] \"2015paphi_qm17\"   \"2015paphi_qm21\"   \"2015paphi_qm23\"   #> [259] \"2015paphi_qm3\"    \"2015paphi_qm34\"   \"2015paphi_qm37\"   #> [262] \"2015paphi_qm44\"   \"2015paphi_qm50\"   \"2015paphi_qm53\"   #> [265] \"2015paphi_qm63\"   \"2015paphi_qm66\"   \"2015paphi_sf1m2\"  #> [268] \"2015paphi_sf1m3\"  \"2015paphi_sf1m5\"  \"2016hop_qf4m1\"    #> [271] \"2016hop_qf4m2\"    \"2016hop_qm104\"    \"2016hop_qm117\"    #> [274] \"2016hop_qm22\"     \"2016hop_qm34\"     \"2016hop_qm47\"     #> [277] \"2016hop_qm55\"     \"2016hop_qm66\"     \"2016hop_qm77\"     #> [280] \"2016hop_qm8\"      \"2016hop_qm92\"     \"2016mrcmp_qf3m1\"  #> [283] \"2016mrcmp_qf3m2\"  \"2016mrcmp_qf3m3\"  \"2016mrcmp_qm107\"  #> [286] \"2016mrcmp_qm120\"  \"2016mrcmp_qm16\"   \"2016mrcmp_qm22\"   #> [289] \"2016mrcmp_qm36\"   \"2016mrcmp_qm43\"   \"2016mrcmp_qm58\"   #> [292] \"2016mrcmp_qm66\"   \"2016mrcmp_qm73\"   \"2016mrcmp_qm85\"   #> [295] \"2016mrcmp_qm9\"    \"2016mrcmp_qm96\"   \"2016mrcmp_sf2m1\"  #> [298] \"2016mrcmp_sf2m2\"  \"2016paphi_qf3m1\"  \"2016paphi_qf3m2\"  #> [301] \"2016paphi_qm14\"   \"2016paphi_qm19\"   \"2016paphi_qm24\"   #> [304] \"2016paphi_qm26\"   \"2016paphi_qm32\"   \"2016paphi_qm41\"   #> [307] \"2016paphi_qm44\"   \"2016paphi_qm47\"   \"2016paphi_qm5\"    #> [310] \"2016paphi_qm56\"   \"2016paphi_qm58\"   \"2016paphi_qm7\"    #> [313] \"2016pawch_qf2m1\"  \"2016pawch_qf2m2\"  \"2016pawch_qm11\"   #> [316] \"2016pawch_qm18\"   \"2016pawch_qm24\"   \"2016pawch_qm30\"   #> [319] \"2016pawch_qm35\"   \"2016pawch_qm39\"   \"2016pawch_qm45\"   #> [322] \"2016pawch_qm5\"    \"2016pawch_qm54\"   \"2016pawch_qm62\"   #> [325] \"2016pawch_qm66\"   \"2016pawch_qm70\"   \"2016pawch_sf1m1\"  #> [328] \"2016pawch_sf1m2\"  \"2016pawch_sf1m3\"  \"2017mrcmp_qm106\"  #> [331] \"2017mrcmp_qm111\"  \"2017mrcmp_qm18\"   \"2017mrcmp_qm2\"    #> [334] \"2017mrcmp_qm28\"   \"2017mrcmp_qm34\"   \"2017mrcmp_qm46\"   #> [337] \"2017mrcmp_qm52\"   \"2017mrcmp_qm62\"   \"2017mrcmp_qm71\"   #> [340] \"2017mrcmp_qm90\"   \"2017mrcmp_qm97\"   \"2017njmm_qf1m1\"   #> [343] \"2017njmm_qf1m2\"   \"2017njmm_qm1\"     \"2017njmm_qm16\"    #> [346] \"2017njmm_qm19\"    \"2017njmm_qm26\"    \"2017njmm_qm7\"     #> [349] \"2017njmm_sf1m1\"   \"2017njmm_sf1m2\"   \"2017njtab_qf2m1\"  #> [352] \"2017njtab_qf2m2\"  \"2017njtab_qm11\"   \"2017njtab_qm14\"   #> [355] \"2017njtab_qm22\"   \"2017njtab_qm29\"   \"2017njtab_qm35\"   #> [358] \"2017njtab_qm42\"   \"2017njtab_qm45\"   \"2017njtab_qm56\"   #> [361] \"2017njtab_qm59\"   \"2017njtab_qm6\"    \"2017njtab_qm67\"   #> [364] \"2017njtab_qm70\"   \"2017parr_f1m1\"    \"2017parr_f1m2\"    #> [367] \"2017parr_f1m3\"    \"2017parr_qf3m1\"   \"2017parr_qf3m2\"   #> [370] \"2017parr_qm17\"    \"2017parr_qm21\"    \"2017parr_qm26\"    #> [373] \"2017parr_qm5\"     \"2017parr_qm8\"     \"2017parr_sf2m1\"   #> [376] \"2017parr_sf2m2\"   \"2017pawch_qf3m1\"  \"2017pawch_qf3m2\"  #> [379] \"2017pawch_qm15\"   \"2017pawch_qm19\"   \"2017pawch_qm2\"    #> [382] \"2017pawch_qm24\"   \"2017pawch_qm27\"   \"2017pawch_qm34\"   #> [385] \"2017pawch_qm42\"   \"2017pawch_qm44\"   \"2017pawch_qm50\"   #> [388] \"2017pawch_qm55\"   \"2017pawch_qm58\"   \"2017pawch_qm9\"    #> [391] \"2018mrcmp_qf4m1\"  \"2018mrcmp_qf4m2\"  \"2018mrcmp_qf4m3\"  #> [394] \"2018mrcmp_qm109\"  \"2018mrcmp_qm120\"  \"2018mrcmp_qm13\"   #> [397] \"2018mrcmp_qm24\"   \"2018mrcmp_qm36\"   \"2018mrcmp_qm4\"    #> [400] \"2018mrcmp_qm42\"   \"2018mrcmp_qm51\"   \"2018mrcmp_qm64\"   #> [403] \"2018mrcmp_qm74\"   \"2018mrcmp_qm90\"   \"2018mrcmp_qm97\"   #> [406] \"2018mrcmp_sf2m1\"  \"2018mrcmp_sf2m2\"  \"2018njtab_qf2m1\"  #> [409] \"2018njtab_qf2m2\"  \"2018njtab_qm19\"   \"2018njtab_qm22\"   #> [412] \"2018njtab_qm28\"   \"2018njtab_qm36\"   \"2018njtab_qm43\"   #> [415] \"2018njtab_qm5\"    \"2018njtab_qm51\"   \"2018njtab_qm56\"   #> [418] \"2018njtab_qm65\"   \"2018njtab_qm70\"   \"2018njtab_qm74\"   #> [421] \"2018njtab_qm8\"    \"2018njtab_sf1m1\"  \"2018njtab_sf1m2\"  #> [424] \"2018njtab_sf1m3\"  \"2018parr_f1m1\"    \"2018parr_f1m2\"    #> [427] \"2018parr_qf4m1\"   \"2018parr_qf4m2\"   \"2018parr_qm16\"    #> [430] \"2018parr_qm20\"    \"2018parr_qm25\"    \"2018parr_qm4\"     #> [433] \"2018parr_qm7\"     \"2018parr_sf2m1\"   \"2018parr_sf2m2\"   #> [436] \"2018parr_sf2m3\"   \"2018pawch_f1m1\"   \"2018pawch_f1m2\"   #> [439] \"2018pawch_qf3m1\"  \"2018pawch_qf3m2\"  \"2018pawch_qf3m3\"  #> [442] \"2018pawch_qm11\"   \"2018pawch_qm15\"   \"2018pawch_qm25\"   #> [445] \"2018pawch_qm34\"   \"2018pawch_qm38\"   \"2018pawch_qm42\"   #> [448] \"2018pawch_qm48\"   \"2018pawch_qm5\"    \"2018pawch_qm55\"   #> [451] \"2018pawch_qm64\"   \"2018pawch_qm68\"   \"2018pawch_qm77\"   #> [454] \"2018pawch_sf2m1\"  \"2018pawch_sf2m2\"  \"2018pawch_sf2m3\"  #> [457] \"2018tes_qf4m1\"    \"2018tes_qf4m2\"    \"2018tes_qm104\"    #> [460] \"2018tes_qm112\"    \"2018tes_qm18\"     \"2018tes_qm24\"     #> [463] \"2018tes_qm40\"     \"2018tes_qm46\"     \"2018tes_qm59\"     #> [466] \"2018tes_qm69\"     \"2018tes_qm7\"      \"2018tes_qm81\"     #> [469] \"2018tes_qm91\"     \"2019mrcmp_qm100\"  \"2019mrcmp_qm107\"  #> [472] \"2019mrcmp_qm112\"  \"2019mrcmp_qm14\"   \"2019mrcmp_qm21\"   #> [475] \"2019mrcmp_qm3\"    \"2019mrcmp_qm35\"   \"2019mrcmp_qm48\"   #> [478] \"2019mrcmp_qm54\"   \"2019mrcmp_qm65\"   \"2019mrcmp_qm73\"   #> [481] \"2019mrcmp_qm90\"   \"2019njdd_f1m1\"    \"2019njdd_f1m2\"    #> [484] \"2019njdd_qf4m1\"   \"2019njdd_qf4m2\"   \"2019njdd_qf4m3\"   #> [487] \"2019njdd_qm13\"    \"2019njdd_qm17\"    \"2019njdd_qm21\"    #> [490] \"2019njdd_qm3\"     \"2019njdd_qm8\"     \"2019njdd_sf2m1\"   #> [493] \"2019njdd_sf2m2\"   \"2019njdd_sf2m3\"   \"2019njmm_qf1m1\"   #> [496] \"2019njmm_qm12\"    \"2019njmm_qm21\"    \"2019njmm_qm24\"    #> [499] \"2019njmm_qm6\"     \"2019njmm_qm8\"     \"2019njtab_qf4m1\"  #> [502] \"2019njtab_qf4m2\"  \"2019njtab_qm11\"   \"2019njtab_qm18\"   #> [505] \"2019njtab_qm22\"   \"2019njtab_qm29\"   \"2019njtab_qm34\"   #> [508] \"2019njtab_qm36\"   \"2019njtab_qm42\"   \"2019njtab_qm48\"   #> [511] \"2019njtab_qm5\"    \"2019njtab_qm56\"   \"2019njtab_qm62\"   #> [514] \"2019njtab_qm65\"   \"2019njtab_sf2m1\"  \"2019njtab_sf2m2\"  #> [517] \"2019parr_qf4m1\"   \"2019parr_qf4m2\"   \"2019parr_qf4m3\"   #> [520] \"2019parr_qm11\"    \"2019parr_qm17\"    \"2019parr_qm23\"    #> [523] \"2019parr_qm29\"    \"2019parr_qm3\"     \"2019parr_qm32\"    #> [526] \"2019parr_qm36\"    \"2019parr_qm44\"    \"2019parr_qm46\"    #> [529] \"2019parr_qm55\"    \"2019parr_qm59\"    \"2019parr_qm7\"     #> [532] \"2019pawch_qf4m1\"  \"2019pawch_qf4m2\"  \"2019pawch_qm13\"   #> [535] \"2019pawch_qm18\"   \"2019pawch_qm22\"   \"2019pawch_qm30\"   #> [538] \"2019pawch_qm35\"   \"2019pawch_qm39\"   \"2019pawch_qm47\"   #> [541] \"2019pawch_qm49\"   \"2019pawch_qm54\"   \"2019pawch_qm6\"    #> [544] \"2019pawch_qm60\"   \"2019pawch_qm8\"    \"2020pahat_qm16\"   #> [547] \"2020pahat_qm23\"   \"2020pahat_qm28\"   \"2020pahat_qm3\"    #> [550] \"2020pahat_qm33\"   \"2020pahat_qm37\"   \"2020pahat_qm45\"   #> [553] \"2020pahat_qm54\"   \"2020pahat_qm57\"   \"2020pahat_qm65\"   #> [556] \"2020pahat_qm68\"   \"2020pahat_qm7\"    \"2021parr_qm1\"     #> [559] \"2021parr_qm10\"    \"2021parr_qm12\"    \"2021parr_qm15\"    #> [562] \"2021parr_qm4\"     \"2021parr_qm6\"     \"2022paben_qf2m1\"  #> [565] \"2022paben_qf2m2\"  \"2022paben_qf2m3\"  \"2022paben_qm10\"   #> [568] \"2022paben_qm13\"   \"2022paben_qm18\"   \"2022paben_qm24\"   #> [571] \"2022paben_qm27\"   \"2022paben_qm30\"   \"2022paben_qm34\"   #> [574] \"2022paben_qm4\"    \"2022paben_qm40\"   \"2022paben_qm44\"   #> [577] \"2022paben_qm49\"   \"2022paben_qm54\"   \"2022paphi_qf2m1\"  #> [580] \"2022paphi_qf2m2\"  \"2022paphi_qf2m3\"  \"2022paphi_qm11\"   #> [583] \"2022paphi_qm18\"   \"2022paphi_qm21\"   \"2022paphi_qm27\"   #> [586] \"2022paphi_qm32\"   \"2022paphi_qm36\"   \"2022paphi_qm41\"   #> [589] \"2022paphi_qm44\"   \"2022paphi_qm47\"   \"2022paphi_qm5\"    #> [592] \"2022paphi_qm53\"   \"2022paphi_qm8\"    \"2022paphi_sf1m1\"  #> [595] \"2022paphi_sf1m2\"  \"2022parr_qm13\"    \"2022parr_qm17\"    #> [598] \"2022parr_qm2\"     \"2022parr_qm21\"    \"2022parr_qm7\"     #> [601] \"2023mrcmp_qm107\"  \"2023mrcmp_qm115\"  \"2023mrcmp_qm15\"   #> [604] \"2023mrcmp_qm24\"   \"2023mrcmp_qm33\"   \"2023mrcmp_qm41\"   #> [607] \"2023mrcmp_qm54\"   \"2023mrcmp_qm67\"   \"2023mrcmp_qm8\"    #> [610] \"2023mrcmp_qm80\"   \"2023mrcmp_qm88\"   \"2023mrcmp_qm95\"   #> [613] \"2023njtab_qm15\"   \"2023njtab_qm19\"   \"2023njtab_qm2\"    #> [616] \"2023njtab_qm24\"   \"2023njtab_qm31\"   \"2023njtab_qm35\"   #> [619] \"2023njtab_qm41\"   \"2023njtab_qm44\"   \"2023njtab_qm48\"   #> [622] \"2023njtab_qm52\"   \"2023njtab_qm58\"   \"2023njtab_qm7\"    #> [625] \"2023njtab_sf11m1\" \"2023njtab_sf13m1\" \"2023njtab_sf4m1\"  #> [628] \"2023njtab_sf8m1\"  \"2023paphi_qm1\"    \"2023paphi_qm15\"   #> [631] \"2023paphi_qm19\"   \"2023paphi_qm25\"   \"2023paphi_qm28\"   #> [634] \"2023paphi_qm33\"   \"2023paphi_qm37\"   \"2023paphi_qm45\"   #> [637] \"2023paphi_qm48\"   \"2023paphi_qm54\"   \"2023paphi_qm61\"   #> [640] \"2023paphi_qm7\"    \"2023paphi_sf3m1\"  \"2023paphi_sf6m1\"  #> [643] \"2024njtab_qm12\"   \"2024njtab_qm15\"   \"2024njtab_qm22\"   #> [646] \"2024njtab_qm27\"   \"2024njtab_qm31\"   \"2024njtab_qm34\"   #> [649] \"2024njtab_qm39\"   \"2024njtab_qm42\"   \"2024njtab_qm5\"    #> [652] \"2024njtab_qm50\"   \"2024njtab_qm53\"   \"2024njtab_qm9\"    #> [655] \"2024njtab_sf3m1\"  \"2024njtab_sf6m1\"  \"2024njtab_sf9m1\"  #> [658] \"2024paben_qm11\"   \"2024paben_qm14\"   \"2024paben_qm21\"   #> [661] \"2024paben_qm24\"   \"2024paben_qm31\"   \"2024paben_qm38\"   #> [664] \"2024paben_qm46\"   \"2024paben_qm50\"   \"2024paben_qm54\"   #> [667] \"2024paben_qm6\"    \"2024paben_qm64\"   \"2024paben_qm68\"   #> [670] \"2025mrcmp_qm108\"  \"2025mrcmp_qm117\"  \"2025mrcmp_qm17\"   #> [673] \"2025mrcmp_qm30\"   \"2025mrcmp_qm39\"   \"2025mrcmp_qm46\"   #> [676] \"2025mrcmp_qm53\"   \"2025mrcmp_qm63\"   \"2025mrcmp_qm7\"    #> [679] \"2025mrcmp_qm72\"   \"2025mrcmp_qm84\"   \"2025mrcmp_qm91\"   #> [682] \"2025njtab_qm1\"    \"2025njtab_qm12\"   \"2025njtab_qm20\"   #> [685] \"2025njtab_qm23\"   \"2025njtab_qm33\"   \"2025njtab_qm38\"   #> [688] \"2025njtab_qm42\"   \"2025njtab_qm45\"   \"2025njtab_qm55\"   #> [691] \"2025njtab_qm58\"   \"2025njtab_qm6\"    \"2025njtab_qm61\"   #> [694] \"2025njtab_sf10m1\" \"2025njtab_sf12m1\" \"2025njtab_sf3m1\"  #> [697] \"2025njtab_sf8m1\"  \"2025paben_f1m1\"   \"2025paben_f1m2\"   #> [700] \"2025paben_qm1\"    \"2025paben_qm14\"   \"2025paben_qm19\"   #> [703] \"2025paben_qm24\"   \"2025paben_qm29\"   \"2025paben_qm34\"   #> [706] \"2025paben_qm39\"   \"2025paben_qm45\"   \"2025paben_qm50\"   #> [709] \"2025paben_qm57\"   \"2025paben_qm61\"   \"2025paben_qm7\"    #> [712] \"2025paben_sf11m1\" \"2025paben_sf13m1\" \"2025paben_sf3m1\"  #> [715] \"2025paben_sf8m1\"  team_matches(1712, year = 2016) #> # A tibble: 60 × 101 #>    actual_time blue_dq_team_keys blue_score blue_surrogate_team_keys blue1 blue2 #>          <int> <lgl>                  <int> <lgl>                    <chr> <chr> #>  1  1458400503 NA                        59 NA                       frc1… frc1… #>  2  1459611505 NA                        94 NA                       frc1… frc3… #>  3  1458401796 NA                        54 NA                       frc5… frc2… #>  4  1461854068 NA                        94 NA                       frc5… frc2… #>  5  1460660517 NA                       121 NA                       frc4… frc2… #>  6  1459614211 NA                        81 NA                       frc5… frc7… #>  7  1458405009 NA                        71 NA                       frc2… frc1… #>  8  1460663217 NA                        92 NA                       frc1… frc5… #>  9  1459621263 NA                        70 NA                       frc4… frc1… #> 10  1458407409 NA                       119 NA                       frc2… frc5… #> # ℹ 50 more rows #> # ℹ 95 more variables: blue3 <chr>, red_dq_team_keys <list>, red_score <int>, #> #   red_surrogate_team_keys <lgl>, red1 <chr>, red2 <chr>, red3 <chr>, #> #   comp_level <fct>, event_key <chr>, key <chr>, match_number <int>, #> #   post_result_time <lgl>, predicted_time <lgl>, blue_adjustPoints <int>, #> #   blue_autoBoulderPoints <int>, blue_autoBouldersHigh <int>, #> #   blue_autoBouldersLow <int>, blue_autoCrossingPoints <int>, … team_matches(1712, event = \"2015paphi\") #> # A tibble: 19 × 73 #>    actual_time blue_dq_team_keys blue_score blue_surrogate_team_keys blue1 blue2 #>    <lgl>       <lgl>                  <int> <lgl>                    <chr> <chr> #>  1 NA          NA                       102 NA                       frc4… frc1… #>  2 NA          NA                        51 NA                       frc1… frc5… #>  3 NA          NA                        59 NA                       frc1… frc1… #>  4 NA          NA                        22 NA                       frc2… frc2… #>  5 NA          NA                        86 NA                       frc3… frc5… #>  6 NA          NA                       117 NA                       frc2… frc2… #>  7 NA          NA                        70 NA                       frc4… frc4… #>  8 NA          NA                        16 NA                       frc1… frc1… #>  9 NA          NA                        67 NA                       frc1… frc4… #> 10 NA          NA                        63 NA                       frc2… frc1… #> 11 NA          NA                        30 NA                       frc1… frc2… #> 12 NA          NA                        74 NA                       frc1… frc4… #> 13 NA          NA                        15 NA                       frc2… frc8… #> 14 NA          NA                        58 NA                       frc5… frc7… #> 15 NA          NA                        64 NA                       frc4… frc1… #> 16 NA          NA                        83 NA                       frc4… frc1… #> 17 NA          NA                        81 NA                       frc3… frc2… #> 18 NA          NA                        77 NA                       frc4… frc1… #> 19 NA          NA                        74 NA                       frc4… frc1… #> # ℹ 67 more variables: blue3 <chr>, red_dq_team_keys <lgl>, red_score <int>, #> #   red_surrogate_team_keys <lgl>, red1 <chr>, red2 <chr>, red3 <chr>, #> #   comp_level <fct>, event_key <chr>, key <chr>, match_number <int>, #> #   post_result_time <lgl>, predicted_time <lgl>, blue_adjust_points <int>, #> #   blue_auto_points <int>, blue_container_count_level1 <int>, #> #   blue_container_count_level2 <int>, blue_container_count_level3 <int>, #> #   blue_container_count_level4 <int>, blue_container_count_level5 <int>, … team_matches(1712, official = TRUE, alliances = FALSE, breakdown = FALSE) #> Warning: Unknown or uninitialised column: `red_score`. #> Warning: Unknown or uninitialised column: `blue_score`. #> Error in matches[!id_unplayed(matches), ]: Can't subset rows with `!id_unplayed(matches)`. #> ✖ Logical subscript `!id_unplayed(matches)` must be size 1 or 629, not 0."},{"path":"https://gkrotkov.github.io/scoutR/reference/team_participation_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Team Participation Years — team_participation_years","title":"Team Participation Years — team_participation_years","text":"Returns list years given team participated least one event. function simple, clutter namespace making tba_readR tba_tidyR version.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_participation_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team Participation Years — team_participation_years","text":"","code":"team_participation_years(n)"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_participation_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team Participation Years — team_participation_years","text":"n team number (either number string)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_participation_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team Participation Years — team_participation_years","text":"vector years","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_participation_years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team Participation Years — team_participation_years","text":"","code":"team_participation_years(1712) #>  [1] 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 #> [16] 2021 2022 2023 2024 2025 team_participation_years(\"3504\") #>  [1] 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Team (Statbotics) — team_sb","title":"Team (Statbotics) — team_sb","text":"Returns list representing team's statbotics results","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team (Statbotics) — team_sb","text":"","code":"team_sb(tm, yr = NULL, event = NULL, match = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/team_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team (Statbotics) — team_sb","text":"tm (int/chr) team number yr (int) year interest event (chr) event key interest (ex. \"2023mil\") match (chr) match key interest (ex. \"2024new_qm110\")","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/team_sb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team (Statbotics) — team_sb","text":"","code":"dawgma <- team_sb(1712) blair_at_severn <- team_sb(449, event = \"2025mdsev\")"},{"path":"https://gkrotkov.github.io/scoutR/reference/teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Teams — teams","title":"Read Teams — teams","text":"Get team list paginated team # 500s.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Teams — teams","text":"","code":"teams(page_num, year = FALSE, simple = FALSE, keys = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Teams — teams","text":"page_num index desired page year year interest. FALSE, gets years simple (bool) simplify return objects? keys (bool) return keys ?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Teams — teams","text":"tidy tibble teams","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Teams — teams","text":"","code":"teams(0) #> # A tibble: 404 × 18 #>    address city           country gmaps_place_id gmaps_url key   lat   lng   #>    <lgl>   <chr>          <chr>   <lgl>          <lgl>     <chr> <lgl> <lgl> #>  1 NA      Pontiac        USA     NA             NA        frc1  NA    NA    #>  2 NA      Van Nuys       USA     NA             NA        frc4  NA    NA    #>  3 NA      Melvindale     USA     NA             NA        frc5  NA    NA    #>  4 NA      Plymouth       USA     NA             NA        frc6  NA    NA    #>  5 NA      Baltimore      USA     NA             NA        frc7  NA    NA    #>  6 NA      Palo Alto      USA     NA             NA        frc8  NA    NA    #>  7 NA      Chicago        USA     NA             NA        frc9  NA    NA    #>  8 NA      St. Louis Park USA     NA             NA        frc10 NA    NA    #>  9 NA      Flanders       USA     NA             NA        frc11 NA    NA    #> 10 NA      NA             NA      NA             NA        frc13 NA    NA    #> # ℹ 394 more rows #> # ℹ 10 more variables: location_name <lgl>, motto <lgl>, name <chr>, #> #   nickname <chr>, postal_code <chr>, rookie_year <int>, school_name <chr>, #> #   state_prov <chr>, team_number <int>, website <chr> teams(4) #> # A tibble: 408 × 18 #>    address city         country gmaps_place_id gmaps_url key     lat   lng   #>    <lgl>   <chr>        <chr>   <lgl>          <lgl>     <chr>   <lgl> <lgl> #>  1 NA      Dorr         USA     NA             NA        frc2000 NA    NA    #>  2 NA      Kansas City  USA     NA             NA        frc2001 NA    NA    #>  3 NA      Tualatin     USA     NA             NA        frc2002 NA    NA    #>  4 NA      Tulsa        USA     NA             NA        frc2004 NA    NA    #>  5 NA      Kansas City  USA     NA             NA        frc2005 NA    NA    #>  6 NA      Duluth       USA     NA             NA        frc2007 NA    NA    #>  7 NA      Kansas City  USA     NA             NA        frc2008 NA    NA    #>  8 NA      Roxbury      USA     NA             NA        frc2009 NA    NA    #>  9 NA      Warren       USA     NA             NA        frc2010 NA    NA    #> 10 NA      Independence USA     NA             NA        frc2011 NA    NA    #> # ℹ 398 more rows #> # ℹ 10 more variables: location_name <lgl>, motto <lgl>, name <chr>, #> #   nickname <chr>, postal_code <chr>, rookie_year <int>, school_name <chr>, #> #   state_prov <chr>, team_number <int>, website <chr> teams(1, year = 2016) #> # A tibble: 148 × 18 #>    address city               country gmaps_place_id gmaps_url key   lat   lng   #>    <lgl>   <chr>              <chr>   <lgl>          <lgl>     <chr> <lgl> <lgl> #>  1 NA      Manchester/Goffst… USA     NA             NA        frc5… NA    NA    #>  2 NA      Novi               USA     NA             NA        frc5… NA    NA    #>  3 NA      Bedford            USA     NA             NA        frc5… NA    NA    #>  4 NA      Miller Place       USA     NA             NA        frc5… NA    NA    #>  5 NA      Cedar Falls        USA     NA             NA        frc5… NA    NA    #>  6 NA      Massapequa         USA     NA             NA        frc5… NA    NA    #>  7 NA      Lindenhurst        USA     NA             NA        frc5… NA    NA    #>  8 NA      Sussex             USA     NA             NA        frc5… NA    NA    #>  9 NA      Athens             USA     NA             NA        frc5… NA    NA    #> 10 NA      Richmond           USA     NA             NA        frc5… NA    NA    #> # ℹ 138 more rows #> # ℹ 10 more variables: location_name <lgl>, motto <lgl>, name <chr>, #> #   nickname <chr>, postal_code <chr>, rookie_year <int>, school_name <chr>, #> #   state_prov <chr>, team_number <int>, website <chr> teams(0, simple = TRUE) #> # A tibble: 404 × 7 #>    city           country key   name             nickname state_prov team_number #>    <chr>          <chr>   <chr> <chr>            <chr>    <chr>            <int> #>  1 Pontiac        USA     frc1  FCA Foundation/… The Jug… Michigan             1 #>  2 Van Nuys       USA     frc4  Gene HAAS Found… Team 4 … California           4 #>  3 Melvindale     USA     frc5  Ford FIRST Robo… Robocar… MI                   5 #>  4 Plymouth       USA     frc6  ATK (Alliant Te… The Cog… MN                   6 #>  5 Baltimore      USA     frc7  Lockheed Martin… Team007  MD                   7 #>  6 Palo Alto      USA     frc8  Apple/Bayer Fun… Paly Ro… California           8 #>  7 Chicago        USA     frc9  Roosevelt High … Rooseve… IL                   9 #>  8 St. Louis Park USA     frc10 Benilde-St. Mar… Red Kni… MN                  10 #>  9 Flanders       USA     frc11 National Defens… MORT     New Jersey          11 #> 10 NA             NA      frc13 Team 13          Triskad… NA                  13 #> # ℹ 394 more rows teams(3, keys = TRUE) #>   [1] \"frc1500\" \"frc1501\" \"frc1502\" \"frc1503\" \"frc1504\" \"frc1505\" \"frc1506\" #>   [8] \"frc1507\" \"frc1508\" \"frc1509\" \"frc1510\" \"frc1511\" \"frc1512\" \"frc1513\" #>  [15] \"frc1514\" \"frc1515\" \"frc1516\" \"frc1517\" \"frc1518\" \"frc1519\" \"frc1520\" #>  [22] \"frc1522\" \"frc1523\" \"frc1524\" \"frc1525\" \"frc1527\" \"frc1528\" \"frc1529\" #>  [29] \"frc1530\" \"frc1531\" \"frc1532\" \"frc1533\" \"frc1534\" \"frc1535\" \"frc1537\" #>  [36] \"frc1538\" \"frc1539\" \"frc1540\" \"frc1541\" \"frc1542\" \"frc1543\" \"frc1544\" #>  [43] \"frc1545\" \"frc1546\" \"frc1547\" \"frc1548\" \"frc1549\" \"frc1550\" \"frc1551\" #>  [50] \"frc1552\" \"frc1553\" \"frc1554\" \"frc1555\" \"frc1556\" \"frc1557\" \"frc1558\" #>  [57] \"frc1559\" \"frc1560\" \"frc1561\" \"frc1562\" \"frc1563\" \"frc1564\" \"frc1565\" #>  [64] \"frc1566\" \"frc1567\" \"frc1568\" \"frc1569\" \"frc1570\" \"frc1571\" \"frc1572\" #>  [71] \"frc1573\" \"frc1574\" \"frc1575\" \"frc1576\" \"frc1577\" \"frc1578\" \"frc1579\" #>  [78] \"frc1580\" \"frc1581\" \"frc1582\" \"frc1583\" \"frc1584\" \"frc1585\" \"frc1588\" #>  [85] \"frc1589\" \"frc1590\" \"frc1591\" \"frc1592\" \"frc1593\" \"frc1594\" \"frc1595\" #>  [92] \"frc1596\" \"frc1597\" \"frc1598\" \"frc1599\" \"frc1600\" \"frc1601\" \"frc1602\" #>  [99] \"frc1603\" \"frc1604\" \"frc1605\" \"frc1606\" \"frc1607\" \"frc1609\" \"frc1610\" #> [106] \"frc1611\" \"frc1612\" \"frc1613\" \"frc1616\" \"frc1617\" \"frc1618\" \"frc1619\" #> [113] \"frc1620\" \"frc1621\" \"frc1622\" \"frc1623\" \"frc1624\" \"frc1625\" \"frc1626\" #> [120] \"frc1628\" \"frc1629\" \"frc1631\" \"frc1633\" \"frc1634\" \"frc1635\" \"frc1636\" #> [127] \"frc1640\" \"frc1641\" \"frc1642\" \"frc1643\" \"frc1644\" \"frc1645\" \"frc1646\" #> [134] \"frc1647\" \"frc1648\" \"frc1649\" \"frc1650\" \"frc1651\" \"frc1652\" \"frc1653\" #> [141] \"frc1654\" \"frc1655\" \"frc1656\" \"frc1657\" \"frc1658\" \"frc1660\" \"frc1661\" #> [148] \"frc1662\" \"frc1665\" \"frc1666\" \"frc1667\" \"frc1669\" \"frc1670\" \"frc1671\" #> [155] \"frc1672\" \"frc1674\" \"frc1675\" \"frc1676\" \"frc1677\" \"frc1678\" \"frc1680\" #> [162] \"frc1682\" \"frc1683\" \"frc1684\" \"frc1685\" \"frc1686\" \"frc1687\" \"frc1688\" #> [169] \"frc1689\" \"frc1690\" \"frc1691\" \"frc1692\" \"frc1693\" \"frc1694\" \"frc1695\" #> [176] \"frc1696\" \"frc1697\" \"frc1698\" \"frc1699\" \"frc1700\" \"frc1701\" \"frc1702\" #> [183] \"frc1703\" \"frc1704\" \"frc1705\" \"frc1706\" \"frc1707\" \"frc1708\" \"frc1709\" #> [190] \"frc1710\" \"frc1711\" \"frc1712\" \"frc1713\" \"frc1714\" \"frc1715\" \"frc1716\" #> [197] \"frc1717\" \"frc1718\" \"frc1719\" \"frc1720\" \"frc1721\" \"frc1722\" \"frc1723\" #> [204] \"frc1724\" \"frc1725\" \"frc1726\" \"frc1727\" \"frc1728\" \"frc1729\" \"frc1730\" #> [211] \"frc1731\" \"frc1732\" \"frc1733\" \"frc1734\" \"frc1735\" \"frc1736\" \"frc1737\" #> [218] \"frc1738\" \"frc1739\" \"frc1740\" \"frc1741\" \"frc1742\" \"frc1743\" \"frc1744\" #> [225] \"frc1745\" \"frc1746\" \"frc1747\" \"frc1748\" \"frc1749\" \"frc1750\" \"frc1751\" #> [232] \"frc1752\" \"frc1753\" \"frc1754\" \"frc1755\" \"frc1756\" \"frc1757\" \"frc1758\" #> [239] \"frc1759\" \"frc1760\" \"frc1761\" \"frc1763\" \"frc1764\" \"frc1765\" \"frc1766\" #> [246] \"frc1767\" \"frc1768\" \"frc1769\" \"frc1770\" \"frc1771\" \"frc1772\" \"frc1774\" #> [253] \"frc1775\" \"frc1776\" \"frc1777\" \"frc1778\" \"frc1779\" \"frc1780\" \"frc1781\" #> [260] \"frc1782\" \"frc1783\" \"frc1784\" \"frc1785\" \"frc1786\" \"frc1787\" \"frc1788\" #> [267] \"frc1789\" \"frc1790\" \"frc1791\" \"frc1792\" \"frc1793\" \"frc1794\" \"frc1795\" #> [274] \"frc1796\" \"frc1797\" \"frc1798\" \"frc1799\" \"frc1800\" \"frc1801\" \"frc1802\" #> [281] \"frc1803\" \"frc1804\" \"frc1805\" \"frc1806\" \"frc1807\" \"frc1808\" \"frc1809\" #> [288] \"frc1810\" \"frc1811\" \"frc1812\" \"frc1813\" \"frc1814\" \"frc1815\" \"frc1816\" #> [295] \"frc1817\" \"frc1818\" \"frc1819\" \"frc1820\" \"frc1822\" \"frc1823\" \"frc1824\" #> [302] \"frc1825\" \"frc1826\" \"frc1827\" \"frc1828\" \"frc1829\" \"frc1830\" \"frc1831\" #> [309] \"frc1832\" \"frc1833\" \"frc1834\" \"frc1835\" \"frc1836\" \"frc1837\" \"frc1838\" #> [316] \"frc1839\" \"frc1840\" \"frc1841\" \"frc1842\" \"frc1843\" \"frc1844\" \"frc1845\" #> [323] \"frc1846\" \"frc1847\" \"frc1848\" \"frc1849\" \"frc1850\" \"frc1851\" \"frc1852\" #> [330] \"frc1853\" \"frc1855\" \"frc1856\" \"frc1858\" \"frc1859\" \"frc1860\" \"frc1861\" #> [337] \"frc1862\" \"frc1863\" \"frc1864\" \"frc1865\" \"frc1866\" \"frc1867\" \"frc1868\" #> [344] \"frc1870\" \"frc1871\" \"frc1872\" \"frc1873\" \"frc1875\" \"frc1876\" \"frc1877\" #> [351] \"frc1879\" \"frc1880\" \"frc1881\" \"frc1882\" \"frc1883\" \"frc1884\" \"frc1885\" #> [358] \"frc1886\" \"frc1887\" \"frc1888\" \"frc1889\" \"frc1890\" \"frc1891\" \"frc1893\" #> [365] \"frc1894\" \"frc1895\" \"frc1896\" \"frc1897\" \"frc1898\" \"frc1899\" \"frc1900\" #> [372] \"frc1901\" \"frc1902\" \"frc1904\" \"frc1905\" \"frc1906\" \"frc1907\" \"frc1908\" #> [379] \"frc1909\" \"frc1910\" \"frc1911\" \"frc1912\" \"frc1913\" \"frc1914\" \"frc1915\" #> [386] \"frc1916\" \"frc1917\" \"frc1918\" \"frc1919\" \"frc1920\" \"frc1922\" \"frc1923\" #> [393] \"frc1925\" \"frc1926\" \"frc1927\" \"frc1929\" \"frc1930\" \"frc1931\" \"frc1932\" #> [400] \"frc1933\" \"frc1934\" \"frc1935\" \"frc1937\" \"frc1938\" \"frc1939\" \"frc1940\" #> [407] \"frc1941\" \"frc1942\" \"frc1943\" \"frc1944\" \"frc1945\" \"frc1946\" \"frc1947\" #> [414] \"frc1948\" \"frc1949\" \"frc1950\" \"frc1951\" \"frc1952\" \"frc1954\" \"frc1955\" #> [421] \"frc1956\" \"frc1957\" \"frc1959\" \"frc1960\" \"frc1961\" \"frc1962\" \"frc1963\" #> [428] \"frc1965\" \"frc1966\" \"frc1967\" \"frc1970\" \"frc1972\" \"frc1973\" \"frc1974\" #> [435] \"frc1975\" \"frc1976\" \"frc1977\" \"frc1978\" \"frc1980\" \"frc1981\" \"frc1982\" #> [442] \"frc1983\" \"frc1984\" \"frc1985\" \"frc1986\" \"frc1987\" \"frc1988\" \"frc1989\" #> [449] \"frc1990\" \"frc1991\" \"frc1992\" \"frc1994\" \"frc1995\" \"frc1996\" \"frc1997\" #> [456] \"frc1998\" \"frc1999\""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Teams (Statbotics) — teams_sb","title":"Teams (Statbotics) — teams_sb","text":"Returns batch team (team-year, team-event, team-match) objects conforming provided parameters.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teams (Statbotics) — teams_sb","text":"","code":"teams_sb(..., yr = NULL, event = NULL, match = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/teams_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teams (Statbotics) — teams_sb","text":"... Optional parameters passed v3/teams endpoint yr (optional) year interest event (optional) event interest match (optional) match interest","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams_yearly.html","id":null,"dir":"Reference","previous_headings":"","what":"Teams by Year — teams_yearly","title":"Teams by Year — teams_yearly","text":"Indicates team-year competed (2024)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/teams_yearly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teams by Year — teams_yearly","text":"","code":"teams_yearly"},{"path":"https://gkrotkov.github.io/scoutR/reference/teams_yearly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Teams by Year — teams_yearly","text":"object class tbl_df (inherits tbl, data.frame) 55843 rows 8 columns.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tf.html","id":null,"dir":"Reference","previous_headings":"","what":"Team Formatting — tf","title":"Team Formatting — tf","text":"Coerces team identifiers TBA-legal format","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team Formatting — tf","text":"","code":"tf(n)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team Formatting — tf","text":"n Team identifier numeric string","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team Formatting — tf","text":"TBA-legal identifier","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Team Formatting — tf","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team Formatting — tf","text":"","code":"tf(1712) #> Error in tf(1712): could not find function \"tf\" tf(\"frc1712\") #> Error in tf(\"frc1712\"): could not find function \"tf\" tf(\"1712\") #> Error in tf(\"1712\"): could not find function \"tf\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_alliances.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Alliances — tidy_alliances","title":"Tidy Alliances — tidy_alliances","text":"Returns tidy tibble alliances event given alliances object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_alliances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Alliances — tidy_alliances","text":"","code":"tidy_alliances(raw, unpack_picks = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_alliances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Alliances — tidy_alliances","text":"raw list alliances objects read_event_alliances unpack_picks (bool) split picks list columns?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_alliances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Alliances — tidy_alliances","text":"tidy tibble alliances","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_alliances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Alliances — tidy_alliances","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_alliances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Alliances — tidy_alliances","text":"","code":"tidy_alliances(read_event_alliances(\"2019mrcmp\"), unpack_picks = TRUE) #> Error in tidy_alliances(read_event_alliances(\"2019mrcmp\"), unpack_picks = TRUE): could not find function \"tidy_alliances\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_coprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Event cOPRs — tidy_coprs","title":"Tidy Event cOPRs — tidy_coprs","text":"Turns list event cOPRs (read_event_coprs) tidy dataframe","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_coprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Event cOPRs — tidy_coprs","text":"","code":"tidy_coprs(data)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_coprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Event cOPRs — tidy_coprs","text":"data list cOPR data","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Event — tidy_event","title":"Tidy Event — tidy_event","text":"Makes single event object tidy tibble. Designed easily rbindable, since tibble single event tidy format rare use case.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Event — tidy_event","text":"","code":"tidy_event(raw)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Event — tidy_event","text":"raw TBA API event object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Event — tidy_event","text":"tidy tibble row event object","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_event.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Event — tidy_event","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Event — tidy_event","text":"","code":"tidy_event(read_event(\"2017pawch\")) #> Error in tidy_event(read_event(\"2017pawch\")): could not find function \"tidy_event\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Events — tidy_events","title":"Tidy Events — tidy_events","text":"Returns tidy tibble event objects given list TBA event objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Events — tidy_events","text":"","code":"tidy_events(raw, official = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Events — tidy_events","text":"raw list TBA event objects official return official events?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Events — tidy_events","text":"Tidy tibble events","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_events.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Events — tidy_events","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Events — tidy_events","text":"","code":"tidy_events(read_district_events(\"2016mar\")) #> Error in tidy_events(read_district_events(\"2016mar\")): could not find function \"tidy_events\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_insights.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Insights — tidy_insights","title":"Tidy Insights — tidy_insights","text":"Function handle JSON input insight data, returning tidy dataframe.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_insights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Insights — tidy_insights","text":"","code":"tidy_insights(raw, insight_as_col = FALSE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_insights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Insights — tidy_insights","text":"raw Sublist insight data, usually either quals playoffs insight_as_col (bool) want transpose data? TRUE,","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Matches — tidy_matches","title":"Tidy Matches — tidy_matches","text":"Takes list match objects TBA's API returns tidy tibble.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Matches — tidy_matches","text":"","code":"tidy_matches(   raw,   alliances = FALSE,   breakdown = FALSE,   unplayed = FALSE,   sort = TRUE )"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Matches — tidy_matches","text":"raw list match objects TBA API read tba_readR alliances (boolean) unpack alliances? breakdown (boolean) unpack score breakdown? unplayed (boolean) include matches scores -1 (indicating match played?) sort (boolean) TRUE, sort output matches competition level match number.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Matches — tidy_matches","text":"tidy tibble matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_matches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Matches — tidy_matches","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Matches — tidy_matches","text":"","code":"tidy_matches(read_event_matches(\"2016mrcmp\"), alliances = TRUE,     breakdown = TRUE) #> Error in tidy_matches(read_event_matches(\"2016mrcmp\"), alliances = TRUE,     breakdown = TRUE): could not find function \"tidy_matches\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_oprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy OPRs — tidy_oprs","title":"Tidy OPRs — tidy_oprs","text":"Returns tidy tibble OPRs given raw lists OPR objects TBA API","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_oprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy OPRs — tidy_oprs","text":"","code":"tidy_oprs(raw)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_oprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy OPRs — tidy_oprs","text":"raw list OPR objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_oprs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy OPRs — tidy_oprs","text":"tidy tibble event OPRs","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_oprs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy OPRs — tidy_oprs","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_oprs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy OPRs — tidy_oprs","text":"","code":"tidy_oprs(read_event_oprs(\"2018mrcmp\")) #> Error in tidy_oprs(read_event_oprs(\"2018mrcmp\")): could not find function \"tidy_oprs\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Rankings — tidy_rankings","title":"Tidy Rankings — tidy_rankings","text":"Returns tidy tibble rankings given raw lists event rankings","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Rankings — tidy_rankings","text":"","code":"tidy_rankings(raw, trim = TRUE)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Rankings — tidy_rankings","text":"raw (list) rankings list object TBA API unpack (bool) unpack tiebreaker info?","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Rankings — tidy_rankings","text":"Tidy tibble event rankings","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_rankings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Rankings — tidy_rankings","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Rankings — tidy_rankings","text":"","code":"tidy_rankings(read_event_rankings(\"2016hop\")) #> Error in tidy_rankings(read_event_rankings(\"2016hop\")): could not find function \"tidy_rankings\""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Teams — tidy_teams","title":"Tidy Teams — tidy_teams","text":"Takes list TBA API team objects converts tidy tibble","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Teams — tidy_teams","text":"","code":"tidy_teams(raw)"},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Teams — tidy_teams","text":"raw TBA API team object list","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Teams — tidy_teams","text":"tidy tibble teams","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_teams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Teams — tidy_teams","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/tidy_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Teams — tidy_teams","text":"","code":"tidy_teams(read_event_teams(\"2022txirv\")) #> Error in tidy_teams(read_event_teams(\"2022txirv\")): could not find function \"tidy_teams\""},{"path":"https://gkrotkov.github.io/scoutR/reference/transpose_insights.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose Insights — transpose_insights","title":"Transpose Insights — transpose_insights","text":"Helper function tidy_insights, handles transpose case.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/transpose_insights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose Insights — transpose_insights","text":"","code":"transpose_insights(data)"},{"path":"https://gkrotkov.github.io/scoutR/reference/transpose_insights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose Insights — transpose_insights","text":"data long dataframe insights","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/trim_unplayed.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim Unplayed Matches — trim_unplayed","title":"Trim Unplayed Matches — trim_unplayed","text":"function takes dataframe TBA match objects trims away unplayed matches.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/trim_unplayed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim Unplayed Matches — trim_unplayed","text":"","code":"trim_unplayed(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/trim_unplayed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim Unplayed Matches — trim_unplayed","text":"matches dataframe match objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/trim_unplayed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trim Unplayed Matches — trim_unplayed","text":"identify match unplayed red blue alliance score -1.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unnest_alliances.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest Alliances — unnest_alliances","title":"Unnest Alliances — unnest_alliances","text":"Unpacks columns \"blue\" \"red\" renames new columns colors. Dedicated helper unpack_alliances, user calling .","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unnest_alliances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest Alliances — unnest_alliances","text":"","code":"unnest_alliances(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/unnest_alliances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest Alliances — unnest_alliances","text":"matches list match objects","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unnest_alliances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest Alliances — unnest_alliances","text":"match objects alliance field broken alliance members","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unnest_alliances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Unnest Alliances — unnest_alliances","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_alliances.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack Alliances — unpack_alliances","title":"Unpack Alliances — unpack_alliances","text":"Takes tibble matches breaks \"alliance\" column. primarily helper tidy_matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_alliances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack Alliances — unpack_alliances","text":"","code":"unpack_alliances(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_alliances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack Alliances — unpack_alliances","text":"matches tibble matches","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_alliances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack Alliances — unpack_alliances","text":"tibble matches alliance compositions broken ","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_alliances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Unpack Alliances — unpack_alliances","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack Breakdown — unpack_breakdown","title":"Unpack Breakdown — unpack_breakdown","text":"Breaks \"score_breakdown\" field many columns","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack Breakdown — unpack_breakdown","text":"","code":"unpack_breakdown(matches)"},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack Breakdown — unpack_breakdown","text":"matches Tibble TBA match objects (unnested)","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack Breakdown — unpack_breakdown","text":"Tibble matches additional columns score breakdown.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/unpack_breakdown.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Unpack Breakdown — unpack_breakdown","text":"Gabriel Krotkov","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/w_stepwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Stepwise-Optimized OPR Weights — w_stepwise","title":"Stepwise-Optimized OPR Weights — w_stepwise","text":"Linear Regression weights optimized stepwise outlined Girls Steel \"Clutch Matches Middle\"","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/w_stepwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stepwise-Optimized OPR Weights — w_stepwise","text":"","code":"w_stepwise"},{"path":"https://gkrotkov.github.io/scoutR/reference/w_stepwise.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stepwise-Optimized OPR Weights — w_stepwise","text":"object class numeric length 12.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/w_stepwise.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stepwise-Optimized OPR Weights — w_stepwise","text":"\"Clutch Matches Middle, Girls Steel\"","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/week_seed_finish_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Finish Table by Seed and Week — week_seed_finish_table","title":"Event Finish Table by Seed and Week — week_seed_finish_table","text":"Given competition week year, returns table showing distribution event seed particular finish (default \"Winner\")","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/week_seed_finish_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Finish Table by Seed and Week — week_seed_finish_table","text":"","code":"week_seed_finish_table(wk, year = YEAR, finish = \"Winner\", size = NULL)"},{"path":"https://gkrotkov.github.io/scoutR/reference/week_seed_finish_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Finish Table by Seed and Week — week_seed_finish_table","text":"wk Single integer 1 6 representing week competition year Year interest, defaults current year. size (int) NULL, include events. Otherwise, include events specified number alliances.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/week_seed_finish_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Finish Table by Seed and Week — week_seed_finish_table","text":"","code":"week_seed_finish_table(1) #>  #>  1  2  #> 21  4  week_seed_finish_table(4, 2023) #>  #>  1  2  3  4  5  #> 23  6  4  1  1"},{"path":"https://gkrotkov.github.io/scoutR/reference/weight_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight Rows — weight_rows","title":"Weight Rows — weight_rows","text":"Weights rows input dataframe cutting dataframe equal length bins multiple-counting rows appropriate weight","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/weight_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight Rows — weight_rows","text":"","code":"weight_rows(df, w)"},{"path":"https://gkrotkov.github.io/scoutR/reference/weight_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight Rows — weight_rows","text":"df input dataframe weighted w numeric vector weights applied `df`, assumed integers","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/weight_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight Rows — weight_rows","text":"Weights applied uniform length bins (weights length-2, two bins 50 length-5, five bins 20 weighting respects order.","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/year_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Year (Statbotics) — year_sb","title":"Year (Statbotics) — year_sb","text":"Returns list representing statbotics info given year","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/year_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Year (Statbotics) — year_sb","text":"","code":"year_sb(yr)"},{"path":"https://gkrotkov.github.io/scoutR/reference/year_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Year (Statbotics) — year_sb","text":"yr year interest, single-length int","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/years_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Years (Statbotics) — years_sb","title":"Years (Statbotics) — years_sb","text":"Returns batch statbotics event objects conforming given parameters","code":""},{"path":"https://gkrotkov.github.io/scoutR/reference/years_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Years (Statbotics) — years_sb","text":"","code":"years_sb(...)"},{"path":"https://gkrotkov.github.io/scoutR/reference/years_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Years (Statbotics) — years_sb","text":"... Parameters passed statbotics /v3/years/ endpoint","code":""}]
